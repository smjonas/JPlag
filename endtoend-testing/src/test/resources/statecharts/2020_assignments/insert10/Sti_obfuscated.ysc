<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_n-KycL2eEe2ie-yNYys-3g" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var assigned : integer&#xA;&#x9;var atShift : boolean&#xA;&#x9;&#xA;&#x9;event go&#xA;&#x9;" name="Sti">
  <regions xmi:type="sgraph:Region" xmi:id="_n-Kycb2eEe2ie-yNYys-3g" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_n-Kycr2eEe2ie-yNYys-3g" specification="entry / ui.setMsg(&quot;You are at home.&quot;)" name="FactoryModel" incomingTransitions="_n-LZ7L2eEe2ie-yNYys-3g">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-Kyc72eEe2ie-yNYys-3g" specification="[true]" target="_n-LZ6r2eEe2ie-yNYys-3g"/>
      <regions xmi:type="sgraph:Region" xmi:id="_n-KydL2eEe2ie-yNYys-3g" name="r1">
        <vertices xmi:type="sgraph:FinalState" xmi:id="_n-Kydb2eEe2ie-yNYys-3g" incomingTransitions="_n-LZg72eEe2ie-yNYys-3g"/>
        <vertices xmi:type="sgraph:Entry" xmi:id="_n-Kydr2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-Kyd72eEe2ie-yNYys-3g" specification="" target="_n-Kyeb2eEe2ie-yNYys-3g"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_n-KyeL2eEe2ie-yNYys-3g" name="ZngMfNYzw5" incomingTransitions="_n-LZhL2eEe2ie-yNYys-3g"/>
        <vertices xmi:type="sgraph:State" xmi:id="_n-Kyeb2eEe2ie-yNYys-3g" name="Idle" incomingTransitions="_n-Kyd72eEe2ie-yNYys-3g _n-LZgb2eEe2ie-yNYys-3g _n-LZgr2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-Kyer2eEe2ie-yNYys-3g" specification="after 1s" target="_n-LZgL2eEe2ie-yNYys-3g"/>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_n-LZgL2eEe2ie-yNYys-3g" incomingTransitions="_n-Kyer2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZgb2eEe2ie-yNYys-3g" specification="default" target="_n-Kyeb2eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZgr2eEe2ie-yNYys-3g" specification="[atShift == true]/&#xD;&#xA;employee.increaseEnergy(-2)" target="_n-Kyeb2eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZg72eEe2ie-yNYys-3g" specification="[true]" target="_n-Kydb2eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZhL2eEe2ie-yNYys-3g" specification="[true]" target="_n-KyeL2eEe2ie-yNYys-3g"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_n-LZhb2eEe2ie-yNYys-3g" name="r3">
        <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZhr2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZh72eEe2ie-yNYys-3g" specification="" target="_n-LZiL2eEe2ie-yNYys-3g"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZiL2eEe2ie-yNYys-3g" name="AtHome" incomingTransitions="_n-LZh72eEe2ie-yNYys-3g _n-LZir2eEe2ie-yNYys-3g _n-LZ3L2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZib2eEe2ie-yNYys-3g" specification="employee.goToWork / ui.setMsg(&quot;Going to work.&quot;);&#xD;&#xA;assigned = util.getRandomInteger(3)" target="_n-LZi72eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZir2eEe2ie-yNYys-3g" specification="employee.goHome / ui.setMsg(&quot;Already at home.&quot;)" target="_n-LZiL2eEe2ie-yNYys-3g"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZi72eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;ui.setMsg(&quot;At work&quot;);&#xD;&#xA;ui.shiftsShow();&#xD;&#xA;ui.shiftHighlightAssigned(assigned);&#xD;&#xA;atShift = false&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.shiftHighlightActive(assigned)&#xD;&#xA;" name="AtWork" incomingTransitions="_n-LZib2eEe2ie-yNYys-3g _n-LZjb2eEe2ie-yNYys-3g _n-LZkb2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZjL2eEe2ie-yNYys-3g" specification="employee.goHome / ui.setMsg(&quot;Going home.&quot;);&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;employee.increaseEnergy(50)" target="_n-LZ2r2eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZjb2eEe2ie-yNYys-3g" specification="employee.shiftClicked / assigned = valueof(employee.shiftClicked)" target="_n-LZi72eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZjr2eEe2ie-yNYys-3g" specification="after 4s [employee.getEnergy() >= 25]" target="_n-LZkL2eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZj72eEe2ie-yNYys-3g" specification="[employee.getEnergy() &lt; 25]" target="_n-LZ3r2eEe2ie-yNYys-3g"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZkL2eEe2ie-yNYys-3g" specification="entry/ ui.pushMsg(); ui.setMsg(&quot;Working shift&quot;);&#xD;&#xA;atShift = true&#xD;&#xA;&#xD;&#xA;exit/ ui.popMsg()" name="Working" incomingTransitions="_n-LZjr2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZkb2eEe2ie-yNYys-3g" specification="after 10s / employee.increasePay(10);&#xD;&#xA;assigned = util.getRandomInteger(3)" target="_n-LZi72eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZkr2eEe2ie-yNYys-3g" specification="[true]" target="_n-LZ3b2eEe2ie-yNYys-3g"/>
          <regions xmi:type="sgraph:Region" xmi:id="_n-LZk72eEe2ie-yNYys-3g" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_n-LZlL2eEe2ie-yNYys-3g" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Unloading" incomingTransitions="_n-LZ1L2eEe2ie-yNYys-3g">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZlb2eEe2ie-yNYys-3g" specification="# toToilet >" target="_n-LZ1b2eEe2ie-yNYys-3g"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZlr2eEe2ie-yNYys-3g" specification="[true]" target="_n-LZzr2eEe2ie-yNYys-3g"/>
              <regions xmi:type="sgraph:Region" xmi:id="_n-LZl72eEe2ie-yNYys-3g" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZmL2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setMsg(&quot;In stock&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Toilet Break&quot;)&#xD;&#xA;" name="AtStock" incomingTransitions="_n-LZnb2eEe2ie-yNYys-3g _n-LZn72eEe2ie-yNYys-3g _n-LZor2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZmb2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZnr2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZmr2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_n-LZp72eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZm72eEe2ie-yNYys-3g" name="WAapzl8ASr" incomingTransitions="_n-LZpL2eEe2ie-yNYys-3g"/>
                <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZnL2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZnb2eEe2ie-yNYys-3g" specification="" target="_n-LZmL2eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZnr2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck&quot;)" name="AtTruck" incomingTransitions="_n-LZmb2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZn72eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZmL2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZoL2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Pick up&quot;]" target="_n-LZpb2eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZob2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material&quot;)" name="AtStockCarrying" incomingTransitions="_n-LZpr2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZor2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Drop&quot;]/&#xD;&#xA;factory.increaseMaterial(1)" target="_n-LZmL2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZo72eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZpb2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZpL2eEe2ie-yNYys-3g" specification="[true]" target="_n-LZm72eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZpb2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material&quot;)" name="AtTruckCarrying" incomingTransitions="_n-LZo72eEe2ie-yNYys-3g _n-LZoL2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZpr2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZob2eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:Exit" xmi:id="_n-LZp72eEe2ie-yNYys-3g" name="toToilet" incomingTransitions="_n-LZmr2eEe2ie-yNYys-3g"/>
                <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZqL2eEe2ie-yNYys-3g" name="deep" incomingTransitions="_n-LZ2L2eEe2ie-yNYys-3g" kind="DEEP_HISTORY"/>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_n-LZqb2eEe2ie-yNYys-3g" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Assembly" incomingTransitions="_n-LZ072eEe2ie-yNYys-3g">
              <regions xmi:type="sgraph:Region" xmi:id="_n-LZqr2eEe2ie-yNYys-3g" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZq72eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough stock to assemble&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="Assemble" incomingTransitions="_n-LZtL2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZrL2eEe2ie-yNYys-3g" specification="[factory.getMaterial > 0]" target="_n-LZsr2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZrb2eEe2ie-yNYys-3g" specification="[true]" target="_n-LZr72eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZrr2eEe2ie-yNYys-3g" name="7mVBqnIffX" incomingTransitions="_n-LZtb2eEe2ie-yNYys-3g"/>
                <vertices xmi:type="sgraph:FinalState" xmi:id="_n-LZr72eEe2ie-yNYys-3g" incomingTransitions="_n-LZrb2eEe2ie-yNYys-3g"/>
                <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZsL2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZsb2eEe2ie-yNYys-3g" specification="" target="_n-LZsr2eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZsr2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;ui.setMsg(&quot;At assembly station&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" name="EnoughStock" incomingTransitions="_n-LZrL2eEe2ie-yNYys-3g _n-LZsb2eEe2ie-yNYys-3g _n-LZs72eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZs72eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Assemble&quot;]/&#xD;&#xA;factory.increaseMaterial(-1);&#xD;&#xA;factory.increaseFinished(1)" target="_n-LZsr2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZtL2eEe2ie-yNYys-3g" specification="[factory.getMaterial == 0]" target="_n-LZq72eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZtb2eEe2ie-yNYys-3g" specification="[true]" target="_n-LZrr2eEe2ie-yNYys-3g"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_n-LZtr2eEe2ie-yNYys-3g" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Loading" incomingTransitions="_n-LZ0r2eEe2ie-yNYys-3g">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZt72eEe2ie-yNYys-3g" specification="# toToilet >" target="_n-LZ1b2eEe2ie-yNYys-3g"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZuL2eEe2ie-yNYys-3g" specification="[true]" target="_n-LZzb2eEe2ie-yNYys-3g"/>
              <regions xmi:type="sgraph:Region" xmi:id="_n-LZub2eEe2ie-yNYys-3g" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZur2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setMsg(&quot;In stock&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet Break&quot;)&#xD;&#xA;" name="AtStock" incomingTransitions="_n-LZwL2eEe2ie-yNYys-3g _n-LZwr2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZu72eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZwb2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZvL2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Pick up&quot;]" target="_n-LZw72eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZvb2eEe2ie-yNYys-3g" specification="[factory.getFinished &lt; 1]" target="_n-LZyL2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZvr2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_n-LZy72eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZv72eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZwL2eEe2ie-yNYys-3g" specification="" target="_n-LZur2eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZwb2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck&quot;)" name="AtTruck" incomingTransitions="_n-LZu72eEe2ie-yNYys-3g _n-LZx72eEe2ie-yNYys-3g _n-LZyb2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZwr2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZur2eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZw72eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying finished product&quot;)" name="AtStockCarrying" incomingTransitions="_n-LZxr2eEe2ie-yNYys-3g _n-LZvL2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZxL2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZxb2eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZxb2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying finished product&quot;)" name="AtTruckCarrying" incomingTransitions="_n-LZxL2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZxr2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZw72eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZx72eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Drop&quot;]/&#xD;&#xA;factory.increaseFinished(-1)" target="_n-LZwb2eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_n-LZyL2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough finished product&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Toilet Break&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="AtStockNotEnoughFinished" incomingTransitions="_n-LZvb2eEe2ie-yNYys-3g">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZyb2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_n-LZwb2eEe2ie-yNYys-3g"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZyr2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_n-LZy72eEe2ie-yNYys-3g"/>
                </vertices>
                <vertices xmi:type="sgraph:Exit" xmi:id="_n-LZy72eEe2ie-yNYys-3g" name="toToilet" incomingTransitions="_n-LZyr2eEe2ie-yNYys-3g _n-LZvr2eEe2ie-yNYys-3g"/>
                <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZzL2eEe2ie-yNYys-3g" name="deep" incomingTransitions="_n-LZ2b2eEe2ie-yNYys-3g" kind="DEEP_HISTORY"/>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_n-LZzb2eEe2ie-yNYys-3g" name="I6Etyt2L0Z" incomingTransitions="_n-LZuL2eEe2ie-yNYys-3g"/>
            <vertices xmi:type="sgraph:FinalState" xmi:id="_n-LZzr2eEe2ie-yNYys-3g" incomingTransitions="_n-LZlr2eEe2ie-yNYys-3g"/>
            <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZz72eEe2ie-yNYys-3g">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ0L2eEe2ie-yNYys-3g" specification="" target="_n-LZ0b2eEe2ie-yNYys-3g"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_n-LZ0b2eEe2ie-yNYys-3g" incomingTransitions="_n-LZ0L2eEe2ie-yNYys-3g">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ0r2eEe2ie-yNYys-3g" specification="[assigned == 2]" target="_n-LZtr2eEe2ie-yNYys-3g"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ072eEe2ie-yNYys-3g" specification="[assigned == 1]" target="_n-LZqb2eEe2ie-yNYys-3g"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ1L2eEe2ie-yNYys-3g" specification="[assigned == 0]" target="_n-LZlL2eEe2ie-yNYys-3g"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_n-LZ1b2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.setMsg(&quot;At toilet&quot;);&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;atShift = false&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;atShift = true" name="Toilet" incomingTransitions="_n-LZlb2eEe2ie-yNYys-3g _n-LZt72eEe2ie-yNYys-3g">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ1r2eEe2ie-yNYys-3g" specification="go [valueof(ui.actionPressed) == &quot;Done&quot;]/&#xD;&#xA;ui.setMsg(&quot;Working shift&quot;)" target="_n-LZ172eEe2ie-yNYys-3g"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_n-LZ172eEe2ie-yNYys-3g" incomingTransitions="_n-LZ1r2eEe2ie-yNYys-3g">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ2L2eEe2ie-yNYys-3g" specification="[assigned == 0]" target="_n-LZqL2eEe2ie-yNYys-3g"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ2b2eEe2ie-yNYys-3g" specification="[assigned == 2]" target="_n-LZzL2eEe2ie-yNYys-3g"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZ2r2eEe2ie-yNYys-3g" name="ToHome" incomingTransitions="_n-LZjL2eEe2ie-yNYys-3g _n-LZ272eEe2ie-yNYys-3g _n-LZ372eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ272eEe2ie-yNYys-3g" specification="[employee.getEnergy > 100]/&#xD;&#xA;employee.increaseEnergy(-1)" target="_n-LZ2r2eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ3L2eEe2ie-yNYys-3g" specification="[employee.getEnergy &lt;= 100]" target="_n-LZiL2eEe2ie-yNYys-3g"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZ3b2eEe2ie-yNYys-3g" name="TTKeInY0sH" incomingTransitions="_n-LZkr2eEe2ie-yNYys-3g"/>
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZ3r2eEe2ie-yNYys-3g" specification="entry/&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough energy&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="NotEnougEnergy" incomingTransitions="_n-LZj72eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ372eEe2ie-yNYys-3g" specification="employee.goHome / ui.setMsg(&quot;Going home.&quot;);&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;employee.increaseEnergy(50)" target="_n-LZ2r2eEe2ie-yNYys-3g"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_n-LZ4L2eEe2ie-yNYys-3g" name="r2">
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZ4b2eEe2ie-yNYys-3g" name="RhzEeNCx51" incomingTransitions="_n-LZ5r2eEe2ie-yNYys-3g"/>
        <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZ4r2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ472eEe2ie-yNYys-3g" specification="" target="_n-LZ5L2eEe2ie-yNYys-3g"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZ5L2eEe2ie-yNYys-3g" specification="" name="Waiting" incomingTransitions="_n-LZ472eEe2ie-yNYys-3g _n-LZ6b2eEe2ie-yNYys-3g _n-LZ6L2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ5b2eEe2ie-yNYys-3g" specification="ui.actionPressed" target="_n-LZ572eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ5r2eEe2ie-yNYys-3g" specification="[true]" target="_n-LZ4b2eEe2ie-yNYys-3g"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_n-LZ572eEe2ie-yNYys-3g" specification="" name="a" incomingTransitions="_n-LZ5b2eEe2ie-yNYys-3g">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ6L2eEe2ie-yNYys-3g" specification="after 500ms/ raise go" target="_n-LZ5L2eEe2ie-yNYys-3g"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ6b2eEe2ie-yNYys-3g" specification="ui.actionReleased" target="_n-LZ5L2eEe2ie-yNYys-3g"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_n-LZ6r2eEe2ie-yNYys-3g" name="9a2TckIlDp" incomingTransitions="_n-Kyc72eEe2ie-yNYys-3g"/>
    <vertices xmi:type="sgraph:Entry" xmi:id="_n-LZ672eEe2ie-yNYys-3g">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_n-LZ7L2eEe2ie-yNYys-3g" specification="" target="_n-Kycr2eEe2ie-yNYys-3g"/>
    </vertices>
  </regions>
</sgraph:Statechart>
