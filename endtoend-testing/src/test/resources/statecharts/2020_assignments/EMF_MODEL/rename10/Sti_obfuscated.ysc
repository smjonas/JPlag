<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_OczrYNLDEe2rSIK3QmapIA" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var assigned : integer&#xA;&#x9;var atShift : boolean&#xA;&#x9;&#xA;&#x9;event go&#xA;&#x9;" name="Sti">
  <regions xmi:type="sgraph:Region" xmi:id="_OczrYdLDEe2rSIK3QmapIA" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_OczrYtLDEe2rSIK3QmapIA" specification="entry / ui.setMsg(&quot;You are at home.&quot;)" name="FactoryModel" incomingTransitions="_Oc0SedLDEe2rSIK3QmapIA">
      <regions xmi:type="sgraph:Region" xmi:id="_OczrY9LDEe2rSIK3QmapIA" name="hcF9dM0XI0">
        <vertices xmi:type="sgraph:Entry" xmi:id="_OczrZNLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrZdLDEe2rSIK3QmapIA" specification="" target="_OczrZtLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OczrZtLDEe2rSIK3QmapIA" name="siEvjf4Grk" incomingTransitions="_OczrZdLDEe2rSIK3QmapIA _OczradLDEe2rSIK3QmapIA _OczratLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrZ9LDEe2rSIK3QmapIA" specification="after 1s" target="_OczraNLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_OczraNLDEe2rSIK3QmapIA" incomingTransitions="_OczrZ9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczradLDEe2rSIK3QmapIA" specification="default" target="_OczrZtLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczratLDEe2rSIK3QmapIA" specification="[atShift == true]/&#xD;&#xA;employee.increaseEnergy(-2)" target="_OczrZtLDEe2rSIK3QmapIA"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_Oczra9LDEe2rSIK3QmapIA" name="r3">
        <vertices xmi:type="sgraph:Entry" xmi:id="_OczrbNLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrbdLDEe2rSIK3QmapIA" specification="" target="_OczrbtLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OczrbtLDEe2rSIK3QmapIA" name="AtHome" incomingTransitions="_OczrbdLDEe2rSIK3QmapIA _OczrcNLDEe2rSIK3QmapIA _Oczrt9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrb9LDEe2rSIK3QmapIA" specification="employee.goToWork / ui.setMsg(&quot;Going to work.&quot;);&#xD;&#xA;assigned = util.getRandomInteger(3)" target="_OczrcdLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrcNLDEe2rSIK3QmapIA" specification="employee.goHome / ui.setMsg(&quot;Already at home.&quot;)" target="_OczrbtLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OczrcdLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;ui.setMsg(&quot;At work&quot;);&#xD;&#xA;ui.shiftsShow();&#xD;&#xA;ui.shiftHighlightAssigned(assigned);&#xD;&#xA;atShift = false&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.shiftHighlightActive(assigned)&#xD;&#xA;" name="G9wWBC9Dg2" incomingTransitions="_Oczrb9LDEe2rSIK3QmapIA _Oczrc9LDEe2rSIK3QmapIA _Oczrd9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrctLDEe2rSIK3QmapIA" specification="employee.goHome / ui.setMsg(&quot;Going home.&quot;);&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;employee.increaseEnergy(50)" target="_OczrtdLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrc9LDEe2rSIK3QmapIA" specification="employee.shiftClicked / assigned = valueof(employee.shiftClicked)" target="_OczrcdLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrdNLDEe2rSIK3QmapIA" specification="after 4s [employee.getEnergy() >= 25]" target="_OczrdtLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrddLDEe2rSIK3QmapIA" specification="[employee.getEnergy() &lt; 25]" target="_OczruNLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OczrdtLDEe2rSIK3QmapIA" specification="entry/ ui.pushMsg(); ui.setMsg(&quot;Working shift&quot;);&#xD;&#xA;atShift = true&#xD;&#xA;&#xD;&#xA;exit/ ui.popMsg()" name="etBQnKqmPK" incomingTransitions="_OczrdNLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrd9LDEe2rSIK3QmapIA" specification="after 10s / employee.increasePay(10);&#xD;&#xA;assigned = util.getRandomInteger(3)" target="_OczrcdLDEe2rSIK3QmapIA"/>
          <regions xmi:type="sgraph:Region" xmi:id="_OczreNLDEe2rSIK3QmapIA" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_OczredLDEe2rSIK3QmapIA" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Unloading" incomingTransitions="_Oczrr9LDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczretLDEe2rSIK3QmapIA" specification="# toToilet >" target="_OczrsNLDEe2rSIK3QmapIA"/>
              <regions xmi:type="sgraph:Region" xmi:id="_Oczre9LDEe2rSIK3QmapIA" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_OczrfNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setMsg(&quot;In stock&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Toilet Break&quot;)&#xD;&#xA;" name="AtStock" incomingTransitions="_OczrgNLDEe2rSIK3QmapIA _OczrgtLDEe2rSIK3QmapIA _OczrhdLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrfdLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_OczrgdLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrftLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_OczridLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_Oczrf9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrgNLDEe2rSIK3QmapIA" specification="" target="_OczrfNLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OczrgdLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck&quot;)" name="AtTruck" incomingTransitions="_OczrfdLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrgtLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_OczrfNLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrg9LDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Pick up&quot;]" target="_Oczrh9LDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OczrhNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material&quot;)" name="AtStockCarrying" incomingTransitions="_OczriNLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrhdLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Drop&quot;]/&#xD;&#xA;factory.increaseMaterial(1)" target="_OczrfNLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrhtLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_Oczrh9LDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oczrh9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material&quot;)" name="AtTruckCarrying" incomingTransitions="_OczrhtLDEe2rSIK3QmapIA _Oczrg9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczriNLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_OczrhNLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:Exit" xmi:id="_OczridLDEe2rSIK3QmapIA" name="toToilet" incomingTransitions="_OczrftLDEe2rSIK3QmapIA"/>
                <vertices xmi:type="sgraph:Entry" xmi:id="_OczritLDEe2rSIK3QmapIA" name="d413LT9eUK" incomingTransitions="_Oczrs9LDEe2rSIK3QmapIA" kind="DEEP_HISTORY"/>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Oczri9LDEe2rSIK3QmapIA" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Assembly" incomingTransitions="_OczrrtLDEe2rSIK3QmapIA">
              <regions xmi:type="sgraph:Region" xmi:id="_OczrjNLDEe2rSIK3QmapIA" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_OczrjdLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough stock to assemble&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="Assemble" incomingTransitions="_Oczrk9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrjtLDEe2rSIK3QmapIA" specification="[factory.getMaterial > 0]" target="_OczrkdLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_Oczrj9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrkNLDEe2rSIK3QmapIA" specification="" target="_OczrkdLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OczrkdLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;ui.setMsg(&quot;At assembly station&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" name="xxhlTLS9jT" incomingTransitions="_OczrjtLDEe2rSIK3QmapIA _OczrkNLDEe2rSIK3QmapIA _OczrktLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrktLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Assemble&quot;]/&#xD;&#xA;factory.increaseMaterial(-1);&#xD;&#xA;factory.increaseFinished(1)" target="_OczrkdLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrk9LDEe2rSIK3QmapIA" specification="[factory.getMaterial == 0]" target="_OczrjdLDEe2rSIK3QmapIA"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OczrlNLDEe2rSIK3QmapIA" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Loading" incomingTransitions="_OczrrdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrldLDEe2rSIK3QmapIA" specification="# toToilet >" target="_OczrsNLDEe2rSIK3QmapIA"/>
              <regions xmi:type="sgraph:Region" xmi:id="_OczrltLDEe2rSIK3QmapIA" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_Oczrl9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setMsg(&quot;In stock&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet Break&quot;)&#xD;&#xA;" name="AtStock" incomingTransitions="_OczrndLDEe2rSIK3QmapIA _Oczrn9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrmNLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_OczrntLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrmdLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Pick up&quot;]" target="_OczroNLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrmtLDEe2rSIK3QmapIA" specification="[factory.getFinished &lt; 1]" target="_OczrpdLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrm9LDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_OczrqNLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_OczrnNLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrndLDEe2rSIK3QmapIA" specification="" target="_Oczrl9LDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OczrntLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck&quot;)" name="AtTruck" incomingTransitions="_OczrmNLDEe2rSIK3QmapIA _OczrpNLDEe2rSIK3QmapIA _OczrptLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrn9LDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_Oczrl9LDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OczroNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying finished product&quot;)" name="AtStockCarrying" incomingTransitions="_Oczro9LDEe2rSIK3QmapIA _OczrmdLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrodLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_OczrotLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OczrotLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying finished product&quot;)" name="AtTruckCarrying" incomingTransitions="_OczrodLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczro9LDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_OczroNLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrpNLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Drop&quot;]/&#xD;&#xA;factory.increaseFinished(-1)" target="_OczrntLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OczrpdLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough finished product&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Toilet Break&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="IcDhiHULnK" incomingTransitions="_OczrmtLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrptLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_OczrntLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrp9LDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_OczrqNLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:Exit" xmi:id="_OczrqNLDEe2rSIK3QmapIA" name="s9zZPJBbDN" incomingTransitions="_Oczrp9LDEe2rSIK3QmapIA _Oczrm9LDEe2rSIK3QmapIA"/>
                <vertices xmi:type="sgraph:Entry" xmi:id="_OczrqdLDEe2rSIK3QmapIA" name="deep" incomingTransitions="_OczrtNLDEe2rSIK3QmapIA" kind="DEEP_HISTORY"/>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_OczrqtLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrq9LDEe2rSIK3QmapIA" specification="" target="_OczrrNLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_OczrrNLDEe2rSIK3QmapIA" incomingTransitions="_Oczrq9LDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrrdLDEe2rSIK3QmapIA" specification="[assigned == 2]" target="_OczrlNLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrrtLDEe2rSIK3QmapIA" specification="[assigned == 1]" target="_Oczri9LDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrr9LDEe2rSIK3QmapIA" specification="[assigned == 0]" target="_OczredLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OczrsNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setMsg(&quot;At toilet&quot;);&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;atShift = false&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;atShift = true" name="Toilet" incomingTransitions="_OczretLDEe2rSIK3QmapIA _OczrldLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrsdLDEe2rSIK3QmapIA" specification="go [valueof(ui.actionPressed) == &quot;Done&quot;]/&#xD;&#xA;ui.setMsg(&quot;Working shift&quot;)" target="_OczrstLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_OczrstLDEe2rSIK3QmapIA" incomingTransitions="_OczrsdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrs9LDEe2rSIK3QmapIA" specification="[assigned == 0]" target="_OczritLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrtNLDEe2rSIK3QmapIA" specification="[assigned == 2]" target="_OczrqdLDEe2rSIK3QmapIA"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OczrtdLDEe2rSIK3QmapIA" name="ToHome" incomingTransitions="_OczrctLDEe2rSIK3QmapIA _OczrttLDEe2rSIK3QmapIA _OczrudLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrttLDEe2rSIK3QmapIA" specification="[employee.getEnergy > 100]/&#xD;&#xA;employee.increaseEnergy(-1)" target="_OczrtdLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oczrt9LDEe2rSIK3QmapIA" specification="[employee.getEnergy &lt;= 100]" target="_OczrbtLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OczruNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough energy&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="NotEnougEnergy" incomingTransitions="_OczrddLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OczrudLDEe2rSIK3QmapIA" specification="employee.goHome / ui.setMsg(&quot;Going home.&quot;);&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;employee.increaseEnergy(50)" target="_OczrtdLDEe2rSIK3QmapIA"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_Oc0ScNLDEe2rSIK3QmapIA" name="r2">
        <vertices xmi:type="sgraph:Entry" xmi:id="_Oc0ScdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc0SctLDEe2rSIK3QmapIA" specification="" target="_Oc0Sc9LDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Oc0Sc9LDEe2rSIK3QmapIA" specification="" name="Waiting" incomingTransitions="_Oc0SctLDEe2rSIK3QmapIA _Oc0Sd9LDEe2rSIK3QmapIA _Oc0SdtLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc0SdNLDEe2rSIK3QmapIA" specification="ui.actionPressed" target="_Oc0SddLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Oc0SddLDEe2rSIK3QmapIA" specification="" name="a" incomingTransitions="_Oc0SdNLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc0SdtLDEe2rSIK3QmapIA" specification="after 500ms/ raise go" target="_Oc0Sc9LDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc0Sd9LDEe2rSIK3QmapIA" specification="ui.actionReleased" target="_Oc0Sc9LDEe2rSIK3QmapIA"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_Oc0SeNLDEe2rSIK3QmapIA">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc0SedLDEe2rSIK3QmapIA" specification="" target="_OczrYtLDEe2rSIK3QmapIA"/>
    </vertices>
  </regions>
</sgraph:Statechart>
