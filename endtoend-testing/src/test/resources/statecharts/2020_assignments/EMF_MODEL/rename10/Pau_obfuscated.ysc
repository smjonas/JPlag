<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_OcVKQNLDEe2rSIK3QmapIA" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var numb: integer&#xA;&#x9;var atToilet: boolean&#xA;&#x9;var txt: string&#xA;&#x9;&#xA;&#x9;event walk&#xA;&#x9;event pickup&#xA;&#x9;event drop&#xA;&#x9;event toilet&#xA;&#x9;event done&#xA;&#x9;event assemble&#xA;&#xA;&#x9;&#xA;" name="Pau">
  <regions xmi:type="sgraph:Region" xmi:id="_OcVKQdLDEe2rSIK3QmapIA" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_OcVKQtLDEe2rSIK3QmapIA" specification="entry/ ui.setMsg(&quot;At Work:&quot;);ui.pushMsg" name="GdUpHSPjRa" incomingTransitions="_OcVKwtLDEe2rSIK3QmapIA">
      <regions xmi:type="sgraph:Region" xmi:id="_OcVKQ9LDEe2rSIK3QmapIA" name="AtWork">
        <vertices xmi:type="sgraph:State" xmi:id="_OcVKRNLDEe2rSIK3QmapIA" specification="entry / ui.shiftHighlightActive(numb);&#xA;atToilet = false;&#xA;ui.setMsg(&quot;Working shift&quot;);&#xA;ui.pushMsg()&#xA;" name="rizIDCwAQU" incomingTransitions="_OcVKv9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKRdLDEe2rSIK3QmapIA" specification="after 10 s/ui.setActions('');ui.shiftsShow(); employee.increasePay(10);numb = util.getRandomInteger(3);ui.popMsg()" target="_OcVKvNLDEe2rSIK3QmapIA"/>
          <regions xmi:type="sgraph:Region" xmi:id="_OcVKRtLDEe2rSIK3QmapIA" name="Shifts">
            <vertices xmi:type="sgraph:State" xmi:id="_OcVKR9LDEe2rSIK3QmapIA" specification="" name="entry" incomingTransitions="_OcVKS9LDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKSNLDEe2rSIK3QmapIA" specification="after 0 ms  [numb == 0 || numb == 2] " target="_OcVKTNLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKSdLDEe2rSIK3QmapIA" specification="after 0 ms  [numb == 1 ]" target="_OcVKq9LDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKStLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKS9LDEe2rSIK3QmapIA" specification="" target="_OcVKR9LDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OcVKTNLDEe2rSIK3QmapIA" name="unloading/loading/timers" incomingTransitions="_OcVKSNLDEe2rSIK3QmapIA">
              <regions xmi:type="sgraph:Region" xmi:id="_OcVKTdLDEe2rSIK3QmapIA" name="unloading/loading">
                <vertices xmi:type="sgraph:State" xmi:id="_OcVKTtLDEe2rSIK3QmapIA" specification="&#xA;" name="AtTruck" incomingTransitions="_OcVKZ9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKT9LDEe2rSIK3QmapIA" specification="walk" target="_OcVKZtLDEe2rSIK3QmapIA"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKUNLDEe2rSIK3QmapIA" name="mmwoVr7OMk">
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKUdLDEe2rSIK3QmapIA" specification="entry /&#xA;ui.setActions(&quot;Walk,Pickup&quot;);&#xA;ui.setMsg(&quot;At Truck&quot;)" name="case unload" incomingTransitions="_OcVKV9LDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKUtLDEe2rSIK3QmapIA" specification="pickup" target="_OcVKXtLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKU9LDEe2rSIK3QmapIA" specification="entry /&#xA;ui.setActions(&quot;Walk&quot;);&#xA;ui.setMsg(&quot;At Truck&quot;)" name="case load" incomingTransitions="_OcVKYNLDEe2rSIK3QmapIA _OcVKWNLDEe2rSIK3QmapIA"/>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKVNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKVdLDEe2rSIK3QmapIA" specification="" target="_OcVKVtLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKVtLDEe2rSIK3QmapIA" name="entry" incomingTransitions="_OcVKVdLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKV9LDEe2rSIK3QmapIA" specification="after 0ms [numb == 0]" target="_OcVKUdLDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKWNLDEe2rSIK3QmapIA" specification="after 0ms [numb == 2]" target="_OcVKU9LDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKWdLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKWtLDEe2rSIK3QmapIA" specification="" target="_OcVKZtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OcVKW9LDEe2rSIK3QmapIA" specification="" name="AtTruckCarrying" incomingTransitions="_OcVKc9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKXNLDEe2rSIK3QmapIA" specification="walk" target="_OcVKctLDEe2rSIK3QmapIA"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKXdLDEe2rSIK3QmapIA" name="Truck Carrying">
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKXtLDEe2rSIK3QmapIA" specification="entry / ui.setActions(&quot;Walk&quot;); &#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="case unload" incomingTransitions="_OcVKUtLDEe2rSIK3QmapIA _OcVKZdLDEe2rSIK3QmapIA"/>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKX9LDEe2rSIK3QmapIA" specification="entry / ui.setActions(&quot;Walk,Drop&quot;); &#xA;ui.setMsg(&quot;At truck, carrying finished product.&quot;)" name="case load" incomingTransitions="_OcVKZNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKYNLDEe2rSIK3QmapIA" specification="drop/factory.increaseFinished(-1)" target="_OcVKU9LDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKYdLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKYtLDEe2rSIK3QmapIA" specification="" target="_OcVKY9LDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKY9LDEe2rSIK3QmapIA" name="entry" incomingTransitions="_OcVKYtLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKZNLDEe2rSIK3QmapIA" specification="after 0ms [numb == 2]" target="_OcVKX9LDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKZdLDEe2rSIK3QmapIA" specification="after 0ms [numb == 0]" target="_OcVKXtLDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OcVKZtLDEe2rSIK3QmapIA" specification="&#xA;" name="AtStock" incomingTransitions="_OcVKT9LDEe2rSIK3QmapIA _OcVKWtLDEe2rSIK3QmapIA _OcVKftLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKZ9LDEe2rSIK3QmapIA" specification="walk" target="_OcVKTtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKaNLDEe2rSIK3QmapIA" specification="toilet" target="_OcVKfdLDEe2rSIK3QmapIA"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKadLDEe2rSIK3QmapIA" name="Stock">
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKatLDEe2rSIK3QmapIA" specification="entry / ui.setActions('Walk,Toilet break'); &#xA;ui.setMsg(&quot;At stock&quot;)" name="case unload" incomingTransitions="_OcVKdtLDEe2rSIK3QmapIA _OcVKcdLDEe2rSIK3QmapIA"/>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKa9LDEe2rSIK3QmapIA" specification="entry / ui.setActions('Walk,Toilet break,Pickup'); &#xA;ui.setMsg(&quot;At stock&quot;)&#xA;" name="case load" incomingTransitions="_OcVKcNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKbNLDEe2rSIK3QmapIA" specification="pickup" target="_OcVKd9LDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKbdLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKbtLDEe2rSIK3QmapIA" specification="" target="_OcVKb9LDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKb9LDEe2rSIK3QmapIA" name="entry" incomingTransitions="_OcVKbtLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKcNLDEe2rSIK3QmapIA" specification="after 0ms [numb == 2]" target="_OcVKa9LDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKcdLDEe2rSIK3QmapIA" specification="after 0ms [numb == 0]" target="_OcVKatLDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OcVKctLDEe2rSIK3QmapIA" specification="" name="AtStockCarrying" incomingTransitions="_OcVKXNLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKc9LDEe2rSIK3QmapIA" specification="walk" target="_OcVKW9LDEe2rSIK3QmapIA"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKdNLDEe2rSIK3QmapIA" name="Stock Carrying">
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKddLDEe2rSIK3QmapIA" specification="entry / ui.setActions(&quot;Walk,Drop&quot;); &#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="case unload" incomingTransitions="_OcVKfNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKdtLDEe2rSIK3QmapIA" specification="drop/factory.increaseMaterial(1)" target="_OcVKatLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKd9LDEe2rSIK3QmapIA" specification="entry / ui.setActions(&quot;Walk&quot;); &#xA;ui.setMsg(&quot;At stock, carrying finished product.&quot;)" name="Mwxk7XJI1F" incomingTransitions="_OcVKbNLDEe2rSIK3QmapIA _OcVKe9LDEe2rSIK3QmapIA"/>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKeNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKedLDEe2rSIK3QmapIA" specification="" target="_OcVKetLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKetLDEe2rSIK3QmapIA" name="entry" incomingTransitions="_OcVKedLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKe9LDEe2rSIK3QmapIA" specification="after 0ms [numb == 2]" target="_OcVKd9LDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKfNLDEe2rSIK3QmapIA" specification="after 0ms [numb == 0]" target="_OcVKddLDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OcVKfdLDEe2rSIK3QmapIA" specification="entry/ui.setActions(&quot;&quot;);ui.setActions(&quot;Done&quot;); atToilet = true;ui.setMsg(&quot;At toilet.&quot;)" name="AtToilet" incomingTransitions="_OcVKaNLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKftLDEe2rSIK3QmapIA" specification="done/atToilet = false" target="_OcVKZtLDEe2rSIK3QmapIA"/>
                </vertices>
              </regions>
              <regions xmi:type="sgraph:Region" xmi:id="_OcVKf9LDEe2rSIK3QmapIA" name="timers">
                <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKgNLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKgdLDEe2rSIK3QmapIA" specification="" target="_OcVKgtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_OcVKgtLDEe2rSIK3QmapIA" name="JjNWIOhRMs" incomingTransitions="_OcVKgdLDEe2rSIK3QmapIA">
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKg9LDEe2rSIK3QmapIA" name="Walk">
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKhNLDEe2rSIK3QmapIA" name="Start" incomingTransitions="_OcVKitLDEe2rSIK3QmapIA _OcVKh9LDEe2rSIK3QmapIA _OcVKiNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKhdLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Walk']" target="_OcVKhtLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKhtLDEe2rSIK3QmapIA" name="Time" incomingTransitions="_OcVKhdLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKh9LDEe2rSIK3QmapIA" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Walk']" target="_OcVKhNLDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKiNLDEe2rSIK3QmapIA" specification="after 500ms/raise walk" target="_OcVKhNLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKidLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKitLDEe2rSIK3QmapIA" specification="&#xA;" target="_OcVKhNLDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKi9LDEe2rSIK3QmapIA" name="Pickup">
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKjNLDEe2rSIK3QmapIA" name="Start" incomingTransitions="_OcVKktLDEe2rSIK3QmapIA _OcVKj9LDEe2rSIK3QmapIA _OcVKkNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKjdLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Pickup']" target="_OcVKjtLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKjtLDEe2rSIK3QmapIA" name="Time" incomingTransitions="_OcVKjdLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKj9LDEe2rSIK3QmapIA" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Pickup']" target="_OcVKjNLDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKkNLDEe2rSIK3QmapIA" specification="after 500ms/raise pickup" target="_OcVKjNLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKkdLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKktLDEe2rSIK3QmapIA" specification="&#xA;" target="_OcVKjNLDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKk9LDEe2rSIK3QmapIA" name="Drop">
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKlNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKldLDEe2rSIK3QmapIA" specification="&#xA;" target="_OcVKmdLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKltLDEe2rSIK3QmapIA" name="Time" incomingTransitions="_OcVKmtLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKl9LDEe2rSIK3QmapIA" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Drop']" target="_OcVKmdLDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKmNLDEe2rSIK3QmapIA" specification="after 500ms/raise drop" target="_OcVKmdLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKmdLDEe2rSIK3QmapIA" name="Start" incomingTransitions="_OcVKldLDEe2rSIK3QmapIA _OcVKl9LDEe2rSIK3QmapIA _OcVKmNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKmtLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Drop']" target="_OcVKltLDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKm9LDEe2rSIK3QmapIA" name="SYdjZevauO">
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKnNLDEe2rSIK3QmapIA" specification="" name="Time" incomingTransitions="_OcVKotLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKndLDEe2rSIK3QmapIA" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Done']" target="_OcVKodLDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKntLDEe2rSIK3QmapIA" specification="after 500ms/raise done" target="_OcVKodLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKn9LDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKoNLDEe2rSIK3QmapIA" specification="&#xA;" target="_OcVKodLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKodLDEe2rSIK3QmapIA" specification="" name="Start" incomingTransitions="_OcVKoNLDEe2rSIK3QmapIA _OcVKndLDEe2rSIK3QmapIA _OcVKntLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKotLDEe2rSIK3QmapIA" specification="after 10 ms ,ui.actionPressed[valueof(ui.actionPressed) == 'Done']" target="_OcVKnNLDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_OcVKo9LDEe2rSIK3QmapIA" name="ToiletBreak">
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKpNLDEe2rSIK3QmapIA" specification="" name="Time" incomingTransitions="_OcVKqNLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKpdLDEe2rSIK3QmapIA" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Toilet break']" target="_OcVKp9LDEe2rSIK3QmapIA"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKptLDEe2rSIK3QmapIA" specification="after 500ms/raise toilet" target="_OcVKp9LDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_OcVKp9LDEe2rSIK3QmapIA" name="Start" incomingTransitions="_OcVKqtLDEe2rSIK3QmapIA _OcVKpdLDEe2rSIK3QmapIA _OcVKptLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKqNLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Toilet break']" target="_OcVKpNLDEe2rSIK3QmapIA"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKqdLDEe2rSIK3QmapIA">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKqtLDEe2rSIK3QmapIA" specification="&#xA;" target="_OcVKp9LDEe2rSIK3QmapIA"/>
                    </vertices>
                  </regions>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OcVKq9LDEe2rSIK3QmapIA" specification="entry / &#xA;ui.setActions(&quot;Assemble&quot;);&#xA;txt = factory.getMaterial > 0 ? &quot;You can assemble&quot;:&quot;Not enough materials left&quot;;&#xA;ui.setMsg(txt)" name="xICM0UPfX8" incomingTransitions="_OcVKrNLDEe2rSIK3QmapIA _OcVKSdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKrNLDEe2rSIK3QmapIA" specification="assemble[factory.getMaterial > 0]/ factory.increaseMaterial(-1);factory.increaseFinished(1)" target="_OcVKq9LDEe2rSIK3QmapIA"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_OcVKrdLDEe2rSIK3QmapIA" name="EnergyTimer">
            <vertices xmi:type="sgraph:State" xmi:id="_OcVKrtLDEe2rSIK3QmapIA" name="energy" incomingTransitions="_OcVKsdLDEe2rSIK3QmapIA _OcVKr9LDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKr9LDEe2rSIK3QmapIA" specification="after 1s[atToilet == false]/employee.increaseEnergy(-2)" target="_OcVKrtLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKsNLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKsdLDEe2rSIK3QmapIA" specification="" target="_OcVKrtLDEe2rSIK3QmapIA"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_OcVKstLDEe2rSIK3QmapIA" name="r0ZTdEbsJl">
            <vertices xmi:type="sgraph:State" xmi:id="_OcVKs9LDEe2rSIK3QmapIA" name="Time" incomingTransitions="_OcVKudLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKtNLDEe2rSIK3QmapIA" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Assemble']" target="_OcVKuNLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKtdLDEe2rSIK3QmapIA" specification="after 500ms/raise assemble" target="_OcVKuNLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKttLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKt9LDEe2rSIK3QmapIA" specification="&#xA;" target="_OcVKuNLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OcVKuNLDEe2rSIK3QmapIA" name="Start" incomingTransitions="_OcVKt9LDEe2rSIK3QmapIA _OcVKtNLDEe2rSIK3QmapIA _OcVKtdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKudLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Assemble']" target="_OcVKs9LDEe2rSIK3QmapIA"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKutLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKu9LDEe2rSIK3QmapIA" specification="" target="_OcVKvNLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OcVKvNLDEe2rSIK3QmapIA" specification="entry / ui.shiftHighlightAssigned(numb);&#xA;txt = employee.getEnergy>=25 ? &quot;Selected shift will start soon...&quot;:&quot;Not enough energy left. Go home&quot;;&#xA;ui.setMsg(txt)&#xA;&#xA;" name="GracePeriod" incomingTransitions="_OcVKu9LDEe2rSIK3QmapIA _OcVKvdLDEe2rSIK3QmapIA _OcVKRdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKvdLDEe2rSIK3QmapIA" specification="employee.shiftClicked / numb = valueof(employee.shiftClicked)" target="_OcVKvNLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKvtLDEe2rSIK3QmapIA" specification="employee.goHome / ui.popMsg();ui.setMsg(&quot;At home&quot;);ui.shiftsHide();&#xA;employee.increaseEnergy(50 )" target="_OcVKwNLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKv9LDEe2rSIK3QmapIA" specification="after 4 s[employee.getEnergy>=25]" target="_OcVKRNLDEe2rSIK3QmapIA"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_OcVKwNLDEe2rSIK3QmapIA" specification="" name="AtHome" incomingTransitions="_OcVKxNLDEe2rSIK3QmapIA _OcVKwdLDEe2rSIK3QmapIA _OcVKvtLDEe2rSIK3QmapIA">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKwdLDEe2rSIK3QmapIA" specification="employee.goHome / ui.setMsg(&quot;Already at home.&quot;)" target="_OcVKwNLDEe2rSIK3QmapIA"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKwtLDEe2rSIK3QmapIA" specification="employee.goToWork / ui.setMsg(&quot;At work&quot;); ui.shiftsShow(); numb = util.getRandomInteger(3)&#xA;" target="_OcVKQtLDEe2rSIK3QmapIA"/>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_OcVKw9LDEe2rSIK3QmapIA">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OcVKxNLDEe2rSIK3QmapIA" specification="/ui.setMsg(&quot;At home&quot;)" target="_OcVKwNLDEe2rSIK3QmapIA"/>
    </vertices>
  </regions>
</sgraph:Statechart>
