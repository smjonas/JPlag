<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_OceUMNLDEe2rSIK3QmapIA" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var choice  = -1&#xA;&#x9;var currentTask = &quot;&quot;&#xA;&#x9;event TakeBreak&#xA;&#x9;event TaskSucceeded&#xA;&#x9;event StartWorking&#xA;&#x9;event EndOfShift&#xA;&#xA;&#x9;&#xA;" name="Roa">
  <regions xmi:type="sgraph:Region" xmi:id="_OceUMdLDEe2rSIK3QmapIA" name="UWOFOVpJm8">
    <vertices xmi:type="sgraph:Entry" xmi:id="_OceUMtLDEe2rSIK3QmapIA">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUM9LDEe2rSIK3QmapIA" specification="" target="_OceUNNLDEe2rSIK3QmapIA"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_OceUNNLDEe2rSIK3QmapIA" specification="entry / ui.setMsg(&quot;You are at home.&quot;); ui.shiftsHide()&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;&#x9;employee.increaseEnergy(50)" name="Home" incomingTransitions="_OceUM9LDEe2rSIK3QmapIA _OceUN9LDEe2rSIK3QmapIA">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUNdLDEe2rSIK3QmapIA" specification="employee.goToWork" target="_OceUNtLDEe2rSIK3QmapIA"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_OceUNtLDEe2rSIK3QmapIA" specification="entry / &#xD;&#xA;ui.setMsg(&quot;You are at work.&quot;); &#xD;&#xA;ui.shiftsShow()" name="mVeHsw1hCc" incomingTransitions="_OceUNdLDEe2rSIK3QmapIA">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUN9LDEe2rSIK3QmapIA" specification="employee.goHome" target="_OceUNNLDEe2rSIK3QmapIA"/>
      <regions xmi:type="sgraph:Region" xmi:id="_OceUONLDEe2rSIK3QmapIA" name="r1">
        <vertices xmi:type="sgraph:Entry" xmi:id="_OceUOdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUOtLDEe2rSIK3QmapIA" specification="" target="_OceUWNLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OceUO9LDEe2rSIK3QmapIA" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(0);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at Unload.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;);&#xD;&#xA;&#x9;ui.popMsg()" name="Unload" incomingTransitions="_OceUV9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUPNLDEe2rSIK3QmapIA" specification="after 10s / employee.increasePay(10)" target="_OceUWNLDEe2rSIK3QmapIA"/>
          <regions xmi:type="sgraph:Region" xmi:id="_OceUPdLDEe2rSIK3QmapIA" name="mzMQih7sv4">
            <vertices xmi:type="sgraph:Entry" xmi:id="_OceUPtLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUP9LDEe2rSIK3QmapIA" specification="" target="_OceUQNLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUQNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,ToiletBreak&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;In Stock&quot;)" name="AtStock" incomingTransitions="_OceUP9LDEe2rSIK3QmapIA _OceUStLDEe2rSIK3QmapIA _OceURdLDEe2rSIK3QmapIA _OceUTNLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUQdLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_OceUQ9LDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUQtLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;ToiletBreak&quot;]" target="_OceUS9LDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUQ9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck&quot;)" name="SvFPYW6Jad" incomingTransitions="_OceUQdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceURNLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Pick up&quot;]" target="_OceURtLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceURdLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_OceUQNLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceURtLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck Carrying&quot;)" name="AtTruckCarrying" incomingTransitions="_OceURNLDEe2rSIK3QmapIA _OceUSdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUR9LDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_OceUSNLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUSNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Stock Carrying&quot;)" name="AtStockCarrying" incomingTransitions="_OceUR9LDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUSdLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_OceURtLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUStLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Drop&quot;]/factory.increaseMaterial(1)" target="_OceUQNLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUS9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;raise TakeBreak;&#xD;&#xA;&#x9;ui.setActions(&quot;Done&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;TakingBreak&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;raise StartWorking" name="Break" incomingTransitions="_OceUQtLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUTNLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Done&quot;]" target="_OceUQNLDEe2rSIK3QmapIA"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OceUTdLDEe2rSIK3QmapIA" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(1);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at Assembly.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#x9;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.popMsg();&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;)" name="Assembly" incomingTransitions="_OceUVdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUTtLDEe2rSIK3QmapIA" specification="after 10s /&#xD;&#xA; employee.increasePay(10)" target="_OceUWNLDEe2rSIK3QmapIA"/>
          <regions xmi:type="sgraph:Region" xmi:id="_OceUT9LDEe2rSIK3QmapIA" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_OceUUNLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUUdLDEe2rSIK3QmapIA" specification="" target="_OceUUtLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUUtLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At the Assmebler Machine&quot;)" name="Assembling" incomingTransitions="_OceUUdLDEe2rSIK3QmapIA _OceUU9LDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUU9LDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Assemble&quot; &amp;&amp; factory.getMaterial() >= 1]/ factory.increaseFinished(1)" target="_OceUUtLDEe2rSIK3QmapIA"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_OceUVNLDEe2rSIK3QmapIA" incomingTransitions="_OceUWdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUVdLDEe2rSIK3QmapIA" specification="[choice == 1]" target="_OceUTdLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUVtLDEe2rSIK3QmapIA" specification="[choice == 2]" target="_OceUWtLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUV9LDEe2rSIK3QmapIA" specification="[choice == 0]" target="_OceUO9LDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OceUWNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;choice = util.getRandomInteger(3);&#xD;&#xA;&#x9;ui.shiftHighlightAssigned(choice)&#xD;&#xA;&#xD;&#xA;employee.shiftClicked/&#xD;&#xA;&#x9;choice = valueof(employee.shiftClicked);&#xD;&#xA;&#x9;ui.shiftHighlightAssigned(choice)&#xD;&#xA;&#x9;" name="grace" incomingTransitions="_OceUOtLDEe2rSIK3QmapIA _OceUPNLDEe2rSIK3QmapIA _OceUW9LDEe2rSIK3QmapIA _OceUTtLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUWdLDEe2rSIK3QmapIA" specification="after 4s[employee.getEnergy() >= 25]" target="_OceUVNLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OceUWtLDEe2rSIK3QmapIA" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(2);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at load.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.popMsg();&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;)" name="j4mfoSPXZK" incomingTransitions="_OceUVtLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUW9LDEe2rSIK3QmapIA" specification="after 10s / employee.increasePay(10)" target="_OceUWNLDEe2rSIK3QmapIA"/>
          <regions xmi:type="sgraph:Region" xmi:id="_OceUXNLDEe2rSIK3QmapIA" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_OceUXdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUXtLDEe2rSIK3QmapIA" specification="" target="_OceUX9LDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUX9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Pick up,ToiletBreak&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;In Stock&quot;)" name="AtStock" incomingTransitions="_OceUXtLDEe2rSIK3QmapIA _OceUZNLDEe2rSIK3QmapIA _OceUa9LDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUYNLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_OceUY9LDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUYdLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Pick up&quot; &amp;&amp; factory.getFinished() > 0]" target="_OceUaNLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUYtLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;ToiletBreak&quot;]" target="_OceUatLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUY9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck&quot;)" name="hm499aYDQU" incomingTransitions="_OceUYNLDEe2rSIK3QmapIA _OceUZ9LDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUZNLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_OceUX9LDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUZdLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck Carrying&quot;)" name="tstBkmxGWu" incomingTransitions="_OceUadLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUZtLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_OceUaNLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUZ9LDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Drop&quot;] /&#x9;factory.increaseFinished(-1)" target="_OceUY9LDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUaNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Stock Carrying&quot;)" name="AtStockCarrying" incomingTransitions="_OceUZtLDEe2rSIK3QmapIA _OceUYdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUadLDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_OceUZdLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_OceUatLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;&#x9;raise TakeBreak;&#xD;&#xA;&#x9;ui.setActions(&quot;Done&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;TakingBreak&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;raise StartWorking" name="Break" incomingTransitions="_OceUYtLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUa9LDEe2rSIK3QmapIA" specification="TaskSucceeded[currentTask == &quot;Done&quot;]" target="_OceUX9LDEe2rSIK3QmapIA"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_OceUbNLDEe2rSIK3QmapIA" name="r2">
        <vertices xmi:type="sgraph:Entry" xmi:id="_OceUbdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUbtLDEe2rSIK3QmapIA" specification="" target="_OceUb9LDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OceUb9LDEe2rSIK3QmapIA" specification="" name="NotPressing" incomingTransitions="_OceUbtLDEe2rSIK3QmapIA _OceUctLDEe2rSIK3QmapIA _OceUc9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUcNLDEe2rSIK3QmapIA" specification="ui.actionPressed / &#xD;&#xA;&#x9;currentTask = valueof(ui.actionPressed)" target="_OceUcdLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OceUcdLDEe2rSIK3QmapIA" specification="" name="MEKMrmyrqm" incomingTransitions="_OceUcNLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUctLDEe2rSIK3QmapIA" specification="ui.actionReleased" target="_OceUb9LDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUc9LDEe2rSIK3QmapIA" specification="after 500ms / &#xD;&#xA;&#x9;raise TaskSucceeded" target="_OceUb9LDEe2rSIK3QmapIA"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_OceUdNLDEe2rSIK3QmapIA" name="BFgnkT3Ixw">
        <vertices xmi:type="sgraph:State" xmi:id="_OceUddLDEe2rSIK3QmapIA" name="GracePeriod" incomingTransitions="_OceUeNLDEe2rSIK3QmapIA _OceUetLDEe2rSIK3QmapIA _OceUgNLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUdtLDEe2rSIK3QmapIA" specification="StartWorking" target="_OceUedLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_OceUd9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUeNLDEe2rSIK3QmapIA" specification="" target="_OceUddLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OceUedLDEe2rSIK3QmapIA" name="jGh7XOuGa9" incomingTransitions="_OceUdtLDEe2rSIK3QmapIA _OceUe9LDEe2rSIK3QmapIA _OceUfNLDEe2rSIK3QmapIA _OceUf9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUetLDEe2rSIK3QmapIA" specification="EndOfShift" target="_OceUddLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUe9LDEe2rSIK3QmapIA" specification="after 1s / employee.increaseEnergy(-2)" target="_OceUedLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUfNLDEe2rSIK3QmapIA" specification="employee.goHome" target="_OceUedLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUfdLDEe2rSIK3QmapIA" specification="TakeBreak" target="_OceUftLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_OceUftLDEe2rSIK3QmapIA" name="Break" incomingTransitions="_OceUfdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUf9LDEe2rSIK3QmapIA" specification="StartWorking" target="_OceUedLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_OceUgNLDEe2rSIK3QmapIA" specification="EndOfShift" target="_OceUddLDEe2rSIK3QmapIA"/>
        </vertices>
      </regions>
    </vertices>
  </regions>
</sgraph:Statechart>
