<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_h1gbYMBtEe2Mc7U_W-ye0Q" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var assigned : integer&#xA;&#x9;var atShift : boolean&#xA;&#x9;&#xA;&#x9;event go&#xA;&#x9;" name="Sti">
  <regions xmi:type="sgraph:Region" xmi:id="_h1gbYcBtEe2Mc7U_W-ye0Q" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_h1gbYsBtEe2Mc7U_W-ye0Q" specification="entry / ui.setMsg(&quot;You are at home.&quot;)" name="FactoryModel" incomingTransitions="_h1gbvsBtEe2Mc7U_W-ye0Q">
      <regions xmi:type="sgraph:Region" xmi:id="_h1gbY8BtEe2Mc7U_W-ye0Q" name="r1">
        <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbZMBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbZcBtEe2Mc7U_W-ye0Q" specification="" target="_h1gbZsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_h1gbZsBtEe2Mc7U_W-ye0Q" name="Idle" incomingTransitions="_h1gbZcBtEe2Mc7U_W-ye0Q _h1gbacBtEe2Mc7U_W-ye0Q _h1gbasBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbZ8BtEe2Mc7U_W-ye0Q" specification="after 1s" target="_h1gbaMBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_h1gbaMBtEe2Mc7U_W-ye0Q" incomingTransitions="_h1gbZ8BtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbacBtEe2Mc7U_W-ye0Q" specification="default" target="_h1gbZsBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbasBtEe2Mc7U_W-ye0Q" specification="[atShift == true]/&#xD;&#xA;employee.increaseEnergy(-2)" target="_h1gbZsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_h1gba8BtEe2Mc7U_W-ye0Q" name="r3">
        <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbbMBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbbcBtEe2Mc7U_W-ye0Q" specification="" target="_h1gbbsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_h1gbbsBtEe2Mc7U_W-ye0Q" name="AtHome" incomingTransitions="_h1gbbcBtEe2Mc7U_W-ye0Q _h1gbb8BtEe2Mc7U_W-ye0Q _h1gbssBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbb8BtEe2Mc7U_W-ye0Q" specification="employee.goHome / ui.setMsg(&quot;Already at home.&quot;)" target="_h1gbbsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_h1gbcMBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;ui.setMsg(&quot;At work&quot;);&#xD;&#xA;ui.shiftsShow();&#xD;&#xA;ui.shiftHighlightAssigned(assigned);&#xD;&#xA;atShift = false&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.shiftHighlightActive(assigned)&#xD;&#xA;" name="AtWork" incomingTransitions="_h1gbcsBtEe2Mc7U_W-ye0Q _h1gbdsBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbccBtEe2Mc7U_W-ye0Q" specification="employee.goHome / ui.setMsg(&quot;Going home.&quot;);&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;employee.increaseEnergy(50)" target="_h1gbsMBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbcsBtEe2Mc7U_W-ye0Q" specification="employee.shiftClicked / assigned = valueof(employee.shiftClicked)" target="_h1gbcMBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbc8BtEe2Mc7U_W-ye0Q" specification="after 4s [employee.getEnergy() >= 25]" target="_h1gbdcBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbdMBtEe2Mc7U_W-ye0Q" specification="[employee.getEnergy() &lt; 25]" target="_h1gbs8BtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_h1gbdcBtEe2Mc7U_W-ye0Q" specification="entry/ ui.pushMsg(); ui.setMsg(&quot;Working shift&quot;);&#xD;&#xA;atShift = true&#xD;&#xA;&#xD;&#xA;exit/ ui.popMsg()" name="Working" incomingTransitions="_h1gbc8BtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbdsBtEe2Mc7U_W-ye0Q" specification="after 10s / employee.increasePay(10);&#xD;&#xA;assigned = util.getRandomInteger(3)" target="_h1gbcMBtEe2Mc7U_W-ye0Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_h1gbd8BtEe2Mc7U_W-ye0Q" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_h1gbeMBtEe2Mc7U_W-ye0Q" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Unloading" incomingTransitions="_h1gbqsBtEe2Mc7U_W-ye0Q">
              <regions xmi:type="sgraph:Region" xmi:id="_h1gbecBtEe2Mc7U_W-ye0Q" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbesBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setMsg(&quot;In stock&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Toilet Break&quot;)&#xD;&#xA;" name="AtStock" incomingTransitions="_h1gbfsBtEe2Mc7U_W-ye0Q _h1gbgsBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbe8BtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_h1gbf8BtEe2Mc7U_W-ye0Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbfMBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_h1gbhsBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbfcBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbfsBtEe2Mc7U_W-ye0Q" specification="" target="_h1gbesBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbf8BtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck&quot;)" name="AtTruck" incomingTransitions="_h1gbe8BtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbgMBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Pick up&quot;]" target="_h1gbhMBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbgcBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material&quot;)" name="AtStockCarrying" incomingTransitions="_h1gbhcBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbgsBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Drop&quot;]/&#xD;&#xA;factory.increaseMaterial(1)" target="_h1gbesBtEe2Mc7U_W-ye0Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbg8BtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_h1gbhMBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbhMBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material&quot;)" name="AtTruckCarrying" incomingTransitions="_h1gbg8BtEe2Mc7U_W-ye0Q _h1gbgMBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbhcBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_h1gbgcBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Exit" xmi:id="_h1gbhsBtEe2Mc7U_W-ye0Q" name="toToilet" incomingTransitions="_h1gbfMBtEe2Mc7U_W-ye0Q"/>
                <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbh8BtEe2Mc7U_W-ye0Q" name="deep" incomingTransitions="_h1gbrsBtEe2Mc7U_W-ye0Q" kind="DEEP_HISTORY"/>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_h1gbiMBtEe2Mc7U_W-ye0Q" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Assembly" incomingTransitions="_h1gbqcBtEe2Mc7U_W-ye0Q">
              <regions xmi:type="sgraph:Region" xmi:id="_h1gbicBtEe2Mc7U_W-ye0Q" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbisBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough stock to assemble&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="Assemble" incomingTransitions="_h1gbkMBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbi8BtEe2Mc7U_W-ye0Q" specification="[factory.getMaterial > 0]" target="_h1gbjsBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbjMBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbjcBtEe2Mc7U_W-ye0Q" specification="" target="_h1gbjsBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbjsBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;ui.setMsg(&quot;At assembly station&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" name="EnoughStock" incomingTransitions="_h1gbi8BtEe2Mc7U_W-ye0Q _h1gbjcBtEe2Mc7U_W-ye0Q _h1gbj8BtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbj8BtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Assemble&quot;]/&#xD;&#xA;factory.increaseMaterial(-1);&#xD;&#xA;factory.increaseFinished(1)" target="_h1gbjsBtEe2Mc7U_W-ye0Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbkMBtEe2Mc7U_W-ye0Q" specification="[factory.getMaterial == 0]" target="_h1gbisBtEe2Mc7U_W-ye0Q"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_h1gbkcBtEe2Mc7U_W-ye0Q" specification="entry/ ui.pushMsg()&#xD;&#xA;exit/ ui.popMsg()" name="Loading" incomingTransitions="_h1gbqMBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbksBtEe2Mc7U_W-ye0Q" specification="# toToilet >" target="_h1gbq8BtEe2Mc7U_W-ye0Q"/>
              <regions xmi:type="sgraph:Region" xmi:id="_h1gbk8BtEe2Mc7U_W-ye0Q" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_h1gblMBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setMsg(&quot;In stock&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet Break&quot;)&#xD;&#xA;" name="AtStock" incomingTransitions="_h1gbmcBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gblcBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_h1gbmsBtEe2Mc7U_W-ye0Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gblsBtEe2Mc7U_W-ye0Q" specification="[factory.getFinished &lt; 1]" target="_h1gboMBtEe2Mc7U_W-ye0Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbl8BtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_h1gbo8BtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbmMBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbmcBtEe2Mc7U_W-ye0Q" specification="" target="_h1gblMBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbmsBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck&quot;)" name="AtTruck" incomingTransitions="_h1gblcBtEe2Mc7U_W-ye0Q _h1gbn8BtEe2Mc7U_W-ye0Q _h1gbocBtEe2Mc7U_W-ye0Q"/>
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbm8BtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying finished product&quot;)" name="AtStockCarrying" incomingTransitions="_h1gbnsBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbnMBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_h1gbncBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_h1gbncBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying finished product&quot;)" name="AtTruckCarrying" incomingTransitions="_h1gbnMBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbnsBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_h1gbm8BtEe2Mc7U_W-ye0Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbn8BtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Drop&quot;]/&#xD;&#xA;factory.increaseFinished(-1)" target="_h1gbmsBtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_h1gboMBtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough finished product&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Toilet Break&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="AtStockNotEnoughFinished" incomingTransitions="_h1gblsBtEe2Mc7U_W-ye0Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbocBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Walk&quot;]" target="_h1gbmsBtEe2Mc7U_W-ye0Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbosBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Toilet Break&quot;]" target="_h1gbo8BtEe2Mc7U_W-ye0Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Exit" xmi:id="_h1gbo8BtEe2Mc7U_W-ye0Q" name="toToilet" incomingTransitions="_h1gbosBtEe2Mc7U_W-ye0Q _h1gbl8BtEe2Mc7U_W-ye0Q"/>
                <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbpMBtEe2Mc7U_W-ye0Q" name="deep" incomingTransitions="_h1gbr8BtEe2Mc7U_W-ye0Q" kind="DEEP_HISTORY"/>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbpcBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbpsBtEe2Mc7U_W-ye0Q" specification="" target="_h1gbp8BtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_h1gbp8BtEe2Mc7U_W-ye0Q" incomingTransitions="_h1gbpsBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbqMBtEe2Mc7U_W-ye0Q" specification="[assigned == 2]" target="_h1gbkcBtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbqcBtEe2Mc7U_W-ye0Q" specification="[assigned == 1]" target="_h1gbiMBtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbqsBtEe2Mc7U_W-ye0Q" specification="[assigned == 0]" target="_h1gbeMBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_h1gbq8BtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.setMsg(&quot;At toilet&quot;);&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;atShift = false&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;atShift = true" name="Toilet" incomingTransitions="_h1gbksBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbrMBtEe2Mc7U_W-ye0Q" specification="go [valueof(ui.actionPressed) == &quot;Done&quot;]/&#xD;&#xA;ui.setMsg(&quot;Working shift&quot;)" target="_h1gbrcBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_h1gbrcBtEe2Mc7U_W-ye0Q" incomingTransitions="_h1gbrMBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbrsBtEe2Mc7U_W-ye0Q" specification="[assigned == 0]" target="_h1gbh8BtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbr8BtEe2Mc7U_W-ye0Q" specification="[assigned == 2]" target="_h1gbpMBtEe2Mc7U_W-ye0Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_h1gbsMBtEe2Mc7U_W-ye0Q" name="ToHome" incomingTransitions="_h1gbccBtEe2Mc7U_W-ye0Q _h1gbscBtEe2Mc7U_W-ye0Q _h1gbtMBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbscBtEe2Mc7U_W-ye0Q" specification="[employee.getEnergy > 100]/&#xD;&#xA;employee.increaseEnergy(-1)" target="_h1gbsMBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbssBtEe2Mc7U_W-ye0Q" specification="[employee.getEnergy &lt;= 100]" target="_h1gbbsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_h1gbs8BtEe2Mc7U_W-ye0Q" specification="entry/&#xD;&#xA;ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;Not enough energy&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()" name="NotEnougEnergy" incomingTransitions="_h1gbdMBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbtMBtEe2Mc7U_W-ye0Q" specification="employee.goHome / ui.setMsg(&quot;Going home.&quot;);&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;employee.increaseEnergy(50)" target="_h1gbsMBtEe2Mc7U_W-ye0Q"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_h1gbtcBtEe2Mc7U_W-ye0Q" name="r2">
        <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbtsBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbt8BtEe2Mc7U_W-ye0Q" specification="" target="_h1gbuMBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_h1gbuMBtEe2Mc7U_W-ye0Q" specification="" name="Waiting" incomingTransitions="_h1gbt8BtEe2Mc7U_W-ye0Q _h1gbvMBtEe2Mc7U_W-ye0Q _h1gbu8BtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbucBtEe2Mc7U_W-ye0Q" specification="ui.actionPressed" target="_h1gbusBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_h1gbusBtEe2Mc7U_W-ye0Q" specification="" name="a" incomingTransitions="_h1gbucBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbu8BtEe2Mc7U_W-ye0Q" specification="after 500ms/ raise go" target="_h1gbuMBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbvMBtEe2Mc7U_W-ye0Q" specification="ui.actionReleased" target="_h1gbuMBtEe2Mc7U_W-ye0Q"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_h1gbvcBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_h1gbvsBtEe2Mc7U_W-ye0Q" specification="" target="_h1gbYsBtEe2Mc7U_W-ye0Q"/>
    </vertices>
  </regions>
</sgraph:Statechart>
