<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_QffU0NLDEe2Dqqh-jNmL8Q" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var shiftNumber : integer&#xA;&#x9;var shiftBusy : boolean&#xA;&#x9;var toiletBreak : boolean&#xA;&#x9;var action : string&#xA;&#x9;&#xA;&#x9;event actionToiletBreak&#xA;&#x9;event actionWalk&#xA;&#x9;event actionDrop&#xA;&#x9;event actionPickUp&#xA;&#x9;event actionAssemble &#xA;&#x9;event actionDone" name="Kri">
  <regions xmi:type="sgraph:Region" xmi:id="_QffU0dLDEe2Dqqh-jNmL8Q" name="main region">
    <vertices xmi:type="sgraph:Entry" xmi:id="_QffU0tLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU09LDEe2Dqqh-jNmL8Q" specification="" target="_QffU1NLDEe2Dqqh-jNmL8Q"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_QffU1NLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;shiftBusy=false;&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;ui.setMsg(&quot;At home.&quot;)&#xD;&#xA;entry [employee.getEnergy()>50]/&#xD;&#xA;employee.increaseEnergy(100-employee.getEnergy())&#xD;&#xA;entry [employee.getEnergy()&lt;=50]/&#xD;&#xA;employee.increaseEnergy(50)&#xD;&#xA;" name="atHome" incomingTransitions="_QffU09LDEe2Dqqh-jNmL8Q _QffU19LDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU1dLDEe2Dqqh-jNmL8Q" specification="employee.goToWork" target="_QffU1tLDEe2Dqqh-jNmL8Q"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_QffU1tLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#xD;&#xA;ui.shiftsShow();&#xD;&#xA;shiftNumber =  util.getRandomInteger(3);&#xD;&#xA;ui.setMsg(&quot;At work.&quot;);&#xD;&#xA;ui.pushMsg()&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;ui.popMsg()&#xD;&#xA;" name="atWork" incomingTransitions="_QffU1dLDEe2Dqqh-jNmL8Q _QffU7dLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU19LDEe2Dqqh-jNmL8Q" specification="employee.goHome[shiftBusy == false]" target="_QffU1NLDEe2Dqqh-jNmL8Q"/>
      <regions xmi:type="sgraph:Region" xmi:id="_QffU2NLDEe2Dqqh-jNmL8Q" name="r1">
        <vertices xmi:type="sgraph:State" xmi:id="_QffU2dLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setMsg(&quot;Selected shift will start soon...&quot;)" name="SelectShift" incomingTransitions="_QffU69LDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU2tLDEe2Dqqh-jNmL8Q" specification="after 4s[employee.getEnergy()>=25] / shiftBusy=true" target="_QffU7NLDEe2Dqqh-jNmL8Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_QffU29LDEe2Dqqh-jNmL8Q" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_QffU3NLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU3dLDEe2Dqqh-jNmL8Q" specification="" target="_QffU5dLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffU3tLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.shiftHighlightAssigned(2)" name="Loading" incomingTransitions="_QffU59LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU39LDEe2Dqqh-jNmL8Q" specification="employee.shiftClicked/shiftNumber=valueof(employee.shiftClicked) " target="_QffU5dLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffU4NLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.shiftHighlightAssigned(0)" name="Unloading" incomingTransitions="_QffU6NLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU4dLDEe2Dqqh-jNmL8Q" specification="employee.shiftClicked/shiftNumber=valueof(employee.shiftClicked) " target="_QffU5dLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffU4tLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setMsg(&quot;Energy below 25%, go home.&quot;)" name="lowEnergy" incomingTransitions="_QffU6dLDEe2Dqqh-jNmL8Q"/>
            <vertices xmi:type="sgraph:State" xmi:id="_QffU49LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.shiftHighlightAssigned(1)" name="Assembly" incomingTransitions="_QffU5tLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU5NLDEe2Dqqh-jNmL8Q" specification="employee.shiftClicked/shiftNumber=valueof(employee.shiftClicked) " target="_QffU5dLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffU5dLDEe2Dqqh-jNmL8Q" name="entry" incomingTransitions="_QffU3dLDEe2Dqqh-jNmL8Q _QffU39LDEe2Dqqh-jNmL8Q _QffU5NLDEe2Dqqh-jNmL8Q _QffU4dLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU5tLDEe2Dqqh-jNmL8Q" specification="after 0s[shiftNumber==1 &amp;&amp; employee.getEnergy()>=25]" target="_QffU49LDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU59LDEe2Dqqh-jNmL8Q" specification="after 0s[shiftNumber==2 &amp;&amp; employee.getEnergy()>=25]" target="_QffU3tLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU6NLDEe2Dqqh-jNmL8Q" specification="after 0s[shiftNumber==0 &amp;&amp; employee.getEnergy()>=25]" target="_QffU4NLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU6dLDEe2Dqqh-jNmL8Q" specification="after 0s[employee.getEnergy()&lt;25]" target="_QffU4tLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_QffU6tLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU69LDEe2Dqqh-jNmL8Q" specification="" target="_QffU2dLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QffU7NLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.shiftHighlightActive(shiftNumber);&#xD;&#xA;toiletBreak=false;&#xD;&#xA;ui.setMsg(&quot;Working shift.&quot;);&#xD;&#xA;ui.pushMsg()&#xD;&#xA;exit/&#xD;&#xA;shiftBusy=false;&#xD;&#xA;employee.increasePay(10);&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;toiletBreak=false;&#xD;&#xA;ui.popMsg()" name="Shift" incomingTransitions="_QffU2tLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU7dLDEe2Dqqh-jNmL8Q" specification="after 10s" target="_QffU1tLDEe2Dqqh-jNmL8Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_QffU7tLDEe2Dqqh-jNmL8Q" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_QffU79LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU8NLDEe2Dqqh-jNmL8Q" specification="" target="_QffU-dLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffU8dLDEe2Dqqh-jNmL8Q" name="Assembly" incomingTransitions="_QffU-9LDEe2Dqqh-jNmL8Q">
              <regions xmi:type="sgraph:Region" xmi:id="_QffU8tLDEe2Dqqh-jNmL8Q" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_QffU89LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock.&quot;)" name="assembly" incomingTransitions="_QffU9tLDEe2Dqqh-jNmL8Q _QffU-NLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU9NLDEe2Dqqh-jNmL8Q" specification="actionAssemble[factory.getMaterial != 0]" target="_QffU99LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_QffU9dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU9tLDEe2Dqqh-jNmL8Q" specification="" target="_QffU89LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffU99LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;factory.increaseMaterial(-1);&#xD;&#xA;factory.increaseFinished(1)&#xD;&#xA;" name="assembled" incomingTransitions="_QffU9NLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU-NLDEe2Dqqh-jNmL8Q" specification="after 0s" target="_QffU89LDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffU-dLDEe2Dqqh-jNmL8Q" name="busy" incomingTransitions="_QffU8NLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU-tLDEe2Dqqh-jNmL8Q" specification="after 0s[shiftNumber==2]" target="_QffVDtLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU-9LDEe2Dqqh-jNmL8Q" specification="after 0s[shiftNumber==1]" target="_QffU8dLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffU_NLDEe2Dqqh-jNmL8Q" specification="after 0s[shiftNumber==0]" target="_QffU_dLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffU_dLDEe2Dqqh-jNmL8Q" specification="" name="Unloading" incomingTransitions="_QffU_NLDEe2Dqqh-jNmL8Q">
              <regions xmi:type="sgraph:Region" xmi:id="_QffU_tLDEe2Dqqh-jNmL8Q" name="r1">
                <vertices xmi:type="sgraph:Entry" xmi:id="_QffU_9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVANLDEe2Dqqh-jNmL8Q" specification="" target="_QffVAdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVAdLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock.&quot;)" name="AtStock" incomingTransitions="_QffVANLDEe2Dqqh-jNmL8Q _QffVBtLDEe2Dqqh-jNmL8Q _QffVDdLDEe2Dqqh-jNmL8Q _QffVCtLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVAtLDEe2Dqqh-jNmL8Q" specification="actionToiletBreak" target="_QffVDNLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVA9LDEe2Dqqh-jNmL8Q" specification="actionWalk" target="_QffVCdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVBNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="AtStockCarrying" incomingTransitions="_QffVCNLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVBdLDEe2Dqqh-jNmL8Q" specification="actionWalk" target="_QffVB9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVBtLDEe2Dqqh-jNmL8Q" specification="actionDrop/factory.increaseMaterial(1)" target="_QffVAdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVB9LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck carrying material.&quot;)" name="AtTruckCarrying" incomingTransitions="_QffVC9LDEe2Dqqh-jNmL8Q _QffVBdLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVCNLDEe2Dqqh-jNmL8Q" specification="actionWalk" target="_QffVBNLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVCdLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)" name="AtTruck" incomingTransitions="_QffVA9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVCtLDEe2Dqqh-jNmL8Q" specification="actionWalk" target="_QffVAdLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVC9LDEe2Dqqh-jNmL8Q" specification="actionPickUp" target="_QffVB9LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVDNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;ui.setMsg(&quot;Toilet break.&quot;);&#xD;&#xA;toiletBreak=true&#xD;&#xA;exit/&#xD;&#xA;toiletBreak=false" name="ToiletBreak" incomingTransitions="_QffVAtLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVDdLDEe2Dqqh-jNmL8Q" specification="actionDone" target="_QffVAdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffVDtLDEe2Dqqh-jNmL8Q" name="Loading" incomingTransitions="_QffU-tLDEe2Dqqh-jNmL8Q">
              <regions xmi:type="sgraph:Region" xmi:id="_QffVD9LDEe2Dqqh-jNmL8Q" name="r1">
                <vertices xmi:type="sgraph:Entry" xmi:id="_QffVENLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVEdLDEe2Dqqh-jNmL8Q" specification="" target="_QffVFNLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVEtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock carrying finished product.&quot;)" name="AtStockCarrying" incomingTransitions="_QffVGdLDEe2Dqqh-jNmL8Q _QffVFtLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVE9LDEe2Dqqh-jNmL8Q" specification="actionWalk" target="_QffVGNLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVFNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock.&quot;)" name="AtStock" incomingTransitions="_QffVHNLDEe2Dqqh-jNmL8Q _QffVHtLDEe2Dqqh-jNmL8Q _QffVEdLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVFdLDEe2Dqqh-jNmL8Q" specification="actionWalk" target="_QffVG9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVFtLDEe2Dqqh-jNmL8Q" specification="actionPickUp[factory.getFinished() != 0]" target="_QffVEtLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVF9LDEe2Dqqh-jNmL8Q" specification="actionToiletBreak" target="_QffVHdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVGNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck carrying finished product.&quot;)" name="AtTruckCarrying" incomingTransitions="_QffVE9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVGdLDEe2Dqqh-jNmL8Q" specification="actionWalk" target="_QffVEtLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVGtLDEe2Dqqh-jNmL8Q" specification="actionDrop/factory.increaseFinished(-1)" target="_QffVG9LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVG9LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)" name="AtTruck" incomingTransitions="_QffVGtLDEe2Dqqh-jNmL8Q _QffVFdLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVHNLDEe2Dqqh-jNmL8Q" specification="actionWalk" target="_QffVFNLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QffVHdLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;toiletBreak=true;&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;ui.setMsg(&quot;Toilet break.&quot;)&#xD;&#xA;exit/&#xD;&#xA;toiletBreak=false" name="ToiletBreak" incomingTransitions="_QffVF9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVHtLDEe2Dqqh-jNmL8Q" specification="actionDone" target="_QffVFNLDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_QffVH9LDEe2Dqqh-jNmL8Q" name="500ms">
            <vertices xmi:type="sgraph:Entry" xmi:id="_QffVINLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVIdLDEe2Dqqh-jNmL8Q" specification="" target="_QffVItLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffVItLDEe2Dqqh-jNmL8Q" name="start" incomingTransitions="_QffVIdLDEe2Dqqh-jNmL8Q _QffVJdLDEe2Dqqh-jNmL8Q _QffVKNLDEe2Dqqh-jNmL8Q _QffVKdLDEe2Dqqh-jNmL8Q _QffVKtLDEe2Dqqh-jNmL8Q _QffVK9LDEe2Dqqh-jNmL8Q _QffVLNLDEe2Dqqh-jNmL8Q _QffVLdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVI9LDEe2Dqqh-jNmL8Q" specification="ui.actionPressed/ action=valueof(ui.actionPressed)" target="_QffVJNLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffVJNLDEe2Dqqh-jNmL8Q" name="wait" incomingTransitions="_QffVI9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVJdLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased" target="_QffVItLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVJtLDEe2Dqqh-jNmL8Q" specification="after 500ms" target="_QffVJ9LDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffVJ9LDEe2Dqqh-jNmL8Q" name="end" incomingTransitions="_QffVJtLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVKNLDEe2Dqqh-jNmL8Q" specification="after 0s[action==&quot;Toilet break&quot;]/raise actionToiletBreak" target="_QffVItLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVKdLDEe2Dqqh-jNmL8Q" specification="after 0s[action==&quot;Walk&quot;]/raise actionWalk" target="_QffVItLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVKtLDEe2Dqqh-jNmL8Q" specification="after 0s[action==&quot;Drop&quot;]/raise actionDrop" target="_QffVItLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVK9LDEe2Dqqh-jNmL8Q" specification="after 0s[action==&quot;Pick up&quot;]/raise actionPickUp" target="_QffVItLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVLNLDEe2Dqqh-jNmL8Q" specification="after 0s[action==&quot;Assemble&quot;]/raise actionAssemble" target="_QffVItLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVLdLDEe2Dqqh-jNmL8Q" specification="after 0s[action==&quot;Done&quot;]/raise actionDone" target="_QffVItLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_QffVLtLDEe2Dqqh-jNmL8Q" name="energy">
            <vertices xmi:type="sgraph:Entry" xmi:id="_QffVL9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVMNLDEe2Dqqh-jNmL8Q" specification="" target="_QffVMdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QffVMdLDEe2Dqqh-jNmL8Q" name="timer" incomingTransitions="_QffVMNLDEe2Dqqh-jNmL8Q _QffVMtLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QffVMtLDEe2Dqqh-jNmL8Q" specification="after 1s[toiletBreak==false]/employee.increaseEnergy(-2)" target="_QffVMdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
    </vertices>
  </regions>
</sgraph:Statechart>
