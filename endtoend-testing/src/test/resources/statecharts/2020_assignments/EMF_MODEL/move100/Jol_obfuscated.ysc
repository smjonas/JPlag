<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_u4FQkL2eEe2v0PGd1C7xCQ" specification="// Use the event driven execution model.&#xA;// Switch to cycle based behavior&#xA;// by specifying '@CycleBased(200)'.&#xA;@EventDriven&#xA;&#xA;// Use @SuperSteps(yes) to enable&#xA;// super step semantics.&#xA;@SuperSteps(no)&#xD;&#xA;&#xA;interface util:&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;// &#x9;Generate an integer larger or equal to 0 and smaller than given number.&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork&#xA;&#x9;// Received when the &quot;Go to Work&quot; button is clicked.&#xA;&#x9;in event goHome&#xA;&#x9;// Received when the &quot;Go Home&quot; button is clicked.&#xA;&#x9;in event shiftClicked: integer&#xA;&#x9;// Received when one of the shift buttons is clicked. The event parameter is an integer: 0 for &quot;Loading&quot;, 1 for &quot;Assembly&quot;, 2 for &quot;Unloading.&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;// Returns the energy of the employee, as shown in UI.&#xA;&#x9;operation increaseEnergy(delta: integer)&#xA;&#x9;// Increases the energy of the employee. Use a negative delta to decrease.&#xA;&#x9;operation getPay(): integer&#xA;&#x9;// Returns the employee's amount of money, as shown in UI.&#xA;&#x9;operation increasePay(delta: integer)&#xA;&#x9;// Increases the employee's amount of money. Use a negative delta to decrease.&#xA;interface factory:&#xA;&#x9;operation getMaterial(): integer&#xA;   //&#x9;Returns stock count, units of material, as shown in UI.&#xA;&#x9;operation increaseMaterial(delta: integer)&#xA;// &#x9;Increase stock count, units of material. Use a negative delta to decrease.&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;// Returns stock count, units of finished product, as shown in UI.&#xA;&#x9;operation increaseFinished(delta: integer)&#xA;// &#x9;Increase stock count, units of finished product. Use a negative delta to decrease.&#xA;interface ui:&#xA;&#x9;operation setActions(actions: string)&#xA;//&#x9;Sets the list of actions to display as buttons. The 'actions' parameter is a comma-separated list of the action names, e.g. &quot;Walk,Drop,Toilet break&quot; will create 3 buttons. Use the empty string to hide all buttons.&#xA;&#x9;in event actionPressed: string&#xA;&#x9;//Raised when user presses an action with the left mouse button. The event parameter is the name of the action, e.g. &quot;Walk&quot;.&#xA;&#x9;in event actionReleased: string&#xA;//&#x9;Raised when user releases an action with the left mouse button. The event parameter is the name of the action, e.g. &quot;Walk&quot;.&#xA;&#x9;operation setMsg(msg: string)&#xA;&#x9;// Sets the message to be displayed at the current line. The line can be 0 to 5. Initially, the current line is 0.&#xA;&#x9;operation pushMsg()&#xA;&#x9;// Increases the current line number.&#xA;&#x9;operation popMsg()&#xA;&#x9;// Removes the message at the current line and decreases the current line number.&#xA;&#x9;operation shiftsHide()&#xA;&#x9;// Hides the shift type buttons (Unload/Assembly/Load). Initially, these buttons are already hidden.&#xA;&#x9;operation shiftsShow()&#xA;&#x9;// Shows the shift type buttons (Unload/Assembly/Load).&#xA;&#x9;operation shiftHighlightAssigned(n: integer)&#xA;&#x9;// Highlights the n-th shift button in blue. See 'shiftClicked' for the mapping from n (integer) to shift type. Any previous highlight is cleared.&#xA;&#x9;operation shiftHighlightActive(n: integer)&#xA;&#x9;// Highlights the n-th shift button in green. See 'shiftClicked' for the mapping from n (integer) to shift type. Any previous highlight is cleared.&#xA;&#x9;operation shiftHighlightClear()&#xA;//&#x9;Clears any previous highlight of the shift buttons.&#xA;&#xA;internal :&#xA;&#x9;var shift: integer&#xA;&#x9;var Action: string&#xA;&#x9;event Walk&#xA;&#x9;event drop&#xA;&#x9;event toilet&#xA;&#x9;event toilet_done&#xA;&#x9;event pickup&#xA;&#x9;event Working&#xA;&#x9;event not_working&#xA;&#x9;event Assemble" name="Jol">
  <regions xmi:type="sgraph:Region" xmi:id="_u4FQkb2eEe2v0PGd1C7xCQ" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_u4FQkr2eEe2v0PGd1C7xCQ" name="work" incomingTransitions="_u4FQ472eEe2v0PGd1C7xCQ">
      <regions xmi:type="sgraph:Region" xmi:id="_u4FQk72eEe2v0PGd1C7xCQ">
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQlL2eEe2v0PGd1C7xCQ" name="not working" incomingTransitions="_u4FQmL2eEe2v0PGd1C7xCQ _u4FQm72eEe2v0PGd1C7xCQ _u4FQnL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQlb2eEe2v0PGd1C7xCQ" specification="Working" target="_u4FQmb2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQlr2eEe2v0PGd1C7xCQ" specification="toilet_done" target="_u4FQmb2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_u4FQl72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQmL2eEe2v0PGd1C7xCQ" specification="" target="_u4FQlL2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQmb2eEe2v0PGd1C7xCQ" name="working" incomingTransitions="_u4FQlb2eEe2v0PGd1C7xCQ _u4FQmr2eEe2v0PGd1C7xCQ _u4FQlr2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQmr2eEe2v0PGd1C7xCQ" specification="after 2s/ employee.increaseEnergy(-2)" target="_u4FQmb2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQm72eEe2v0PGd1C7xCQ" specification="not_working" target="_u4FQlL2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQnL2eEe2v0PGd1C7xCQ" specification="toilet" target="_u4FQlL2eEe2v0PGd1C7xCQ"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_u4FQnb2eEe2v0PGd1C7xCQ" name="r2">
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQnr2eEe2v0PGd1C7xCQ" name="start" incomingTransitions="_u4FQob2eEe2v0PGd1C7xCQ _u4FQqL2eEe2v0PGd1C7xCQ _u4FQpb2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQn72eEe2v0PGd1C7xCQ" specification="ui.actionPressed / Action = valueof(ui.actionPressed)" target="_u4FQpr2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_u4FQoL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQob2eEe2v0PGd1C7xCQ" specification="" target="_u4FQnr2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQor2eEe2v0PGd1C7xCQ" name="inbetween2" incomingTransitions="_u4FQp72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQo72eEe2v0PGd1C7xCQ" specification="ui.actionReleased" target="_u4FQpL2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQpL2eEe2v0PGd1C7xCQ" specification="entry [Action == &quot;Toilet break&quot;] / raise  toilet&#xD;&#xA;entry [Action == &quot;Walk&quot;] / raise  Walk&#xD;&#xA;entry [Action == &quot;Drop&quot;] / raise  drop&#xD;&#xA;entry [Action == &quot;Pick up&quot;] / raise  pickup&#xD;&#xA;entry [Action == &quot;Done&quot;] / raise  toilet_done&#xD;&#xA;entry [Action == &quot;Assemble&quot;] / raise  Assemble&#xD;&#xA;" name="End" incomingTransitions="_u4FQo72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQpb2eEe2v0PGd1C7xCQ" specification="always" target="_u4FQnr2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQpr2eEe2v0PGd1C7xCQ" name="inbetween" incomingTransitions="_u4FQn72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQp72eEe2v0PGd1C7xCQ" specification="after 500ms" target="_u4FQor2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQqL2eEe2v0PGd1C7xCQ" specification="ui.actionReleased" target="_u4FQnr2eEe2v0PGd1C7xCQ"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_u4FQqb2eEe2v0PGd1C7xCQ" name="r1">
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQqr2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.shiftHighlightClear()&#xD;&#xA;entry [ employee.getEnergy >= 25]/&#xD;&#xA;ui.shiftHighlightAssigned(shift); ui.setMsg(&quot;At work\nSelected shift will start soon.&quot;)" name="grace" incomingTransitions="_u4FQsr2eEe2v0PGd1C7xCQ _u4FQrr2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQq72eEe2v0PGd1C7xCQ" specification="after 4s [shift == 0  &amp;&amp; employee.getEnergy >= 25]" target="_u4FQvL2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQrL2eEe2v0PGd1C7xCQ" specification="after 4s [shift == 1  &amp;&amp; employee.getEnergy >= 25]" target="_u4FQs72eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQrb2eEe2v0PGd1C7xCQ" specification="after 4s [shift == 2  &amp;&amp; employee.getEnergy >= 25]" target="_u4FQ0L2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQrr2eEe2v0PGd1C7xCQ" specification="employee.shiftClicked / shift = valueof(employee.shiftClicked)" target="_u4FQqr2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQr72eEe2v0PGd1C7xCQ" specification="employee.goHome" target="_u4FQ4r2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQsL2eEe2v0PGd1C7xCQ" specification="entry / ui.shiftsShow(); ui.setActions(&quot;&quot;);ui.shiftHighlightClear(); ui.setMsg(&quot;At work&quot;);&#xD;&#xA; raise not_working&#xD;&#xA; entry [employee.getEnergy() &lt; 25]  / ui.setMsg(&quot;At work\nEnergy low.&quot;)" name="notWorking" incomingTransitions="_u4FQz72eEe2v0PGd1C7xCQ _u4FQvb2eEe2v0PGd1C7xCQ _u4FQ0b2eEe2v0PGd1C7xCQ _u4FQtL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQsb2eEe2v0PGd1C7xCQ" specification="employee.goHome" target="_u4FQ4r2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQsr2eEe2v0PGd1C7xCQ" specification="always [ employee.getEnergy >= 25] / shift = util.getRandomInteger(3)" target="_u4FQqr2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQs72eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.shiftHighlightActive(shift); raise Working&#xD;&#xA;exit / employee.increasePay(10)" name="assembly" incomingTransitions="_u4FQrL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQtL2eEe2v0PGd1C7xCQ" specification="after 10s" target="_u4FQsL2eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u4FQtb2eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_u4FQtr2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQt72eEe2v0PGd1C7xCQ" specification="" target="_u4FQur2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQuL2eEe2v0PGd1C7xCQ" specification="entry / factory.increaseFinished(1);  factory.increaseMaterial(-1)" name="assembled" incomingTransitions="_u4FQu72eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQub2eEe2v0PGd1C7xCQ" specification="always" target="_u4FQur2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQur2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nAt Assembly.&quot;)" name="Init" incomingTransitions="_u4FQt72eEe2v0PGd1C7xCQ _u4FQub2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQu72eEe2v0PGd1C7xCQ" specification="Assemble [factory.getMaterial() > 0]" target="_u4FQuL2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQvL2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.shiftHighlightActive(shift); raise Working&#xD;&#xA;exit / employee.increasePay(10)" name="unLoad" incomingTransitions="_u4FQq72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQvb2eEe2v0PGd1C7xCQ" specification="after 10s" target="_u4FQsL2eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u4FQvr2eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQv72eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nAt stock.&quot;)" name="atStock" incomingTransitions="_u4FQzb2eEe2v0PGd1C7xCQ _u4FQxL2eEe2v0PGd1C7xCQ _u4FQx72eEe2v0PGd1C7xCQ _u4FQyb2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQwL2eEe2v0PGd1C7xCQ" specification="toilet" target="_u4FQyL2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQwb2eEe2v0PGd1C7xCQ" specification="Walk" target="_u4FQwr2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQwr2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nAt truck.&quot;)" name="atTruck" incomingTransitions="_u4FQwb2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQw72eEe2v0PGd1C7xCQ" specification="pickup" target="_u4FQyr2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQxL2eEe2v0PGd1C7xCQ" specification="Walk" target="_u4FQv72eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQxb2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nAt stock, carrying material.&quot;)" name="atStockCarrying" incomingTransitions="_u4FQy72eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQxr2eEe2v0PGd1C7xCQ" specification="Walk" target="_u4FQyr2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQx72eEe2v0PGd1C7xCQ" specification="drop / factory.increaseMaterial(1)" target="_u4FQv72eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQyL2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nTaking toilet break.&quot;)" name="Toilet" incomingTransitions="_u4FQwL2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQyb2eEe2v0PGd1C7xCQ" specification="toilet_done" target="_u4FQv72eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQyr2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nAt truck, carrying material.&quot;)" name="atTruckCarrying" incomingTransitions="_u4FQw72eEe2v0PGd1C7xCQ _u4FQxr2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQy72eEe2v0PGd1C7xCQ" specification="Walk" target="_u4FQxb2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u4FQzL2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQzb2eEe2v0PGd1C7xCQ" specification="" target="_u4FQv72eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_u4FQzr2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQz72eEe2v0PGd1C7xCQ" specification="" target="_u4FQsL2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u4FQ0L2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.shiftHighlightActive(shift); raise Working&#xD;&#xA;exit / employee.increasePay(10)" name="load" incomingTransitions="_u4FQrb2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ0b2eEe2v0PGd1C7xCQ" specification="after 10s" target="_u4FQsL2eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u4FQ0r2eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQ072eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nAt truck.&quot;)" name="atTruck" incomingTransitions="_u4FQ272eEe2v0PGd1C7xCQ _u4FQ2b2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ1L2eEe2v0PGd1C7xCQ" specification="Walk" target="_u4FQ2r2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQ1b2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nAt stock, carrying product.&quot;)" name="atStockCarrying" incomingTransitions="_u4FQ2L2eEe2v0PGd1C7xCQ _u4FQ3b2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ1r2eEe2v0PGd1C7xCQ" specification="Walk" target="_u4FQ172eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQ172eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nAt truck, carrying product.&quot;)" name="atTruckCarrying" incomingTransitions="_u4FQ1r2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ2L2eEe2v0PGd1C7xCQ" specification="Walk" target="_u4FQ1b2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ2b2eEe2v0PGd1C7xCQ" specification="drop / factory.increaseFinished(-1)" target="_u4FQ072eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQ2r2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nWorking shift\nIn stock.&quot;)" name="atStock" incomingTransitions="_u4FQ1L2eEe2v0PGd1C7xCQ _u4FQ4b2eEe2v0PGd1C7xCQ _u4FQ372eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ272eEe2v0PGd1C7xCQ" specification="Walk" target="_u4FQ072eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ3L2eEe2v0PGd1C7xCQ" specification="toilet" target="_u4FQ3r2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ3b2eEe2v0PGd1C7xCQ" specification="pickup [factory.getFinished() > 0]" target="_u4FQ1b2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u4FQ3r2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;ui.setMsg(&quot;At work\nTaking toilet break.&quot;)" name="Toilet" incomingTransitions="_u4FQ3L2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ372eEe2v0PGd1C7xCQ" specification="toilet_done" target="_u4FQ2r2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u4FQ4L2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ4b2eEe2v0PGd1C7xCQ" specification="" target="_u4FQ2r2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_u4FQ4r2eEe2v0PGd1C7xCQ" specification="entry / ui.shiftsHide(); ui.setMsg(&quot;At home&quot;)&#xD;&#xA;entry [employee.getEnergy() +50 > 100] /&#xD;&#xA;employee.increaseEnergy(100 - employee.getEnergy())&#xD;&#xA;entry [employee.getEnergy() +50 &lt;= 100] /&#xD;&#xA;employee.increaseEnergy(50)" name="home" incomingTransitions="_u4FQ5b2eEe2v0PGd1C7xCQ _u4FQr72eEe2v0PGd1C7xCQ _u4FQsb2eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ472eEe2v0PGd1C7xCQ" specification="employee.goToWork" target="_u4FQkr2eEe2v0PGd1C7xCQ"/>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_u4FQ5L2eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u4FQ5b2eEe2v0PGd1C7xCQ" specification="" target="_u4FQ4r2eEe2v0PGd1C7xCQ"/>
    </vertices>
  </regions>
</sgraph:Statechart>
