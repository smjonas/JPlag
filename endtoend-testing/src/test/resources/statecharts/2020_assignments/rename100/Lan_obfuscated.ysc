<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_LV0voMUKEe2B7vbq8-0-Vg" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;var shift: integer&#xA;&#x9;var timer: integer&#xA;&#x9;var energytimer: integer&#xA;&#x9;var notontoilet: integer&#xA;" name="Lan">
  <regions xmi:type="sgraph:Region" xmi:id="_LV0vocUKEe2B7vbq8-0-Vg" name="wAMh45PzTf">
    <vertices xmi:type="sgraph:State" xmi:id="_LV0vosUKEe2B7vbq8-0-Vg" specification="entry / ui.setMsg(&quot;At work.&quot;); ui.pushMsg(); ui.setMsg(&quot;Selected shift will start soon...&quot;)&#xD;&#xA;entry / ui.shiftsShow()&#xD;&#xA;entry / shift = util.getRandomInteger(3)&#xD;&#xA;entry / ui.shiftHighlightAssigned(shift)&#xD;&#xA;exit / ui.shiftsHide()" name="QJ8tgJT16J" incomingTransitions="_LV0v0MUKEe2B7vbq8-0-Vg _LV0vzMUKEe2B7vbq8-0-Vg">
      <regions xmi:type="sgraph:Region" xmi:id="_LV0vo8UKEe2B7vbq8-0-Vg" name="lqQd03Qwwb">
        <vertices xmi:type="sgraph:Entry" xmi:id="_LV0vpMUKEe2B7vbq8-0-Vg">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vpcUKEe2B7vbq8-0-Vg" specification="" target="_LV0vpsUKEe2B7vbq8-0-Vg"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_LV0vpsUKEe2B7vbq8-0-Vg" specification="employee.shiftClicked / shift = valueof(employee.shiftClicked); ui.shiftHighlightAssigned(shift)" name="VdWJHTa5GN" incomingTransitions="_LV0vpcUKEe2B7vbq8-0-Vg">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vp8UKEe2B7vbq8-0-Vg" specification="employee.goHome / ui.popMsg()" target="_LV0vz8UKEe2B7vbq8-0-Vg"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vqMUKEe2B7vbq8-0-Vg" specification="after 4s / ui.shiftHighlightActive(shift)" target="_LV0vqcUKEe2B7vbq8-0-Vg"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_LV0vqcUKEe2B7vbq8-0-Vg" specification="entry / ui.setMsg(&quot;Working shift.&quot;); ui.pushMsg()&#xD;&#xA;entry / timer = 0&#xD;&#xA;entry / energytimer = 0&#xD;&#xA;entry / notontoilet = 1&#xD;&#xA;ui.actionPressed / timer = 0&#xD;&#xA;exit / ui.setActions(&quot;&quot;)" name="lBRzCCReUv" incomingTransitions="_LV0vqMUKEe2B7vbq8-0-Vg">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vqsUKEe2B7vbq8-0-Vg" specification="after 10s / employee.increasePay(10); ui.popMsg(); ui.popMsg()" target="_LV0vysUKEe2B7vbq8-0-Vg"/>
          <regions xmi:type="sgraph:Region" xmi:id="_LV0vq8UKEe2B7vbq8-0-Vg" name="pGl8NsXSac">
            <vertices xmi:type="sgraph:State" xmi:id="_LV0vrMUKEe2B7vbq8-0-Vg" specification="entry / ui.setActions(&quot;Assemble&quot;)&#xD;&#xA;ui.actionReleased [valueof(ui.actionReleased) == &quot;Assemble&quot; &amp;&amp; factory.getMaterial() > 0&#xD;&#xA;&#x9;&amp;&amp; timer >= 500&#xD;&#xA;] / factory.increaseMaterial(-1); factory.increaseFinished(1)" name="K9KL6GBq6Z" incomingTransitions="_LV0vxMUKEe2B7vbq8-0-Vg"/>
            <vertices xmi:type="sgraph:State" xmi:id="_LV0vrcUKEe2B7vbq8-0-Vg" specification="" name="wKyZVG2Ffn" incomingTransitions="_LV0vw8UKEe2B7vbq8-0-Vg">
              <regions xmi:type="sgraph:Region" xmi:id="_LV0vrsUKEe2B7vbq8-0-Vg" name="FrpgLu7SsB">
                <vertices xmi:type="sgraph:Entry" xmi:id="_LV0vr8UKEe2B7vbq8-0-Vg">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vsMUKEe2B7vbq8-0-Vg" specification="" target="_LV0vscUKEe2B7vbq8-0-Vg"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_LV0vscUKEe2B7vbq8-0-Vg" specification="entry [shift == 0] / ui.setActions(&quot;Walk,Toilet break&quot;); ui.setMsg(&quot;In stock.&quot;)&#xD;&#xA;entry [shift == 2] / ui.setActions(&quot;Walk,Pickup,Toilet break&quot;); ui.setMsg(&quot;In stock.&quot;)" name="sX4GmouhSn" incomingTransitions="_LV0vtsUKEe2B7vbq8-0-Vg _LV0vusUKEe2B7vbq8-0-Vg _LV0vsMUKEe2B7vbq8-0-Vg _LV0vv8UKEe2B7vbq8-0-Vg">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vssUKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; timer >= 500]" target="_LV0vtcUKEe2B7vbq8-0-Vg"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vs8UKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Pickup&quot; &amp;&amp; shift == 2 &amp;&amp; timer >= 500 &amp;&amp; factory.getFinished() > 0]" target="_LV0vuMUKEe2B7vbq8-0-Vg"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vtMUKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Toilet break&quot; &amp;&amp; timer >= 500]" target="_LV0vvsUKEe2B7vbq8-0-Vg"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_LV0vtcUKEe2B7vbq8-0-Vg" specification="entry [shift == 0] / ui.setActions(&quot;Walk,Pickup&quot;); ui.setMsg(&quot;At truck.&quot;)&#xD;&#xA;entry [shift == 2] / ui.setActions(&quot;Walk&quot;); ui.setMsg(&quot;At truck.&quot;)" name="dMLtMzsavi" incomingTransitions="_LV0vssUKEe2B7vbq8-0-Vg _LV0vvcUKEe2B7vbq8-0-Vg">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vtsUKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; timer >= 500]" target="_LV0vscUKEe2B7vbq8-0-Vg"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vt8UKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Pickup&quot; &amp;&amp; shift == 0 &amp;&amp; timer >= 500]" target="_LV0vu8UKEe2B7vbq8-0-Vg"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_LV0vuMUKEe2B7vbq8-0-Vg" specification="entry [shift == 0] / ui.setActions(&quot;Walk,Drop&quot;); ui.setMsg(&quot;At stock, carrying material.&quot;)&#xD;&#xA;entry [shift == 2] / ui.setActions(&quot;Walk&quot;); ui.setMsg(&quot;At stock, carrying finished product.&quot;)" name="CswcW8qwr5" incomingTransitions="_LV0vvMUKEe2B7vbq8-0-Vg _LV0vs8UKEe2B7vbq8-0-Vg">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vucUKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; timer >= 500]" target="_LV0vu8UKEe2B7vbq8-0-Vg"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vusUKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Drop&quot; &amp;&amp; shift == 0 &amp;&amp; timer >= 500] / factory.increaseMaterial(1)" target="_LV0vscUKEe2B7vbq8-0-Vg"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_LV0vu8UKEe2B7vbq8-0-Vg" specification="entry [shift == 0] / ui.setActions(&quot;Walk&quot;); ui.setMsg(&quot;At truck, carrying material.&quot;)&#xD;&#xA;entry [shift == 2] / ui.setActions(&quot;Walk,Drop&quot;); ui.setMsg(&quot;At truck, carrying finished product.&quot;)" name="fRqdpqcdlD" incomingTransitions="_LV0vt8UKEe2B7vbq8-0-Vg _LV0vucUKEe2B7vbq8-0-Vg">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vvMUKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; timer >= 500]" target="_LV0vuMUKEe2B7vbq8-0-Vg"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vvcUKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Drop&quot; &amp;&amp; shift == 2 &amp;&amp; timer >= 500] / factory.increaseFinished(-1)" target="_LV0vtcUKEe2B7vbq8-0-Vg"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_LV0vvsUKEe2B7vbq8-0-Vg" specification="entry / ui.setActions(&quot;Done&quot;); ui.setMsg(&quot;On toilet break.&quot;)&#xD;&#xA;entry / notontoilet = 0&#xD;&#xA;exit / notontoilet = 1" name="I4WL71uuqw" incomingTransitions="_LV0vtMUKEe2B7vbq8-0-Vg">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vv8UKEe2B7vbq8-0-Vg" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Done&quot; &amp;&amp; timer >= 500]" target="_LV0vscUKEe2B7vbq8-0-Vg"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_LV0vwMUKEe2B7vbq8-0-Vg">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vwcUKEe2B7vbq8-0-Vg" specification="" target="_LV0vwsUKEe2B7vbq8-0-Vg"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_LV0vwsUKEe2B7vbq8-0-Vg" incomingTransitions="_LV0vwcUKEe2B7vbq8-0-Vg">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vw8UKEe2B7vbq8-0-Vg" specification="else" target="_LV0vrcUKEe2B7vbq8-0-Vg"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vxMUKEe2B7vbq8-0-Vg" specification="[shift == 1]" target="_LV0vrMUKEe2B7vbq8-0-Vg"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_LV0vxcUKEe2B7vbq8-0-Vg" name="e1VY7nCKQQ">
            <vertices xmi:type="sgraph:Entry" xmi:id="_LV0vxsUKEe2B7vbq8-0-Vg">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vx8UKEe2B7vbq8-0-Vg" specification="" target="_LV0vyMUKEe2B7vbq8-0-Vg"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_LV0vyMUKEe2B7vbq8-0-Vg" specification="entry / timer += 1; energytimer += notontoilet&#xD;&#xA;entry [energytimer % 1000 == 999] / employee.increaseEnergy(-2)" name="gl7o8XX5yd" incomingTransitions="_LV0vx8UKEe2B7vbq8-0-Vg _LV0vycUKEe2B7vbq8-0-Vg">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vycUKEe2B7vbq8-0-Vg" specification="after 1ms" target="_LV0vyMUKEe2B7vbq8-0-Vg"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Choice" xmi:id="_LV0vysUKEe2B7vbq8-0-Vg" incomingTransitions="_LV0vqsUKEe2B7vbq8-0-Vg">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vy8UKEe2B7vbq8-0-Vg" specification="else" target="_LV0vzcUKEe2B7vbq8-0-Vg"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vzMUKEe2B7vbq8-0-Vg" specification="[employee.getEnergy() >= 25]" target="_LV0vosUKEe2B7vbq8-0-Vg"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_LV0vzcUKEe2B7vbq8-0-Vg" specification="entry /ui.setMsg(&quot;You are at work, but too exhausted. Please go home.&quot;)" name="yuKZAzBkaG" incomingTransitions="_LV0vy8UKEe2B7vbq8-0-Vg">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0vzsUKEe2B7vbq8-0-Vg" specification="employee.goHome" target="_LV0vz8UKEe2B7vbq8-0-Vg"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_LV0vz8UKEe2B7vbq8-0-Vg" specification="entry / ui.setMsg(&quot;You are at home.&quot;)&#xD;&#xA;exit [employee.getEnergy() > 50] / employee.increaseEnergy(100 - employee.getEnergy())&#xD;&#xA;exit [employee.getEnergy() &lt;= 50]  / employee.increaseEnergy(50)" name="bNhUdVmJ2L" incomingTransitions="_LV0v0sUKEe2B7vbq8-0-Vg _LV0vp8UKEe2B7vbq8-0-Vg _LV0vzsUKEe2B7vbq8-0-Vg">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0v0MUKEe2B7vbq8-0-Vg" specification="employee.goToWork" target="_LV0vosUKEe2B7vbq8-0-Vg"/>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_LV0v0cUKEe2B7vbq8-0-Vg">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_LV0v0sUKEe2B7vbq8-0-Vg" specification="" target="_LV0vz8UKEe2B7vbq8-0-Vg"/>
    </vertices>
  </regions>
</sgraph:Statechart>
