<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_QgJcINLDEe2Dqqh-jNmL8Q" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var choice  = -1&#xA;&#x9;var currentTask = &quot;&quot;&#xA;&#x9;event TakeBreak&#xA;&#x9;event TaskSucceeded&#xA;&#x9;event StartWorking&#xA;&#x9;event EndOfShift&#xA;&#xA;&#x9;&#xA;" name="Roa">
  <regions xmi:type="sgraph:Region" xmi:id="_QgJcIdLDEe2Dqqh-jNmL8Q" name="main region">
    <vertices xmi:type="sgraph:Entry" xmi:id="_QgJcItLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcI9LDEe2Dqqh-jNmL8Q" specification="" target="_QgJcb9LDEe2Dqqh-jNmL8Q"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_QgJcJNLDEe2Dqqh-jNmL8Q" specification="entry / &#xD;&#xA;ui.setMsg(&quot;You are at work.&quot;); &#xD;&#xA;ui.shiftsShow()" name="Work" incomingTransitions="_QgJccNLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcJdLDEe2Dqqh-jNmL8Q" specification="employee.goHome" target="_QgJcb9LDEe2Dqqh-jNmL8Q"/>
      <regions xmi:type="sgraph:Region" xmi:id="_QgJcJtLDEe2Dqqh-jNmL8Q" name="r1">
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcJ9LDEe2Dqqh-jNmL8Q" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(0);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at Unload.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;);&#xD;&#xA;&#x9;ui.popMsg()" name="Unload" incomingTransitions="_QgJcRNLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcKNLDEe2Dqqh-jNmL8Q" specification="after 10s / employee.increasePay(10)" target="_QgJcRtLDEe2Dqqh-jNmL8Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_QgJcKdLDEe2Dqqh-jNmL8Q" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_QgJcKtLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcK9LDEe2Dqqh-jNmL8Q" specification="" target="_QgJcLtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcLNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;raise TakeBreak;&#xD;&#xA;&#x9;ui.setActions(&quot;Done&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;TakingBreak&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;raise StartWorking" name="Break" incomingTransitions="_QgJcMNLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcLdLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Done&quot;]" target="_QgJcLtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcLtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,ToiletBreak&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;In Stock&quot;)" name="AtStock" incomingTransitions="_QgJcK9LDEe2Dqqh-jNmL8Q _QgJcONLDEe2Dqqh-jNmL8Q _QgJcM9LDEe2Dqqh-jNmL8Q _QgJcLdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcL9LDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_QgJcMdLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcMNLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;ToiletBreak&quot;]" target="_QgJcLNLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcMdLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck&quot;)" name="AtTruck" incomingTransitions="_QgJcL9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcMtLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Pick up&quot;]" target="_QgJcNNLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcM9LDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_QgJcLtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcNNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck Carrying&quot;)" name="AtTruckCarrying" incomingTransitions="_QgJcMtLDEe2Dqqh-jNmL8Q _QgJcN9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcNdLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_QgJcNtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcNtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Stock Carrying&quot;)" name="AtStockCarrying" incomingTransitions="_QgJcNdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcN9LDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_QgJcNNLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcONLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Drop&quot;]/factory.increaseMaterial(1)" target="_QgJcLtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcOdLDEe2Dqqh-jNmL8Q" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(1);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at Assembly.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#x9;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.popMsg();&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;)" name="Assembly" incomingTransitions="_QgJcQ9LDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcOtLDEe2Dqqh-jNmL8Q" specification="after 10s /&#xD;&#xA; employee.increasePay(10)" target="_QgJcRtLDEe2Dqqh-jNmL8Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_QgJcO9LDEe2Dqqh-jNmL8Q" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_QgJcPNLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcPdLDEe2Dqqh-jNmL8Q" specification="" target="_QgJcPtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcPtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At the Assmebler Machine&quot;)" name="Assembling" incomingTransitions="_QgJcPdLDEe2Dqqh-jNmL8Q _QgJcP9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcP9LDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Assemble&quot; &amp;&amp; factory.getMaterial() >= 1]/ factory.increaseFinished(1)" target="_QgJcPtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_QgJcQNLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcQdLDEe2Dqqh-jNmL8Q" specification="" target="_QgJcRtLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_QgJcQtLDEe2Dqqh-jNmL8Q" incomingTransitions="_QgJcR9LDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcQ9LDEe2Dqqh-jNmL8Q" specification="[choice == 1]" target="_QgJcOdLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcRNLDEe2Dqqh-jNmL8Q" specification="[choice == 0]" target="_QgJcJ9LDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcRdLDEe2Dqqh-jNmL8Q" specification="[choice == 2]" target="_QgJcSNLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcRtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;choice = util.getRandomInteger(3);&#xD;&#xA;&#x9;ui.shiftHighlightAssigned(choice)&#xD;&#xA;&#xD;&#xA;employee.shiftClicked/&#xD;&#xA;&#x9;choice = valueof(employee.shiftClicked);&#xD;&#xA;&#x9;ui.shiftHighlightAssigned(choice)&#xD;&#xA;&#x9;" name="grace" incomingTransitions="_QgJcQdLDEe2Dqqh-jNmL8Q _QgJcKNLDEe2Dqqh-jNmL8Q _QgJcSdLDEe2Dqqh-jNmL8Q _QgJcOtLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcR9LDEe2Dqqh-jNmL8Q" specification="after 4s[employee.getEnergy() >= 25]" target="_QgJcQtLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcSNLDEe2Dqqh-jNmL8Q" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(2);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at load.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.popMsg();&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;)" name="Load" incomingTransitions="_QgJcRdLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcSdLDEe2Dqqh-jNmL8Q" specification="after 10s / employee.increasePay(10)" target="_QgJcRtLDEe2Dqqh-jNmL8Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_QgJcStLDEe2Dqqh-jNmL8Q" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_QgJcS9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcTNLDEe2Dqqh-jNmL8Q" specification="" target="_QgJcTdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcTdLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Pick up,ToiletBreak&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;In Stock&quot;)" name="AtStock" incomingTransitions="_QgJcTNLDEe2Dqqh-jNmL8Q _QgJcUtLDEe2Dqqh-jNmL8Q _QgJcWdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcTtLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_QgJcUdLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcT9LDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Pick up&quot; &amp;&amp; factory.getFinished() > 0]" target="_QgJcVtLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcUNLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;ToiletBreak&quot;]" target="_QgJcWNLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcUdLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck&quot;)" name="AtTruck" incomingTransitions="_QgJcTtLDEe2Dqqh-jNmL8Q _QgJcVdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcUtLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_QgJcTdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcU9LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck Carrying&quot;)" name="AtTruckCarrying" incomingTransitions="_QgJcV9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcVNLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_QgJcVtLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcVdLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Drop&quot;] /&#x9;factory.increaseFinished(-1)" target="_QgJcUdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcVtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Stock Carrying&quot;)" name="AtStockCarrying" incomingTransitions="_QgJcVNLDEe2Dqqh-jNmL8Q _QgJcT9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcV9LDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_QgJcU9LDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgJcWNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;&#x9;raise TakeBreak;&#xD;&#xA;&#x9;ui.setActions(&quot;Done&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;TakingBreak&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;raise StartWorking" name="Break" incomingTransitions="_QgJcUNLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcWdLDEe2Dqqh-jNmL8Q" specification="TaskSucceeded[currentTask == &quot;Done&quot;]" target="_QgJcTdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_QgJcWtLDEe2Dqqh-jNmL8Q" name="r2">
        <vertices xmi:type="sgraph:Entry" xmi:id="_QgJcW9LDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcXNLDEe2Dqqh-jNmL8Q" specification="" target="_QgJcXdLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcXdLDEe2Dqqh-jNmL8Q" specification="" name="NotPressing" incomingTransitions="_QgJcXNLDEe2Dqqh-jNmL8Q _QgJcYNLDEe2Dqqh-jNmL8Q _QgJcYdLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcXtLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed / &#xD;&#xA;&#x9;currentTask = valueof(ui.actionPressed)" target="_QgJcX9LDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcX9LDEe2Dqqh-jNmL8Q" specification="" name="Pressing" incomingTransitions="_QgJcXtLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcYNLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased" target="_QgJcXdLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcYdLDEe2Dqqh-jNmL8Q" specification="after 500ms / &#xD;&#xA;&#x9;raise TaskSucceeded" target="_QgJcXdLDEe2Dqqh-jNmL8Q"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_QgJcYtLDEe2Dqqh-jNmL8Q" name="r3">
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcY9LDEe2Dqqh-jNmL8Q" name="GracePeriod" incomingTransitions="_QgJcZtLDEe2Dqqh-jNmL8Q _QgJcbNLDEe2Dqqh-jNmL8Q _QgJcadLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcZNLDEe2Dqqh-jNmL8Q" specification="StartWorking" target="_QgJcatLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_QgJcZdLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcZtLDEe2Dqqh-jNmL8Q" specification="" target="_QgJcY9LDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcZ9LDEe2Dqqh-jNmL8Q" name="Break" incomingTransitions="_QgJcbtLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcaNLDEe2Dqqh-jNmL8Q" specification="StartWorking" target="_QgJcatLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcadLDEe2Dqqh-jNmL8Q" specification="EndOfShift" target="_QgJcY9LDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgJcatLDEe2Dqqh-jNmL8Q" name="working" incomingTransitions="_QgJcZNLDEe2Dqqh-jNmL8Q _QgJca9LDEe2Dqqh-jNmL8Q _QgJcbdLDEe2Dqqh-jNmL8Q _QgJcaNLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJca9LDEe2Dqqh-jNmL8Q" specification="after 1s / employee.increaseEnergy(-2)" target="_QgJcatLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcbNLDEe2Dqqh-jNmL8Q" specification="EndOfShift" target="_QgJcY9LDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcbdLDEe2Dqqh-jNmL8Q" specification="employee.goHome" target="_QgJcatLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJcbtLDEe2Dqqh-jNmL8Q" specification="TakeBreak" target="_QgJcZ9LDEe2Dqqh-jNmL8Q"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_QgJcb9LDEe2Dqqh-jNmL8Q" specification="entry / ui.setMsg(&quot;You are at home.&quot;); ui.shiftsHide()&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;&#x9;employee.increaseEnergy(50)" name="Home" incomingTransitions="_QgJcI9LDEe2Dqqh-jNmL8Q _QgJcJdLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgJccNLDEe2Dqqh-jNmL8Q" specification="employee.goToWork" target="_QgJcJNLDEe2Dqqh-jNmL8Q"/>
    </vertices>
  </regions>
</sgraph:Statechart>
