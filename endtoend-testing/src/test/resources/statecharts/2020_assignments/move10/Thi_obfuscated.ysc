<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_Qgjr0NLDEe2Dqqh-jNmL8Q" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var shiftChoice: integer&#xA;&#x9;var shiftGraceTimer: integer&#xA;&#x9;var shiftTimer: integer&#xA;&#x9;var actionTimer: integer&#xA;&#x9;var action:string&#xA;&#x9;var carryingStockMaterial=false&#xA;&#x9;event doAlwaysTransition&#xA;&#x9;event break&#xA;&#x9;event stopbreak&#xA;" name="Thi">
  <regions xmi:type="sgraph:Region" xmi:id="_Qgjr0dLDEe2Dqqh-jNmL8Q" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_Qgjr0tLDEe2Dqqh-jNmL8Q" specification="entry / ui.setMsg(&quot;You are at home.&quot;)" name="WorkingManSim" incomingTransitions="_QgjsONLDEe2Dqqh-jNmL8Q">
      <regions xmi:type="sgraph:Region" xmi:id="_Qgjr09LDEe2Dqqh-jNmL8Q" name="r1">
        <vertices xmi:type="sgraph:Entry" xmi:id="_Qgjr1NLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr1dLDEe2Dqqh-jNmL8Q" specification="" target="_QgjsNdLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Qgjr1tLDEe2Dqqh-jNmL8Q" specification="entry /&#xD;&#xA;raise doAlwaysTransition;&#xD;&#xA;ui.setActions(&quot;&quot;)" name="AtWorkState" incomingTransitions="_QgjsNtLDEe2Dqqh-jNmL8Q _Qgjr4dLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr19LDEe2Dqqh-jNmL8Q" specification="always/&#xD;&#xA;ui.shiftHighlightAssigned(shiftChoice);&#xD;&#xA;shiftGraceTimer=4&#xD;&#xA;" target="_Qgjr2NLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Qgjr2NLDEe2Dqqh-jNmL8Q" specification="entry /&#xD;&#xA;raise doAlwaysTransition&#x9;" name="ChooseShiftState" incomingTransitions="_Qgjr19LDEe2Dqqh-jNmL8Q _Qgjr2dLDEe2Dqqh-jNmL8Q _Qgjr2tLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr2dLDEe2Dqqh-jNmL8Q" specification=" after 1s/&#xD;&#xA; shiftGraceTimer=shiftGraceTimer-1&#xD;&#xA;" target="_Qgjr2NLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr2tLDEe2Dqqh-jNmL8Q" specification="employee.shiftClicked/&#xD;&#xA;shiftChoice=valueof(employee.shiftClicked);&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;ui.shiftHighlightAssigned(valueof(employee.shiftClicked))" target="_Qgjr2NLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr29LDEe2Dqqh-jNmL8Q" specification="employee.goHome/&#xD;&#xA;shiftGraceTimer=0;&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;ui.setMsg(&quot;You are at home.&quot;)&#xD;&#xA;&#xD;&#xA;" target="_Qgjr3dLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr3NLDEe2Dqqh-jNmL8Q" specification="always[shiftGraceTimer&lt;=0 &amp;&amp; employee.getEnergy()>=25]/&#xD;&#xA;employee.increaseEnergy(-2)" target="_Qgjr4NLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Qgjr3dLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;raise doAlwaysTransition" name="increaseEnergyState" incomingTransitions="_Qgjr29LDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr3tLDEe2Dqqh-jNmL8Q" specification="always [employee.getEnergy()&lt;51]/&#xD;&#xA;employee.increaseEnergy(50)" target="_QgjsNdLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr39LDEe2Dqqh-jNmL8Q" specification="always[employee.getEnergy()>50]/&#xD;&#xA;employee.increaseEnergy(100-employee.getEnergy())" target="_QgjsNdLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Qgjr4NLDEe2Dqqh-jNmL8Q" name="EnergyDrainState" incomingTransitions="_Qgjr3NLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr4dLDEe2Dqqh-jNmL8Q" specification="# main_exit >&#xD;&#xA;&#xD;&#xA;" target="_Qgjr1tLDEe2Dqqh-jNmL8Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_Qgjr4tLDEe2Dqqh-jNmL8Q" name="Work">
            <vertices xmi:type="sgraph:Entry" xmi:id="_Qgjr49LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr5NLDEe2Dqqh-jNmL8Q" specification="" target="_Qgjr8dLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Qgjr5dLDEe2Dqqh-jNmL8Q" name="AssemblyShift" incomingTransitions="_Qgjr8tLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr5tLDEe2Dqqh-jNmL8Q" specification="after 10s/&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;actionTimer=0;&#xD;&#xA;employee.increasePay(10)" target="_Qgjr8NLDEe2Dqqh-jNmL8Q"/>
              <regions xmi:type="sgraph:Region" xmi:id="_Qgjr59LDEe2Dqqh-jNmL8Q" name="r1">
                <vertices xmi:type="sgraph:Entry" xmi:id="_Qgjr6NLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr6dLDEe2Dqqh-jNmL8Q" specification="" target="_Qgjr7tLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qgjr6tLDEe2Dqqh-jNmL8Q" name="ActionCounter" incomingTransitions="_Qgjr79LDEe2Dqqh-jNmL8Q _Qgjr69LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr69LDEe2Dqqh-jNmL8Q" specification="after 100ms/&#xD;&#xA;actionTimer+=100" target="_Qgjr6tLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr7NLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[actionTimer&lt;=500]/&#xD;&#xA;actionTimer=0" target="_Qgjr7tLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr7dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[actionTimer>500]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;factory.increaseMaterial(-1);&#xD;&#xA;factory.increaseFinished(1)" target="_Qgjr7tLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qgjr7tLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setMsg(&quot;At assembly line&quot;);&#xD;&#xA;ui.setActions(&quot;Assemble&quot;)" name="AssembleState" incomingTransitions="_Qgjr6dLDEe2Dqqh-jNmL8Q _Qgjr7NLDEe2Dqqh-jNmL8Q _Qgjr7dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr79LDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Assemble&quot;&amp;&amp;factory.getMaterial()>0]/&#xD;&#xA;actionTimer=0&#xD;&#xA;&#xD;&#xA;" target="_Qgjr6tLDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:Exit" xmi:id="_Qgjr8NLDEe2Dqqh-jNmL8Q" name="main_exit" incomingTransitions="_Qgjr5tLDEe2Dqqh-jNmL8Q _Qgjr9tLDEe2Dqqh-jNmL8Q _QgjsEtLDEe2Dqqh-jNmL8Q"/>
            <vertices xmi:type="sgraph:State" xmi:id="_Qgjr8dLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;raise doAlwaysTransition" name="GoToShiftState" incomingTransitions="_Qgjr5NLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr8tLDEe2Dqqh-jNmL8Q" specification="always[shiftChoice==1]/&#xD;&#xA;shiftTimer=10;&#xD;&#xA;ui.shiftHighlightActive(shiftChoice)" target="_Qgjr5dLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr89LDEe2Dqqh-jNmL8Q" specification="always[shiftChoice==2]/&#xD;&#xA;shiftTimer=10;&#xD;&#xA;ui.shiftHighlightActive(shiftChoice)" target="_Qgjr9dLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr9NLDEe2Dqqh-jNmL8Q" specification="always[shiftChoice==0]/&#xD;&#xA;shiftTimer=10;&#xD;&#xA;ui.shiftHighlightActive(shiftChoice)" target="_QgjsEdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Qgjr9dLDEe2Dqqh-jNmL8Q" name="LoadShift" incomingTransitions="_Qgjr89LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr9tLDEe2Dqqh-jNmL8Q" specification="after 10s/&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=false;&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;employee.increasePay(10)" target="_Qgjr8NLDEe2Dqqh-jNmL8Q"/>
              <regions xmi:type="sgraph:Region" xmi:id="_Qgjr99LDEe2Dqqh-jNmL8Q" name="r1">
                <vertices xmi:type="sgraph:State" xmi:id="_Qgjr-NLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;raise doAlwaysTransition&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" name="ActionCounter" incomingTransitions="_QgjsCdLDEe2Dqqh-jNmL8Q _QgjsCtLDEe2Dqqh-jNmL8Q _QgjsC9LDEe2Dqqh-jNmL8Q _QgjsBdLDEe2Dqqh-jNmL8Q _Qgjr-9LDEe2Dqqh-jNmL8Q _QgjsENLDEe2Dqqh-jNmL8Q _QgjsB9LDEe2Dqqh-jNmL8Q _QgjsDdLDEe2Dqqh-jNmL8Q _QgjsDtLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr-dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(((action==&quot;walkStock&quot;)&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkTruck&quot;||action==&quot;pickup&quot;||action==&quot;break&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_QgjsCNLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr-tLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[((action==&quot;stopbreak&quot;&amp;&amp;actionTimer&lt;500)&#xD;&#xA;&#x9;||(action==&quot;break&quot;&amp;&amp;actionTimer>=500 ))]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;raise break" target="_QgjsBNLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr-9LDEe2Dqqh-jNmL8Q" specification="after 100ms/&#xD;&#xA;actionTimer+=100" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr_NLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(((action==&quot;walkStock&quot;)&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkTruck&quot;||action==&quot;break&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_QgjsD9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr_dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(action==&quot;pickup&quot;&amp;&amp;actionTimer>=500 )]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=true&#xD;&#xA;" target="_QgjsD9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr_tLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(((action==&quot;walkTruck&quot;)&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkStock&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_QgjsBtLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qgjr_9LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(((action==&quot;drop&quot;)&amp;&amp;actionTimer>=500))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=false;&#xD;&#xA;factory.increaseFinished(-1)" target="_QgjsBtLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsANLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(((action==&quot;walkTruck&quot;)&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkStock&quot;||action==&quot;drop&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_QgjsDNLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsAdLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(((action==&quot;stopbreak&quot;)&amp;&amp;actionTimer>=500))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;raise stopbreak" target="_QgjsCNLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_QgjsAtLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsA9LDEe2Dqqh-jNmL8Q" specification="" target="_QgjsCNLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsBNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;ui.setMsg(&quot;On toilet&quot;)&#xD;&#xA;" name="ToiletBreak" incomingTransitions="_Qgjr-tLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsBdLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Done&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;stopbreak&quot;&#xD;&#xA;" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsBtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)" name="AtTruck" incomingTransitions="_Qgjr_tLDEe2Dqqh-jNmL8Q _Qgjr_9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsB9LDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkStock&quot;&#xD;&#xA;" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsCNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setMsg(&quot;At stock&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet Break&quot;)" name="AtStock" incomingTransitions="_QgjsA9LDEe2Dqqh-jNmL8Q _Qgjr-dLDEe2Dqqh-jNmL8Q _QgjsAdLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsCdLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Toilet Break&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;break&quot;&#xD;&#xA;" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsCtLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkTruck&quot;&#xD;&#xA;" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsC9LDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Pick up&quot;&amp;&amp;factory.getFinished()>0 ]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;pickup&quot;&#xD;&#xA;" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsDNLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="AtTruckLoaded" incomingTransitions="_QgjsANLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsDdLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkStock&quot;&#xD;&#xA;" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsDtLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Drop&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;drop&quot;&#xD;&#xA;" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsD9LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="AtStockLoaded" incomingTransitions="_Qgjr_NLDEe2Dqqh-jNmL8Q _Qgjr_dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsENLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkTruck&quot;&#xD;&#xA;" target="_Qgjr-NLDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgjsEdLDEe2Dqqh-jNmL8Q" name="UnloadShift" incomingTransitions="_Qgjr9NLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsEtLDEe2Dqqh-jNmL8Q" specification="after 10s/&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=false;&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;employee.increasePay(10)" target="_Qgjr8NLDEe2Dqqh-jNmL8Q"/>
              <regions xmi:type="sgraph:Region" xmi:id="_QgjsE9LDEe2Dqqh-jNmL8Q" name="r1">
                <vertices xmi:type="sgraph:Entry" xmi:id="_QgjsFNLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsFdLDEe2Dqqh-jNmL8Q" specification="" target="_QgjsFtLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsFtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock&quot;)" name="AtStock" incomingTransitions="_QgjsFdLDEe2Dqqh-jNmL8Q _QgjsG9LDEe2Dqqh-jNmL8Q _QgjsINLDEe2Dqqh-jNmL8Q _QgjsItLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsF9LDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkTruck&quot;&#xD;&#xA;" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsGNLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Toilet break&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;break&quot;&#xD;&#xA;" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsGdLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;raise doAlwaysTransition&#xD;&#xA;&#xD;&#xA;" name="ActionCounter" incomingTransitions="_QgjsF9LDEe2Dqqh-jNmL8Q _QgjsGtLDEe2Dqqh-jNmL8Q _QgjsJNLDEe2Dqqh-jNmL8Q _QgjsJ9LDEe2Dqqh-jNmL8Q _QgjsKtLDEe2Dqqh-jNmL8Q _QgjsJdLDEe2Dqqh-jNmL8Q _QgjsKNLDEe2Dqqh-jNmL8Q _QgjsGNLDEe2Dqqh-jNmL8Q _QgjsLNLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsGtLDEe2Dqqh-jNmL8Q" specification="after 100ms/&#xD;&#xA;actionTimer+=100" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsG9LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(((action==&quot;walkTruck&quot;||action==&quot;break&quot;)&amp;&amp;actionTimer&lt;500)&#xD;&#xA;&#x9;||((action==&quot;walkStock&quot;)&amp;&amp;actionTimer>=500 ))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0&#xD;&#xA;" target="_QgjsFtLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsHNLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[((action==&quot;walkTruck&quot;&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkStock&quot;||action==&quot;pickup&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_QgjsI9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsHdLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[((action==&quot;walkTruck&quot;&amp;&amp;actionTimer&lt;500)&#xD;&#xA;&#x9;||(action==&quot;walkStock&quot;&amp;&amp;actionTimer>=500 ))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0&#xD;&#xA;" target="_QgjsJtLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsHtLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[((action==&quot;walkTruck&quot;&amp;&amp;actionTimer>=500 )&#xD;&#xA;&#x9;||(action==&quot;walkStock&quot;&amp;&amp;actionTimer&lt;500))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_QgjsKdLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsH9LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(action==&quot;pickup&quot;&amp;&amp;actionTimer>=500 )]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=true&#xD;&#xA;" target="_QgjsKdLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsINLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[(action==&quot;Drop&quot;&amp;&amp;actionTimer>=500 )]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=false;&#xD;&#xA;factory.increaseMaterial(1)" target="_QgjsFtLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsIdLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[((action==&quot;stopbreak&quot;&amp;&amp;actionTimer&lt;500)&#xD;&#xA;&#x9;||(action==&quot;break&quot;&amp;&amp;actionTimer>=500 ))]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;raise break" target="_QgjsK9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsItLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[&#xD;&#xA;&#x9;((action==&quot;stopbreak&quot;)&amp;&amp;actionTimer>=500 )&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;raise stopbreak&#xD;&#xA;" target="_QgjsFtLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsI9LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck&quot;)&#xD;&#xA;" name="AtTruck" incomingTransitions="_QgjsHNLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsJNLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkStock&quot;&#xD;&#xA;" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsJdLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Pick up&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;pickup&quot;&#xD;&#xA;" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsJtLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;An stock, carrying material.&quot;)" name="AtStockCarrying" incomingTransitions="_QgjsHdLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsJ9LDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkTruck&quot;&#xD;&#xA;" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsKNLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Drop&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;Drop&quot;&#xD;&#xA;" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsKdLDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="AtTruckLoaded" incomingTransitions="_QgjsHtLDEe2Dqqh-jNmL8Q _QgjsH9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsKtLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkStock&quot;&#xD;&#xA;" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgjsK9LDEe2Dqqh-jNmL8Q" specification="entry/&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;ui.setMsg(&quot;On toilet&quot;)&#xD;&#xA;" name="ToiletBreak" incomingTransitions="_QgjsIdLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsLNLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Done&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;stopbreak&quot;&#xD;&#xA;" target="_QgjsGdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_QgjsLdLDEe2Dqqh-jNmL8Q" name="Energy">
            <vertices xmi:type="sgraph:State" xmi:id="_QgjsLtLDEe2Dqqh-jNmL8Q" specification="" name="decreaseEnergyState" incomingTransitions="_QgjsMtLDEe2Dqqh-jNmL8Q _QgjsL9LDEe2Dqqh-jNmL8Q _QgjsNNLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsL9LDEe2Dqqh-jNmL8Q" specification="after 1s/&#xD;&#xA;employee.increaseEnergy(-2)" target="_QgjsLtLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsMNLDEe2Dqqh-jNmL8Q" specification="break" target="_QgjsM9LDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_QgjsMdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsMtLDEe2Dqqh-jNmL8Q" specification="" target="_QgjsLtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgjsM9LDEe2Dqqh-jNmL8Q" name="break" incomingTransitions="_QgjsMNLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsNNLDEe2Dqqh-jNmL8Q" specification="stopbreak" target="_QgjsLtLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgjsNdLDEe2Dqqh-jNmL8Q" specification="" name="AtHomeState" incomingTransitions="_Qgjr1dLDEe2Dqqh-jNmL8Q _Qgjr3tLDEe2Dqqh-jNmL8Q _Qgjr39LDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsNtLDEe2Dqqh-jNmL8Q" specification="employee.goToWork / &#xD;&#xA;ui.shiftsShow();&#xD;&#xA;ui.setMsg('You are at work.');&#xD;&#xA;shiftChoice=util.getRandomInteger(3)&#xD;&#xA;" target="_Qgjr1tLDEe2Dqqh-jNmL8Q"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_QgjsN9LDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgjsONLDEe2Dqqh-jNmL8Q" specification="" target="_Qgjr0tLDEe2Dqqh-jNmL8Q"/>
    </vertices>
  </regions>
</sgraph:Statechart>
