<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_hzY7gMBtEe2Mc7U_W-ye0Q" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var assignedShift: integer&#xA;&#x9;&#xA;&#x9;event walk&#xA;&#x9;event pickUp&#xA;&#x9;event drop&#xA;&#x9;event toiletBreak&#xA;&#x9;event done&#xA;&#x9;event assemble&#xA;&#xA;" name="Bor">
  <regions xmi:type="sgraph:Region" xmi:id="_hzY7gcBtEe2Mc7U_W-ye0Q" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_hzY7gsBtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.setMsg(&quot;At home.&quot;);&#xA;employee.increaseEnergy(50)" name="atHome" incomingTransitions="_hzY7hcBtEe2Mc7U_W-ye0Q _hzY7isBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7g8BtEe2Mc7U_W-ye0Q" specification="employee.goToWork" target="_hzY7hsBtEe2Mc7U_W-ye0Q"/>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_hzY7hMBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7hcBtEe2Mc7U_W-ye0Q" target="_hzY7gsBtEe2Mc7U_W-ye0Q"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_hzY7hsBtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.shiftsShow();&#xA;ui.setMsg(&quot;At work.&quot;);&#xA;ui.pushMsg()&#xA;exit/&#xA;ui.shiftsHide();&#xA;ui.popMsg()" name="atWork" incomingTransitions="_hzY7g8BtEe2Mc7U_W-ye0Q">
      <regions xmi:type="sgraph:Region" xmi:id="_hzY7h8BtEe2Mc7U_W-ye0Q" name="z">
        <vertices xmi:type="sgraph:State" xmi:id="_hzY7iMBtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.shiftHighlightAssigned(assignedShift);&#xA;ui.setMsg(&quot;Select a shift type.&quot;)&#xA;entry [employee.getEnergy() &lt; 25]/&#xA;ui.setMsg(&quot;Not enough energy to work.&quot;)" name="shiftAssigned" incomingTransitions="_hzY7jcBtEe2Mc7U_W-ye0Q _hzY7icBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7icBtEe2Mc7U_W-ye0Q" specification="employee.shiftClicked /&#xA;assignedShift = valueof(employee.shiftClicked)" target="_hzY7iMBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7isBtEe2Mc7U_W-ye0Q" specification="employee.goHome" target="_hzY7gsBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7i8BtEe2Mc7U_W-ye0Q" specification="after 4 s [employee.getEnergy() >= 25]/&#xA;ui.shiftHighlightActive(assignedShift)" target="_hzY7jsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_hzY7jMBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7jcBtEe2Mc7U_W-ye0Q" specification="/&#xA;assignedShift = util.getRandomInteger(3)" target="_hzY7iMBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_hzY7jsBtEe2Mc7U_W-ye0Q" specification="exit/&#xA;employee.increasePay(10);&#xA;ui.setActions(&quot;&quot;)" name="shift" incomingTransitions="_hzY7i8BtEe2Mc7U_W-ye0Q">
          <regions xmi:type="sgraph:Region" xmi:id="_hzY7j8BtEe2Mc7U_W-ye0Q" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7kMBtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.setActions(&quot;Walk,Toilet break&quot;);&#xA;ui.setMsg(&quot;At stock.&quot;)&#xA;entry [assignedShift == 2]/&#xA;ui.setActions(&quot;Walk,Toilet break,Pick up&quot;)" name="atStock" incomingTransitions="_hzY7l8BtEe2Mc7U_W-ye0Q _hzY7lMBtEe2Mc7U_W-ye0Q _hzY7nMBtEe2Mc7U_W-ye0Q _hzY7nsBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7kcBtEe2Mc7U_W-ye0Q" specification="toiletBreak" target="_hzY7m8BtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7ksBtEe2Mc7U_W-ye0Q" specification="pickUp&#xA;[assignedShift == 2&#xA;&#x9;&amp;&amp; factory.getFinished() > 0]/&#xA;factory.increaseFinished(-1)" target="_hzY7lsBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7k8BtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.setActions(&quot;Walk&quot;);&#xA;ui.setMsg(&quot;At truck.&quot;)&#xA;entry [assignedShift == 0]/&#xA;ui.setActions(&quot;Walk,Pick up&quot;)" name="atTruck" incomingTransitions="_hzY7msBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7lMBtEe2Mc7U_W-ye0Q" specification="walk" target="_hzY7kMBtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7lcBtEe2Mc7U_W-ye0Q" specification="pickUp&#xA;[assignedShift == 0]" target="_hzY7mMBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7lsBtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.setActions(&quot;Walk&quot;);&#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)&#xA;entry [assignedShift == 0]/&#xA;ui.setActions(&quot;Walk,Drop&quot;)" name="atStockCarrying" incomingTransitions="_hzY7mcBtEe2Mc7U_W-ye0Q _hzY7ksBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7l8BtEe2Mc7U_W-ye0Q" specification="drop&#xA;[assignedShift == 0]/&#xA;factory.increaseMaterial(1)" target="_hzY7kMBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7mMBtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.setActions(&quot;Walk&quot;);&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)&#xA;entry [assignedShift == 2]/&#xA;ui.setActions(&quot;Walk,Drop&quot;)" name="atTruckCarrying" incomingTransitions="_hzY7lcBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7mcBtEe2Mc7U_W-ye0Q" specification="walk" target="_hzY7lsBtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7msBtEe2Mc7U_W-ye0Q" specification="drop&#xA;[assignedShift == 2]" target="_hzY7k8BtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7m8BtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.setActions(&quot;Done&quot;);&#xA;ui.setMsg(&quot;On toilet break.&quot;)" name="onToiletBreak" incomingTransitions="_hzY7kcBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7nMBtEe2Mc7U_W-ye0Q" specification="done" target="_hzY7kMBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7ncBtEe2Mc7U_W-ye0Q" specification="" name="goingToShift" incomingTransitions="_hzY7ocBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7nsBtEe2Mc7U_W-ye0Q" specification="after 0 s&#xA;[assignedShift == 0 || assignedShift == 2]" target="_hzY7kMBtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7n8BtEe2Mc7U_W-ye0Q" specification="after 0 s&#xA;[assignedShift == 1]" target="_hzY7osBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_hzY7oMBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7ocBtEe2Mc7U_W-ye0Q" specification="" target="_hzY7ncBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7osBtEe2Mc7U_W-ye0Q" specification="entry/&#xA;ui.setActions(&quot;Assemble&quot;);&#xA;ui.setMsg(&quot;At assembly.&quot;)" name="atAssembly" incomingTransitions="_hzY7n8BtEe2Mc7U_W-ye0Q _hzY7o8BtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7o8BtEe2Mc7U_W-ye0Q" specification="assemble&#xA;[factory.getMaterial() > 0]/&#xA;factory.increaseMaterial(-1);&#xA;factory.increaseFinished(1)" target="_hzY7osBtEe2Mc7U_W-ye0Q"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_hzY7pMBtEe2Mc7U_W-ye0Q" name="r2">
            <vertices xmi:type="sgraph:Entry" xmi:id="_hzY7pcBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7psBtEe2Mc7U_W-ye0Q" specification="" target="_hzY7p8BtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7p8BtEe2Mc7U_W-ye0Q" name="waitingButtons" incomingTransitions="_hzY7psBtEe2Mc7U_W-ye0Q _hzY7qsBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7qMBtEe2Mc7U_W-ye0Q" specification="ui.actionPressed" target="_hzY7qcBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7qcBtEe2Mc7U_W-ye0Q" specification="" name="buttonPressed" incomingTransitions="_hzY7qMBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7qsBtEe2Mc7U_W-ye0Q" specification="ui.actionReleased" target="_hzY7p8BtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7q8BtEe2Mc7U_W-ye0Q" specification="after 500 ms" target="_hzY7rMBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7rMBtEe2Mc7U_W-ye0Q" specification="entry [valueof(ui.actionPressed) == &quot;Walk&quot;]/&#xA;raise walk&#xA;entry [valueof(ui.actionPressed) == &quot;Pick up&quot;]/&#xA;raise pickUp&#xA;entry [valueof(ui.actionPressed) == &quot;Drop&quot;]/&#xA;raise drop&#xA;entry [valueof(ui.actionPressed) == &quot;Toilet break&quot;]/&#xA;raise toiletBreak&#xA;entry [valueof(ui.actionPressed) == &quot;Done&quot;]/&#xA;raise done&#xA;entry [valueof(ui.actionPressed) == &quot;Assemble&quot;]/&#xA;raise assemble" name="buttonPressedLongEnough" incomingTransitions="_hzY7q8BtEe2Mc7U_W-ye0Q"/>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_hzY7rcBtEe2Mc7U_W-ye0Q" name="r3">
            <vertices xmi:type="sgraph:Entry" xmi:id="_hzY7rsBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7r8BtEe2Mc7U_W-ye0Q" specification="" target="_hzY7sMBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7sMBtEe2Mc7U_W-ye0Q" specification="" name="working" incomingTransitions="_hzY7r8BtEe2Mc7U_W-ye0Q _hzY7ssBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7scBtEe2Mc7U_W-ye0Q" specification="toiletBreak" target="_hzY7s8BtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hzY7ssBtEe2Mc7U_W-ye0Q" specification="after 1 s/&#xA;employee.increaseEnergy(-2)" target="_hzY7sMBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hzY7s8BtEe2Mc7U_W-ye0Q" name="onToiletBreak" incomingTransitions="_hzY7scBtEe2Mc7U_W-ye0Q"/>
          </regions>
        </vertices>
      </regions>
    </vertices>
  </regions>
</sgraph:Statechart>
