<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_hyotkMBtEe2Mc7U_W-ye0Q" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var current_shift : integer = 0&#xA;&#x9;var action_valid: boolean = false&#xA;&#x9;var on_toilet: boolean = false&#xA;" name="Ati">
  <regions xmi:type="sgraph:Region" xmi:id="_hyotkcBtEe2Mc7U_W-ye0Q" name="main region">
    <vertices xmi:type="sgraph:Entry" xmi:id="_hyotksBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotk8BtEe2Mc7U_W-ye0Q" specification="" target="_hyotlMBtEe2Mc7U_W-ye0Q"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_hyotlMBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;employee.increaseEnergy(50);&#xD;&#xA;ui.setMsg(&quot;At home&quot;);&#xD;&#xA;ui.shiftsHide()" name="Home" incomingTransitions="_hyotk8BtEe2Mc7U_W-ye0Q _hyotl8BtEe2Mc7U_W-ye0Q _hyot1sBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotlcBtEe2Mc7U_W-ye0Q" specification="employee.goToWork / &#xD;&#xA;ui.setMsg(&quot;At Work.&quot;);&#xD;&#xA;ui.pushMsg()" target="_hyot18BtEe2Mc7U_W-ye0Q"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_hyotlsBtEe2Mc7U_W-ye0Q" specification="entry /  current_shift = util.getRandomInteger(3);&#xD;&#xA;ui.shiftsShow()" name="Work" incomingTransitions="_hyot2MBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotl8BtEe2Mc7U_W-ye0Q" specification="employee.goHome / ui.popMsg()" target="_hyotlMBtEe2Mc7U_W-ye0Q"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotmMBtEe2Mc7U_W-ye0Q" specification="after 4 s /&#xD;&#xA;ui.shiftHighlightActive(current_shift);&#xD;&#xA;ui.setMsg(&quot;Working shift.&quot;);&#xD;&#xA;ui.pushMsg()" target="_hyotnsBtEe2Mc7U_W-ye0Q"/>
      <regions xmi:type="sgraph:Region" xmi:id="_hyotmcBtEe2Mc7U_W-ye0Q" name="r1">
        <vertices xmi:type="sgraph:State" xmi:id="_hyotmsBtEe2Mc7U_W-ye0Q" specification="entry / &#xD;&#xA;ui.shiftHighlightAssigned(current_shift);&#xD;&#xA;ui.setMsg(&quot;Selected shift will start soon...&quot;)" name="loop" incomingTransitions="_hyotm8BtEe2Mc7U_W-ye0Q _hyotncBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotm8BtEe2Mc7U_W-ye0Q" specification="employee.shiftClicked / current_shift = valueof(employee.shiftClicked)" target="_hyotmsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_hyotnMBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotncBtEe2Mc7U_W-ye0Q" target="_hyotmsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_hyotnsBtEe2Mc7U_W-ye0Q" name="Shift" incomingTransitions="_hyotmMBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotn8BtEe2Mc7U_W-ye0Q" specification="after 10 s /&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;employee.increasePay(10);&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;ui.popMsg()" target="_hyot18BtEe2Mc7U_W-ye0Q"/>
      <regions xmi:type="sgraph:Region" xmi:id="_hyotoMBtEe2Mc7U_W-ye0Q" name="r1">
        <vertices xmi:type="sgraph:Entry" xmi:id="_hyotocBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotosBtEe2Mc7U_W-ye0Q" specification="" target="_hyotsMBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_hyoto8BtEe2Mc7U_W-ye0Q" name="Unloading" incomingTransitions="_hyotssBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotpMBtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Toilet break&quot; &amp;&amp; action_valid]" target="_hyotwcBtEe2Mc7U_W-ye0Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_hyotpcBtEe2Mc7U_W-ye0Q" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_hyotpsBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock.&quot;)" name="AtStock" incomingTransitions="_hyotqcBtEe2Mc7U_W-ye0Q _hyotq8BtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotp8BtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_hyotqsBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_hyotqMBtEe2Mc7U_W-ye0Q" name="">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotqcBtEe2Mc7U_W-ye0Q" specification="" target="_hyotpsBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hyotqsBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)" name="AtTruck" incomingTransitions="_hyotp8BtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotq8BtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_hyotpsBtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotrMBtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Pick up&quot; &amp;&amp; action_valid]" target="_hyotrsBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hyotrcBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="AtStockCarrying" incomingTransitions="_hyotr8BtEe2Mc7U_W-ye0Q"/>
            <vertices xmi:type="sgraph:State" xmi:id="_hyotrsBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="AtTruckCarrying" incomingTransitions="_hyotrMBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotr8BtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_hyotrcBtEe2Mc7U_W-ye0Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_hyotsMBtEe2Mc7U_W-ye0Q" incomingTransitions="_hyotosBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotscBtEe2Mc7U_W-ye0Q" specification="else" target="_hyottMBtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotssBtEe2Mc7U_W-ye0Q" specification="[current_shift == 0]" target="_hyoto8BtEe2Mc7U_W-ye0Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyots8BtEe2Mc7U_W-ye0Q" specification="[current_shift == 1]" target="_hyotwsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_hyottMBtEe2Mc7U_W-ye0Q" name="Loading" incomingTransitions="_hyotscBtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyottcBtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Toilet break&quot; &amp;&amp; action_valid]" target="_hyotwcBtEe2Mc7U_W-ye0Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_hyottsBtEe2Mc7U_W-ye0Q" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_hyott8BtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock.&quot;)" name="AtStock" incomingTransitions="_hyotusBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotuMBtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_hyotu8BtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_hyotucBtEe2Mc7U_W-ye0Q" name="">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotusBtEe2Mc7U_W-ye0Q" specification="" target="_hyott8BtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hyotu8BtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)" name="AtTruck" incomingTransitions="_hyotuMBtEe2Mc7U_W-ye0Q _hyotwMBtEe2Mc7U_W-ye0Q"/>
            <vertices xmi:type="sgraph:State" xmi:id="_hyotvMBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="AtStockCarrying" incomingTransitions="_hyotv8BtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotvcBtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_hyotvsBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hyotvsBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="AtTruckCarrying" incomingTransitions="_hyotvcBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotv8BtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_hyotvMBtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotwMBtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Drop&quot; &amp;&amp; action_valid] /&#xD;&#xA;factory.increaseFinished(factory.getFinished() > 0 ? -1 : 0)" target="_hyotu8BtEe2Mc7U_W-ye0Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_hyotwcBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;on_toilet = true;&#xD;&#xA;ui.setActions(&quot;Done&quot;)&#xD;&#xA;exit / on_toilet = false" name="Toilet" incomingTransitions="_hyotpMBtEe2Mc7U_W-ye0Q _hyottcBtEe2Mc7U_W-ye0Q"/>
        <vertices xmi:type="sgraph:State" xmi:id="_hyotwsBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;ui.setMsg(&quot;Assembling.&quot;)" name="Assemble" incomingTransitions="_hyotw8BtEe2Mc7U_W-ye0Q _hyots8BtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotw8BtEe2Mc7U_W-ye0Q" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Assemble&quot; &amp;&amp; action_valid] /&#xD;&#xA;factory.increaseFinished(factory.getMaterial() > 0 ? 1 : 0);&#xD;&#xA;factory.increaseMaterial(factory.getMaterial() > 0 ? -1 : 0)" target="_hyotwsBtEe2Mc7U_W-ye0Q"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_hyotxMBtEe2Mc7U_W-ye0Q" name="r2">
        <vertices xmi:type="sgraph:State" xmi:id="_hyotxcBtEe2Mc7U_W-ye0Q" name="Background" incomingTransitions="_hyot1MBtEe2Mc7U_W-ye0Q">
          <regions xmi:type="sgraph:Region" xmi:id="_hyotxsBtEe2Mc7U_W-ye0Q" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_hyotx8BtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotyMBtEe2Mc7U_W-ye0Q" specification="" target="_hyotycBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hyotycBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;action_valid = false" name="Idle" incomingTransitions="_hyotyMBtEe2Mc7U_W-ye0Q _hyotzcBtEe2Mc7U_W-ye0Q _hyoty8BtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotysBtEe2Mc7U_W-ye0Q" specification="after 500 ms" target="_hyotzMBtEe2Mc7U_W-ye0Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyoty8BtEe2Mc7U_W-ye0Q" specification="ui.actionReleased" target="_hyotycBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hyotzMBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;action_valid = true" name="Action" incomingTransitions="_hyotysBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyotzcBtEe2Mc7U_W-ye0Q" specification="ui.actionPressed" target="_hyotycBtEe2Mc7U_W-ye0Q"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_hyotzsBtEe2Mc7U_W-ye0Q" name="r2">
            <vertices xmi:type="sgraph:Entry" xmi:id="_hyotz8BtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyot0MBtEe2Mc7U_W-ye0Q" specification="" target="_hyot0cBtEe2Mc7U_W-ye0Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_hyot0cBtEe2Mc7U_W-ye0Q" name="EnergyLoop" incomingTransitions="_hyot0MBtEe2Mc7U_W-ye0Q _hyot0sBtEe2Mc7U_W-ye0Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyot0sBtEe2Mc7U_W-ye0Q" specification="after 1 s [!on_toilet] / employee.increaseEnergy(-2)" target="_hyot0cBtEe2Mc7U_W-ye0Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_hyot08BtEe2Mc7U_W-ye0Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyot1MBtEe2Mc7U_W-ye0Q" specification="" target="_hyotxcBtEe2Mc7U_W-ye0Q"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_hyot1cBtEe2Mc7U_W-ye0Q" specification="entry /&#xD;&#xA;ui.setMsg(&quot;Too low energy to work.&quot;)" name="Tired" incomingTransitions="_hyot2cBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyot1sBtEe2Mc7U_W-ye0Q" specification="employee.goHome /&#xD;&#xA;ui.popMsg()" target="_hyotlMBtEe2Mc7U_W-ye0Q"/>
    </vertices>
    <vertices xmi:type="sgraph:Choice" xmi:id="_hyot18BtEe2Mc7U_W-ye0Q" incomingTransitions="_hyotn8BtEe2Mc7U_W-ye0Q _hyotlcBtEe2Mc7U_W-ye0Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyot2MBtEe2Mc7U_W-ye0Q" specification="[employee.getEnergy() >= 25]" target="_hyotlsBtEe2Mc7U_W-ye0Q"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_hyot2cBtEe2Mc7U_W-ye0Q" specification="else" target="_hyot1cBtEe2Mc7U_W-ye0Q"/>
    </vertices>
  </regions>
</sgraph:Statechart>
