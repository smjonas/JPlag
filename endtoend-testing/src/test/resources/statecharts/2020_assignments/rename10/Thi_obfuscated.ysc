<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_Oc-qgNLDEe2rSIK3QmapIA" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var shiftChoice: integer&#xA;&#x9;var shiftGraceTimer: integer&#xA;&#x9;var shiftTimer: integer&#xA;&#x9;var actionTimer: integer&#xA;&#x9;var action:string&#xA;&#x9;var carryingStockMaterial=false&#xA;&#x9;event doAlwaysTransition&#xA;&#x9;event break&#xA;&#x9;event stopbreak&#xA;" name="Thi">
  <regions xmi:type="sgraph:Region" xmi:id="_Oc-qgdLDEe2rSIK3QmapIA" name="oFiayqVrFs">
    <vertices xmi:type="sgraph:State" xmi:id="_Oc-qgtLDEe2rSIK3QmapIA" specification="entry / ui.setMsg(&quot;You are at home.&quot;)" name="KGAJ7wQwpl" incomingTransitions="_Oc-q6NLDEe2rSIK3QmapIA">
      <regions xmi:type="sgraph:Region" xmi:id="_Oc-qg9LDEe2rSIK3QmapIA" name="r1">
        <vertices xmi:type="sgraph:Entry" xmi:id="_Oc-qhNLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qhdLDEe2rSIK3QmapIA" specification="" target="_Oc-qhtLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Oc-qhtLDEe2rSIK3QmapIA" specification="" name="AtHomeState" incomingTransitions="_Oc-qhdLDEe2rSIK3QmapIA _Oc-qkNLDEe2rSIK3QmapIA _Oc-qkdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qh9LDEe2rSIK3QmapIA" specification="employee.goToWork / &#xD;&#xA;ui.shiftsShow();&#xD;&#xA;ui.setMsg('You are at work.');&#xD;&#xA;shiftChoice=util.getRandomInteger(3)&#xD;&#xA;" target="_Oc-qiNLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Oc-qiNLDEe2rSIK3QmapIA" specification="entry /&#xD;&#xA;raise doAlwaysTransition;&#xD;&#xA;ui.setActions(&quot;&quot;)" name="AtWorkState" incomingTransitions="_Oc-qh9LDEe2rSIK3QmapIA _Oc-qk9LDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qidLDEe2rSIK3QmapIA" specification="always/&#xD;&#xA;ui.shiftHighlightAssigned(shiftChoice);&#xD;&#xA;shiftGraceTimer=4&#xD;&#xA;" target="_Oc-qitLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Oc-qitLDEe2rSIK3QmapIA" specification="entry /&#xD;&#xA;raise doAlwaysTransition&#x9;" name="ChooseShiftState" incomingTransitions="_Oc-qidLDEe2rSIK3QmapIA _Oc-qi9LDEe2rSIK3QmapIA _Oc-qjNLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qi9LDEe2rSIK3QmapIA" specification=" after 1s/&#xD;&#xA; shiftGraceTimer=shiftGraceTimer-1&#xD;&#xA;" target="_Oc-qitLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qjNLDEe2rSIK3QmapIA" specification="employee.shiftClicked/&#xD;&#xA;shiftChoice=valueof(employee.shiftClicked);&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;ui.shiftHighlightAssigned(valueof(employee.shiftClicked))" target="_Oc-qitLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qjdLDEe2rSIK3QmapIA" specification="employee.goHome/&#xD;&#xA;shiftGraceTimer=0;&#xD;&#xA;ui.shiftsHide();&#xD;&#xA;ui.setMsg(&quot;You are at home.&quot;)&#xD;&#xA;&#xD;&#xA;" target="_Oc-qj9LDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qjtLDEe2rSIK3QmapIA" specification="always[shiftGraceTimer&lt;=0 &amp;&amp; employee.getEnergy()>=25]/&#xD;&#xA;employee.increaseEnergy(-2)" target="_Oc-qktLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Oc-qj9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;raise doAlwaysTransition" name="increaseEnergyState" incomingTransitions="_Oc-qjdLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qkNLDEe2rSIK3QmapIA" specification="always [employee.getEnergy()&lt;51]/&#xD;&#xA;employee.increaseEnergy(50)" target="_Oc-qhtLDEe2rSIK3QmapIA"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qkdLDEe2rSIK3QmapIA" specification="always[employee.getEnergy()>50]/&#xD;&#xA;employee.increaseEnergy(100-employee.getEnergy())" target="_Oc-qhtLDEe2rSIK3QmapIA"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_Oc-qktLDEe2rSIK3QmapIA" name="EnergyDrainState" incomingTransitions="_Oc-qjtLDEe2rSIK3QmapIA">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qk9LDEe2rSIK3QmapIA" specification="# main_exit >&#xD;&#xA;&#xD;&#xA;" target="_Oc-qiNLDEe2rSIK3QmapIA"/>
          <regions xmi:type="sgraph:Region" xmi:id="_Oc-qlNLDEe2rSIK3QmapIA" name="Work">
            <vertices xmi:type="sgraph:State" xmi:id="_Oc-qldLDEe2rSIK3QmapIA" name="AssemblyShift" incomingTransitions="_Oc-qpNLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qltLDEe2rSIK3QmapIA" specification="after 10s/&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;actionTimer=0;&#xD;&#xA;employee.increasePay(10)" target="_Oc-qoNLDEe2rSIK3QmapIA"/>
              <regions xmi:type="sgraph:Region" xmi:id="_Oc-ql9LDEe2rSIK3QmapIA" name="r1">
                <vertices xmi:type="sgraph:Entry" xmi:id="_Oc-qmNLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qmdLDEe2rSIK3QmapIA" specification="" target="_Oc-qmtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qmtLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setMsg(&quot;At assembly line&quot;);&#xD;&#xA;ui.setActions(&quot;Assemble&quot;)" name="AssembleState" incomingTransitions="_Oc-qmdLDEe2rSIK3QmapIA _Oc-qntLDEe2rSIK3QmapIA _Oc-qn9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qm9LDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Assemble&quot;&amp;&amp;factory.getMaterial()>0]/&#xD;&#xA;actionTimer=0&#xD;&#xA;&#xD;&#xA;" target="_Oc-qnNLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qnNLDEe2rSIK3QmapIA" name="f3kLnGgsEX" incomingTransitions="_Oc-qm9LDEe2rSIK3QmapIA _Oc-qndLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qndLDEe2rSIK3QmapIA" specification="after 100ms/&#xD;&#xA;actionTimer+=100" target="_Oc-qnNLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qntLDEe2rSIK3QmapIA" specification="ui.actionReleased[actionTimer&lt;=500]/&#xD;&#xA;actionTimer=0" target="_Oc-qmtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qn9LDEe2rSIK3QmapIA" specification="ui.actionReleased[actionTimer>500]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;factory.increaseMaterial(-1);&#xD;&#xA;factory.increaseFinished(1)" target="_Oc-qmtLDEe2rSIK3QmapIA"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:Exit" xmi:id="_Oc-qoNLDEe2rSIK3QmapIA" name="main_exit" incomingTransitions="_Oc-qltLDEe2rSIK3QmapIA _Oc-qqNLDEe2rSIK3QmapIA _Oc-qxNLDEe2rSIK3QmapIA"/>
            <vertices xmi:type="sgraph:Entry" xmi:id="_Oc-qodLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qotLDEe2rSIK3QmapIA" specification="" target="_Oc-qo9LDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Oc-qo9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;raise doAlwaysTransition" name="GoToShiftState" incomingTransitions="_Oc-qotLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qpNLDEe2rSIK3QmapIA" specification="always[shiftChoice==1]/&#xD;&#xA;shiftTimer=10;&#xD;&#xA;ui.shiftHighlightActive(shiftChoice)" target="_Oc-qldLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qpdLDEe2rSIK3QmapIA" specification="always[shiftChoice==2]/&#xD;&#xA;shiftTimer=10;&#xD;&#xA;ui.shiftHighlightActive(shiftChoice)" target="_Oc-qp9LDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qptLDEe2rSIK3QmapIA" specification="always[shiftChoice==0]/&#xD;&#xA;shiftTimer=10;&#xD;&#xA;ui.shiftHighlightActive(shiftChoice)" target="_Oc-qw9LDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Oc-qp9LDEe2rSIK3QmapIA" name="KhtcZbbKTR" incomingTransitions="_Oc-qpdLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qqNLDEe2rSIK3QmapIA" specification="after 10s/&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=false;&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;employee.increasePay(10)" target="_Oc-qoNLDEe2rSIK3QmapIA"/>
              <regions xmi:type="sgraph:Region" xmi:id="_Oc-qqdLDEe2rSIK3QmapIA" name="T5NtB75lY5">
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qqtLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setMsg(&quot;At stock&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet Break&quot;)" name="AtStock" incomingTransitions="_Oc-qudLDEe2rSIK3QmapIA _Oc-qr9LDEe2rSIK3QmapIA _Oc-qt9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qq9LDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Toilet Break&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;break&quot;&#xD;&#xA;" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qrNLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkTruck&quot;&#xD;&#xA;" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qrdLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Pick up&quot;&amp;&amp;factory.getFinished()>0 ]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;pickup&quot;&#xD;&#xA;" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qrtLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;raise doAlwaysTransition&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" name="ActionCounter" incomingTransitions="_Oc-qq9LDEe2rSIK3QmapIA _Oc-qrNLDEe2rSIK3QmapIA _Oc-qrdLDEe2rSIK3QmapIA _Oc-qu9LDEe2rSIK3QmapIA _Oc-qsdLDEe2rSIK3QmapIA _Oc-qvdLDEe2rSIK3QmapIA _Oc-qv9LDEe2rSIK3QmapIA _Oc-qwdLDEe2rSIK3QmapIA _Oc-qwtLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qr9LDEe2rSIK3QmapIA" specification="ui.actionReleased[(((action==&quot;walkStock&quot;)&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkTruck&quot;||action==&quot;pickup&quot;||action==&quot;break&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_Oc-qqtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qsNLDEe2rSIK3QmapIA" specification="ui.actionReleased[((action==&quot;stopbreak&quot;&amp;&amp;actionTimer&lt;500)&#xD;&#xA;&#x9;||(action==&quot;break&quot;&amp;&amp;actionTimer>=500 ))]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;raise break" target="_Oc-qutLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qsdLDEe2rSIK3QmapIA" specification="after 100ms/&#xD;&#xA;actionTimer+=100" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qstLDEe2rSIK3QmapIA" specification="ui.actionReleased[(((action==&quot;walkStock&quot;)&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkTruck&quot;||action==&quot;break&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_Oc-qvNLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qs9LDEe2rSIK3QmapIA" specification="ui.actionReleased[(action==&quot;pickup&quot;&amp;&amp;actionTimer>=500 )]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=true&#xD;&#xA;" target="_Oc-qvNLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qtNLDEe2rSIK3QmapIA" specification="ui.actionReleased[(((action==&quot;walkTruck&quot;)&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkStock&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_Oc-qvtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qtdLDEe2rSIK3QmapIA" specification="ui.actionReleased[(((action==&quot;drop&quot;)&amp;&amp;actionTimer>=500))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=false;&#xD;&#xA;factory.increaseFinished(-1)" target="_Oc-qvtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qttLDEe2rSIK3QmapIA" specification="ui.actionReleased[(((action==&quot;walkTruck&quot;)&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkStock&quot;||action==&quot;drop&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_Oc-qwNLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qt9LDEe2rSIK3QmapIA" specification="ui.actionReleased[(((action==&quot;stopbreak&quot;)&amp;&amp;actionTimer>=500))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;raise stopbreak" target="_Oc-qqtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_Oc-quNLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qudLDEe2rSIK3QmapIA" specification="" target="_Oc-qqtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qutLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;ui.setMsg(&quot;On toilet&quot;)&#xD;&#xA;" name="ToiletBreak" incomingTransitions="_Oc-qsNLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qu9LDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Done&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;stopbreak&quot;&#xD;&#xA;" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qvNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="AtStockLoaded" incomingTransitions="_Oc-qstLDEe2rSIK3QmapIA _Oc-qs9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qvdLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkTruck&quot;&#xD;&#xA;" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qvtLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)" name="AtTruck" incomingTransitions="_Oc-qtNLDEe2rSIK3QmapIA _Oc-qtdLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qv9LDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkStock&quot;&#xD;&#xA;" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qwNLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="AtTruckLoaded" incomingTransitions="_Oc-qttLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qwdLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkStock&quot;&#xD;&#xA;" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qwtLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Drop&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;drop&quot;&#xD;&#xA;" target="_Oc-qrtLDEe2rSIK3QmapIA"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Oc-qw9LDEe2rSIK3QmapIA" name="UnloadShift" incomingTransitions="_Oc-qptLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qxNLDEe2rSIK3QmapIA" specification="after 10s/&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=false;&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;employee.increasePay(10)" target="_Oc-qoNLDEe2rSIK3QmapIA"/>
              <regions xmi:type="sgraph:Region" xmi:id="_Oc-qxdLDEe2rSIK3QmapIA" name="AgaZlGP12i">
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qxtLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock&quot;)" name="AtStock" incomingTransitions="_Oc-qytLDEe2rSIK3QmapIA _Oc-qzdLDEe2rSIK3QmapIA _Oc-q0tLDEe2rSIK3QmapIA _Oc-q1NLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qx9LDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkTruck&quot;&#xD;&#xA;" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qyNLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Toilet break&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;break&quot;&#xD;&#xA;" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_Oc-qydLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qytLDEe2rSIK3QmapIA" specification="" target="_Oc-qxtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-qy9LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;raise doAlwaysTransition&#xD;&#xA;&#xD;&#xA;" name="ActionCounter" incomingTransitions="_Oc-qx9LDEe2rSIK3QmapIA _Oc-qzNLDEe2rSIK3QmapIA _Oc-q1tLDEe2rSIK3QmapIA _Oc-q2dLDEe2rSIK3QmapIA _Oc-q3NLDEe2rSIK3QmapIA _Oc-q19LDEe2rSIK3QmapIA _Oc-q2tLDEe2rSIK3QmapIA _Oc-qyNLDEe2rSIK3QmapIA _Oc-q3tLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qzNLDEe2rSIK3QmapIA" specification="after 100ms/&#xD;&#xA;actionTimer+=100" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qzdLDEe2rSIK3QmapIA" specification="ui.actionReleased[(((action==&quot;walkTruck&quot;||action==&quot;break&quot;)&amp;&amp;actionTimer&lt;500)&#xD;&#xA;&#x9;||((action==&quot;walkStock&quot;)&amp;&amp;actionTimer>=500 ))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0&#xD;&#xA;" target="_Oc-qxtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qztLDEe2rSIK3QmapIA" specification="ui.actionReleased[((action==&quot;walkTruck&quot;&amp;&amp;actionTimer>=500)&#xD;&#xA;&#x9;||((action==&quot;walkStock&quot;||action==&quot;pickup&quot;)&amp;&amp;actionTimer&lt;500))&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_Oc-q1dLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-qz9LDEe2rSIK3QmapIA" specification="ui.actionReleased[((action==&quot;walkTruck&quot;&amp;&amp;actionTimer&lt;500)&#xD;&#xA;&#x9;||(action==&quot;walkStock&quot;&amp;&amp;actionTimer>=500 ))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0&#xD;&#xA;" target="_Oc-q2NLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q0NLDEe2rSIK3QmapIA" specification="ui.actionReleased[((action==&quot;walkTruck&quot;&amp;&amp;actionTimer>=500 )&#xD;&#xA;&#x9;||(action==&quot;walkStock&quot;&amp;&amp;actionTimer&lt;500))&amp;&amp;carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0" target="_Oc-q29LDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q0dLDEe2rSIK3QmapIA" specification="ui.actionReleased[(action==&quot;pickup&quot;&amp;&amp;actionTimer>=500 )]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=true&#xD;&#xA;" target="_Oc-q29LDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q0tLDEe2rSIK3QmapIA" specification="ui.actionReleased[(action==&quot;Drop&quot;&amp;&amp;actionTimer>=500 )]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;carryingStockMaterial=false;&#xD;&#xA;factory.increaseMaterial(1)" target="_Oc-qxtLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q09LDEe2rSIK3QmapIA" specification="ui.actionReleased[((action==&quot;stopbreak&quot;&amp;&amp;actionTimer&lt;500)&#xD;&#xA;&#x9;||(action==&quot;break&quot;&amp;&amp;actionTimer>=500 ))]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;raise break" target="_Oc-q3dLDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q1NLDEe2rSIK3QmapIA" specification="ui.actionReleased[&#xD;&#xA;&#x9;((action==&quot;stopbreak&quot;)&amp;&amp;actionTimer>=500 )&amp;&amp;!carryingStockMaterial]/&#xD;&#xA;action=&quot;&quot;;&#xD;&#xA;actionTimer=0;&#xD;&#xA;raise stopbreak&#xD;&#xA;" target="_Oc-qxtLDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-q1dLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck&quot;)&#xD;&#xA;" name="AtTruck" incomingTransitions="_Oc-qztLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q1tLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkStock&quot;&#xD;&#xA;" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q19LDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Pick up&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;pickup&quot;&#xD;&#xA;" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-q2NLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;An stock, carrying material.&quot;)" name="AtStockCarrying" incomingTransitions="_Oc-qz9LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q2dLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkTruck&quot;&#xD;&#xA;" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q2tLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Drop&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;Drop&quot;&#xD;&#xA;" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-q29LDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="AtTruckLoaded" incomingTransitions="_Oc-q0NLDEe2rSIK3QmapIA _Oc-q0dLDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q3NLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Walk&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;walkStock&quot;&#xD;&#xA;" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Oc-q3dLDEe2rSIK3QmapIA" specification="entry/&#xD;&#xA;ui.setActions(&quot;Done&quot;);&#xD;&#xA;ui.setMsg(&quot;On toilet&quot;)&#xD;&#xA;" name="ToiletBreak" incomingTransitions="_Oc-q09LDEe2rSIK3QmapIA">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q3tLDEe2rSIK3QmapIA" specification="ui.actionPressed[valueof(ui.actionPressed)==&quot;Done&quot;]/&#xD;&#xA;actionTimer=0;&#xD;&#xA;action=&quot;stopbreak&quot;&#xD;&#xA;" target="_Oc-qy9LDEe2rSIK3QmapIA"/>
                </vertices>
              </regions>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_Oc-q39LDEe2rSIK3QmapIA" name="Energy">
            <vertices xmi:type="sgraph:Entry" xmi:id="_Oc-q4NLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q4dLDEe2rSIK3QmapIA" specification="" target="_Oc-q4tLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Oc-q4tLDEe2rSIK3QmapIA" specification="" name="decreaseEnergyState" incomingTransitions="_Oc-q4dLDEe2rSIK3QmapIA _Oc-q49LDEe2rSIK3QmapIA _Oc-q5tLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q49LDEe2rSIK3QmapIA" specification="after 1s/&#xD;&#xA;employee.increaseEnergy(-2)" target="_Oc-q4tLDEe2rSIK3QmapIA"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q5NLDEe2rSIK3QmapIA" specification="break" target="_Oc-q5dLDEe2rSIK3QmapIA"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Oc-q5dLDEe2rSIK3QmapIA" name="YnFzSfcJJF" incomingTransitions="_Oc-q5NLDEe2rSIK3QmapIA">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q5tLDEe2rSIK3QmapIA" specification="stopbreak" target="_Oc-q4tLDEe2rSIK3QmapIA"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_Oc-q59LDEe2rSIK3QmapIA">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Oc-q6NLDEe2rSIK3QmapIA" specification="" target="_Oc-qgtLDEe2rSIK3QmapIA"/>
    </vertices>
  </regions>
</sgraph:Statechart>
