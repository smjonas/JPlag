<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_u16tYL2eEe2v0PGd1C7xCQ" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var current_shift : integer = 0&#xA;&#x9;var action_valid: boolean = false&#xA;&#x9;var on_toilet: boolean = false&#xA;" name="Ati">
  <regions xmi:type="sgraph:Region" xmi:id="_u16tYb2eEe2v0PGd1C7xCQ" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_u16tYr2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setMsg(&quot;Too low energy to work.&quot;)" name="Tired" incomingTransitions="_u16trr2eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tY72eEe2v0PGd1C7xCQ" specification="employee.goHome /&#xD;&#xA;ui.popMsg()" target="_u16tbr2eEe2v0PGd1C7xCQ"/>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_u16tZL2eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tZb2eEe2v0PGd1C7xCQ" specification="" target="_u16tbr2eEe2v0PGd1C7xCQ"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_u16tZr2eEe2v0PGd1C7xCQ" specification="entry /  current_shift = util.getRandomInteger(3);&#xD;&#xA;ui.shiftsShow()" name="Work" incomingTransitions="_u16trb2eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tZ72eEe2v0PGd1C7xCQ" specification="employee.goHome / ui.popMsg()" target="_u16tbr2eEe2v0PGd1C7xCQ"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16taL2eEe2v0PGd1C7xCQ" specification="after 4 s /&#xD;&#xA;ui.shiftHighlightActive(current_shift);&#xD;&#xA;ui.setMsg(&quot;Working shift.&quot;);&#xD;&#xA;ui.pushMsg()" target="_u16tcL2eEe2v0PGd1C7xCQ"/>
      <regions xmi:type="sgraph:Region" xmi:id="_u16tab2eEe2v0PGd1C7xCQ" name="r1">
        <vertices xmi:type="sgraph:Entry" xmi:id="_u16tar2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16ta72eEe2v0PGd1C7xCQ" target="_u16tbL2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u16tbL2eEe2v0PGd1C7xCQ" specification="entry / &#xD;&#xA;ui.shiftHighlightAssigned(current_shift);&#xD;&#xA;ui.setMsg(&quot;Selected shift will start soon...&quot;)" name="loop" incomingTransitions="_u16tbb2eEe2v0PGd1C7xCQ _u16ta72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tbb2eEe2v0PGd1C7xCQ" specification="employee.shiftClicked / current_shift = valueof(employee.shiftClicked)" target="_u16tbL2eEe2v0PGd1C7xCQ"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_u16tbr2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;employee.increaseEnergy(50);&#xD;&#xA;ui.setMsg(&quot;At home&quot;);&#xD;&#xA;ui.shiftsHide()" name="Home" incomingTransitions="_u16tZb2eEe2v0PGd1C7xCQ _u16tZ72eEe2v0PGd1C7xCQ _u16tY72eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tb72eEe2v0PGd1C7xCQ" specification="employee.goToWork / &#xD;&#xA;ui.setMsg(&quot;At Work.&quot;);&#xD;&#xA;ui.pushMsg()" target="_u16trL2eEe2v0PGd1C7xCQ"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_u16tcL2eEe2v0PGd1C7xCQ" name="Shift" incomingTransitions="_u16taL2eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tcb2eEe2v0PGd1C7xCQ" specification="after 10 s /&#xD;&#xA;ui.shiftHighlightClear();&#xD;&#xA;employee.increasePay(10);&#xD;&#xA;ui.setActions(&quot;&quot;);&#xD;&#xA;ui.popMsg()" target="_u16trL2eEe2v0PGd1C7xCQ"/>
      <regions xmi:type="sgraph:Region" xmi:id="_u16tcr2eEe2v0PGd1C7xCQ" name="r1">
        <vertices xmi:type="sgraph:Entry" xmi:id="_u16tc72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tdL2eEe2v0PGd1C7xCQ" specification="" target="_u16tlb2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u16tdb2eEe2v0PGd1C7xCQ" name="Unloading" incomingTransitions="_u16tlr2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tdr2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Toilet break&quot; &amp;&amp; action_valid]" target="_u16tk72eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u16td72eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_u16teL2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock.&quot;)" name="AtStock" incomingTransitions="_u16tfr2eEe2v0PGd1C7xCQ _u16tfL2eEe2v0PGd1C7xCQ _u16tgL2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16teb2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_u16ter2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u16ter2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)" name="AtTruck" incomingTransitions="_u16teb2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16te72eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Pick up&quot; &amp;&amp; action_valid]" target="_u16tgr2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tfL2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_u16teL2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u16tfb2eEe2v0PGd1C7xCQ" name="">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tfr2eEe2v0PGd1C7xCQ" specification="" target="_u16teL2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u16tf72eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="AtStockCarrying" incomingTransitions="_u16tg72eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tgL2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Drop&quot; &amp;&amp; action_valid] /&#xD;&#xA;factory.increaseMaterial(1)" target="_u16teL2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tgb2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_u16tgr2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u16tgr2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="AtTruckCarrying" incomingTransitions="_u16te72eEe2v0PGd1C7xCQ _u16tgb2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tg72eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_u16tf72eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u16thL2eEe2v0PGd1C7xCQ" name="Loading" incomingTransitions="_u16tmL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16thb2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Toilet break&quot; &amp;&amp; action_valid]" target="_u16tk72eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u16thr2eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_u16th72eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Pick up,Toilet break&quot;);&#xD;&#xA;ui.setMsg(&quot;In stock.&quot;)" name="AtStock" incomingTransitions="_u16ti72eEe2v0PGd1C7xCQ _u16tjb2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tiL2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Pick up&quot; &amp;&amp; action_valid]" target="_u16tjr2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tib2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_u16tjL2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u16tir2eEe2v0PGd1C7xCQ" name="">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16ti72eEe2v0PGd1C7xCQ" specification="" target="_u16th72eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u16tjL2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)" name="AtTruck" incomingTransitions="_u16tib2eEe2v0PGd1C7xCQ _u16tkr2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tjb2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_u16th72eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u16tjr2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="AtStockCarrying" incomingTransitions="_u16tkb2eEe2v0PGd1C7xCQ _u16tiL2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tj72eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_u16tkL2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u16tkL2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="AtTruckCarrying" incomingTransitions="_u16tj72eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tkb2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; action_valid]" target="_u16tjr2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tkr2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Drop&quot; &amp;&amp; action_valid] /&#xD;&#xA;factory.increaseFinished(factory.getFinished() > 0 ? -1 : 0)" target="_u16tjL2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u16tk72eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;on_toilet = true;&#xD;&#xA;ui.setActions(&quot;Done&quot;)&#xD;&#xA;exit / on_toilet = false" name="Toilet" incomingTransitions="_u16tdr2eEe2v0PGd1C7xCQ _u16thb2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tlL2eEe2v0PGd1C7xCQ" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Done&quot; &amp;&amp; action_valid]" target="_u16tlb2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_u16tlb2eEe2v0PGd1C7xCQ" incomingTransitions="_u16tdL2eEe2v0PGd1C7xCQ _u16tlL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tlr2eEe2v0PGd1C7xCQ" specification="[current_shift == 0]" target="_u16tdb2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tl72eEe2v0PGd1C7xCQ" specification="[current_shift == 1]" target="_u16tmb2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tmL2eEe2v0PGd1C7xCQ" specification="else" target="_u16thL2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u16tmb2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;ui.setMsg(&quot;Assembling.&quot;)" name="Assemble" incomingTransitions="_u16tmr2eEe2v0PGd1C7xCQ _u16tl72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tmr2eEe2v0PGd1C7xCQ" specification="ui.actionReleased &#xD;&#xA;[valueof(ui.actionReleased) == &quot;Assemble&quot; &amp;&amp; action_valid] /&#xD;&#xA;factory.increaseFinished(factory.getMaterial() > 0 ? 1 : 0);&#xD;&#xA;factory.increaseMaterial(factory.getMaterial() > 0 ? -1 : 0)" target="_u16tmb2eEe2v0PGd1C7xCQ"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_u16tm72eEe2v0PGd1C7xCQ" name="r2">
        <vertices xmi:type="sgraph:Entry" xmi:id="_u16tnL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tnb2eEe2v0PGd1C7xCQ" specification="" target="_u16tnr2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u16tnr2eEe2v0PGd1C7xCQ" name="Background" incomingTransitions="_u16tnb2eEe2v0PGd1C7xCQ">
          <regions xmi:type="sgraph:Region" xmi:id="_u16tn72eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_u16toL2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;action_valid = false" name="Idle" incomingTransitions="_u16tpL2eEe2v0PGd1C7xCQ _u16tpr2eEe2v0PGd1C7xCQ _u16tor2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tob2eEe2v0PGd1C7xCQ" specification="after 500 ms" target="_u16tpb2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tor2eEe2v0PGd1C7xCQ" specification="ui.actionReleased" target="_u16toL2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u16to72eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tpL2eEe2v0PGd1C7xCQ" specification="" target="_u16toL2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u16tpb2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;action_valid = true" name="Action" incomingTransitions="_u16tob2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tpr2eEe2v0PGd1C7xCQ" specification="ui.actionPressed" target="_u16toL2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_u16tp72eEe2v0PGd1C7xCQ" name="r2">
            <vertices xmi:type="sgraph:State" xmi:id="_u16tqL2eEe2v0PGd1C7xCQ" name="EnergyLoop" incomingTransitions="_u16tq72eEe2v0PGd1C7xCQ _u16tqb2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tqb2eEe2v0PGd1C7xCQ" specification="after 1 s [!on_toilet] / employee.increaseEnergy(-2)" target="_u16tqL2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u16tqr2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16tq72eEe2v0PGd1C7xCQ" specification="" target="_u16tqL2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Choice" xmi:id="_u16trL2eEe2v0PGd1C7xCQ" incomingTransitions="_u16tcb2eEe2v0PGd1C7xCQ _u16tb72eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16trb2eEe2v0PGd1C7xCQ" specification="[employee.getEnergy() >= 25]" target="_u16tZr2eEe2v0PGd1C7xCQ"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u16trr2eEe2v0PGd1C7xCQ" specification="else" target="_u16tYr2eEe2v0PGd1C7xCQ"/>
    </vertices>
  </regions>
</sgraph:Statechart>
