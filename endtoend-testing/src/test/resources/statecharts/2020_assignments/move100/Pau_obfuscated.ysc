<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_u5V00L2eEe2v0PGd1C7xCQ" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var numb: integer&#xA;&#x9;var atToilet: boolean&#xA;&#x9;var txt: string&#xA;&#x9;&#xA;&#x9;event walk&#xA;&#x9;event pickup&#xA;&#x9;event drop&#xA;&#x9;event toilet&#xA;&#x9;event done&#xA;&#x9;event assemble&#xA;&#xA;&#x9;&#xA;" name="Pau">
  <regions xmi:type="sgraph:Region" xmi:id="_u5V00b2eEe2v0PGd1C7xCQ" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_u5V00r2eEe2v0PGd1C7xCQ" specification="" name="AtHome" incomingTransitions="_u5V1VL2eEe2v0PGd1C7xCQ _u5V0072eEe2v0PGd1C7xCQ _u5V0272eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0072eEe2v0PGd1C7xCQ" specification="employee.goHome / ui.setMsg(&quot;Already at home.&quot;)" target="_u5V00r2eEe2v0PGd1C7xCQ"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V01L2eEe2v0PGd1C7xCQ" specification="employee.goToWork / ui.setMsg(&quot;At work&quot;); ui.shiftsShow(); numb = util.getRandomInteger(3)&#xA;" target="_u5V01b2eEe2v0PGd1C7xCQ"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_u5V01b2eEe2v0PGd1C7xCQ" specification="entry/ ui.setMsg(&quot;At Work:&quot;);ui.pushMsg" name="AtWork" incomingTransitions="_u5V01L2eEe2v0PGd1C7xCQ">
      <regions xmi:type="sgraph:Region" xmi:id="_u5V01r2eEe2v0PGd1C7xCQ" name="AtWork">
        <vertices xmi:type="sgraph:Entry" xmi:id="_u5V0172eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V02L2eEe2v0PGd1C7xCQ" specification="" target="_u5V02b2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5V02b2eEe2v0PGd1C7xCQ" specification="entry / ui.shiftHighlightAssigned(numb);&#xA;txt = employee.getEnergy>=25 ? &quot;Selected shift will start soon...&quot;:&quot;Not enough energy left. Go home&quot;;&#xA;ui.setMsg(txt)&#xA;&#xA;" name="GracePeriod" incomingTransitions="_u5V02L2eEe2v0PGd1C7xCQ _u5V02r2eEe2v0PGd1C7xCQ _u5V03r2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V02r2eEe2v0PGd1C7xCQ" specification="employee.shiftClicked / numb = valueof(employee.shiftClicked)" target="_u5V02b2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0272eEe2v0PGd1C7xCQ" specification="employee.goHome / ui.popMsg();ui.setMsg(&quot;At home&quot;);ui.shiftsHide();&#xA;employee.increaseEnergy(50 )" target="_u5V00r2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V03L2eEe2v0PGd1C7xCQ" specification="after 4 s[employee.getEnergy>=25]" target="_u5V03b2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5V03b2eEe2v0PGd1C7xCQ" specification="entry / ui.shiftHighlightActive(numb);&#xA;atToilet = false;&#xA;ui.setMsg(&quot;Working shift&quot;);&#xA;ui.pushMsg()&#xA;" name="ShiftAssigned" incomingTransitions="_u5V03L2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V03r2eEe2v0PGd1C7xCQ" specification="after 10 s/ui.setActions('');ui.shiftsShow(); employee.increasePay(10);numb = util.getRandomInteger(3);ui.popMsg()" target="_u5V02b2eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u5V0372eEe2v0PGd1C7xCQ" name="EnergyTimer">
            <vertices xmi:type="sgraph:State" xmi:id="_u5V04L2eEe2v0PGd1C7xCQ" name="energy" incomingTransitions="_u5V0472eEe2v0PGd1C7xCQ _u5V04b2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V04b2eEe2v0PGd1C7xCQ" specification="after 1s[atToilet == false]/employee.increaseEnergy(-2)" target="_u5V04L2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u5V04r2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0472eEe2v0PGd1C7xCQ" specification="" target="_u5V04L2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_u5V05L2eEe2v0PGd1C7xCQ" name="AssemblyTimer">
            <vertices xmi:type="sgraph:State" xmi:id="_u5V05b2eEe2v0PGd1C7xCQ" name="Time" incomingTransitions="_u5V0672eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V05r2eEe2v0PGd1C7xCQ" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Assemble']" target="_u5V06r2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0572eEe2v0PGd1C7xCQ" specification="after 500ms/raise assemble" target="_u5V06r2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u5V06L2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V06b2eEe2v0PGd1C7xCQ" specification="&#xA;" target="_u5V06r2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5V06r2eEe2v0PGd1C7xCQ" name="Start" incomingTransitions="_u5V06b2eEe2v0PGd1C7xCQ _u5V05r2eEe2v0PGd1C7xCQ _u5V0572eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0672eEe2v0PGd1C7xCQ" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Assemble']" target="_u5V05b2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_u5V07L2eEe2v0PGd1C7xCQ" name="Shifts">
            <vertices xmi:type="sgraph:State" xmi:id="_u5V07b2eEe2v0PGd1C7xCQ" specification="" name="entry" incomingTransitions="_u5V1Ur2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V07r2eEe2v0PGd1C7xCQ" specification="after 0 ms  [numb == 0 || numb == 2] " target="_u5V08r2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0772eEe2v0PGd1C7xCQ" specification="after 0 ms  [numb == 1 ]" target="_u5V08L2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5V08L2eEe2v0PGd1C7xCQ" specification="entry / &#xA;ui.setActions(&quot;Assemble&quot;);&#xA;txt = factory.getMaterial > 0 ? &quot;You can assemble&quot;:&quot;Not enough materials left&quot;;&#xA;ui.setMsg(txt)" name="assemble" incomingTransitions="_u5V08b2eEe2v0PGd1C7xCQ _u5V0772eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V08b2eEe2v0PGd1C7xCQ" specification="assemble[factory.getMaterial > 0]/ factory.increaseMaterial(-1);factory.increaseFinished(1)" target="_u5V08L2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5V08r2eEe2v0PGd1C7xCQ" name="unloading/loading/timers" incomingTransitions="_u5V07r2eEe2v0PGd1C7xCQ">
              <regions xmi:type="sgraph:Region" xmi:id="_u5V0872eEe2v0PGd1C7xCQ" name="timers">
                <vertices xmi:type="sgraph:Entry" xmi:id="_u5V09L2eEe2v0PGd1C7xCQ">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V09b2eEe2v0PGd1C7xCQ" specification="" target="_u5V09r2eEe2v0PGd1C7xCQ"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_u5V09r2eEe2v0PGd1C7xCQ" name="Timers" incomingTransitions="_u5V09b2eEe2v0PGd1C7xCQ">
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V0972eEe2v0PGd1C7xCQ" name="Walk">
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V0-L2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0-b2eEe2v0PGd1C7xCQ" specification="&#xA;" target="_u5V0_b2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V0-r2eEe2v0PGd1C7xCQ" name="Time" incomingTransitions="_u5V0_r2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0-72eEe2v0PGd1C7xCQ" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Walk']" target="_u5V0_b2eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0_L2eEe2v0PGd1C7xCQ" specification="after 500ms/raise walk" target="_u5V0_b2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V0_b2eEe2v0PGd1C7xCQ" name="Start" incomingTransitions="_u5V0-b2eEe2v0PGd1C7xCQ _u5V0-72eEe2v0PGd1C7xCQ _u5V0_L2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V0_r2eEe2v0PGd1C7xCQ" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Walk']" target="_u5V0-r2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V0_72eEe2v0PGd1C7xCQ" name="Pickup">
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1AL2eEe2v0PGd1C7xCQ" name="Start" incomingTransitions="_u5V1Br2eEe2v0PGd1C7xCQ _u5V1A72eEe2v0PGd1C7xCQ _u5V1BL2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Ab2eEe2v0PGd1C7xCQ" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Pickup']" target="_u5V1Ar2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1Ar2eEe2v0PGd1C7xCQ" name="Time" incomingTransitions="_u5V1Ab2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1A72eEe2v0PGd1C7xCQ" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Pickup']" target="_u5V1AL2eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1BL2eEe2v0PGd1C7xCQ" specification="after 500ms/raise pickup" target="_u5V1AL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1Bb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Br2eEe2v0PGd1C7xCQ" specification="&#xA;" target="_u5V1AL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V1B72eEe2v0PGd1C7xCQ" name="Drop">
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1CL2eEe2v0PGd1C7xCQ" name="Start" incomingTransitions="_u5V1C72eEe2v0PGd1C7xCQ _u5V1Db2eEe2v0PGd1C7xCQ _u5V1Dr2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Cb2eEe2v0PGd1C7xCQ" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Drop']" target="_u5V1DL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1Cr2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1C72eEe2v0PGd1C7xCQ" specification="&#xA;" target="_u5V1CL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1DL2eEe2v0PGd1C7xCQ" name="Time" incomingTransitions="_u5V1Cb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Db2eEe2v0PGd1C7xCQ" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Drop']" target="_u5V1CL2eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Dr2eEe2v0PGd1C7xCQ" specification="after 500ms/raise drop" target="_u5V1CL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V1D72eEe2v0PGd1C7xCQ" name="Done">
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1EL2eEe2v0PGd1C7xCQ" specification="" name="Start" incomingTransitions="_u5V1Fr2eEe2v0PGd1C7xCQ _u5V1E72eEe2v0PGd1C7xCQ _u5V1FL2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Eb2eEe2v0PGd1C7xCQ" specification="after 10 ms ,ui.actionPressed[valueof(ui.actionPressed) == 'Done']" target="_u5V1Er2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1Er2eEe2v0PGd1C7xCQ" specification="" name="Time" incomingTransitions="_u5V1Eb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1E72eEe2v0PGd1C7xCQ" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Done']" target="_u5V1EL2eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1FL2eEe2v0PGd1C7xCQ" specification="after 500ms/raise done" target="_u5V1EL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1Fb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Fr2eEe2v0PGd1C7xCQ" specification="&#xA;" target="_u5V1EL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V1F72eEe2v0PGd1C7xCQ" name="ToiletBreak">
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1GL2eEe2v0PGd1C7xCQ" name="Start" incomingTransitions="_u5V1Hr2eEe2v0PGd1C7xCQ _u5V1G72eEe2v0PGd1C7xCQ _u5V1HL2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Gb2eEe2v0PGd1C7xCQ" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Toilet break']" target="_u5V1Gr2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1Gr2eEe2v0PGd1C7xCQ" specification="" name="Time" incomingTransitions="_u5V1Gb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1G72eEe2v0PGd1C7xCQ" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Toilet break']" target="_u5V1GL2eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1HL2eEe2v0PGd1C7xCQ" specification="after 500ms/raise toilet" target="_u5V1GL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1Hb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Hr2eEe2v0PGd1C7xCQ" specification="&#xA;" target="_u5V1GL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                  </regions>
                </vertices>
              </regions>
              <regions xmi:type="sgraph:Region" xmi:id="_u5V1H72eEe2v0PGd1C7xCQ" name="unloading/loading">
                <vertices xmi:type="sgraph:State" xmi:id="_u5V1IL2eEe2v0PGd1C7xCQ" specification="" name="AtTruckCarrying" incomingTransitions="_u5V1Or2eEe2v0PGd1C7xCQ">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Ib2eEe2v0PGd1C7xCQ" specification="walk" target="_u5V1Ob2eEe2v0PGd1C7xCQ"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V1Ir2eEe2v0PGd1C7xCQ" name="Truck Carrying">
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1I72eEe2v0PGd1C7xCQ" specification="entry / ui.setActions(&quot;Walk,Drop&quot;); &#xA;ui.setMsg(&quot;At truck, carrying finished product.&quot;)" name="case load" incomingTransitions="_u5V1Kb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1JL2eEe2v0PGd1C7xCQ" specification="drop/factory.increaseFinished(-1)" target="_u5V1UL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1Jb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Jr2eEe2v0PGd1C7xCQ" specification="" target="_u5V1KL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1J72eEe2v0PGd1C7xCQ" specification="entry / ui.setActions(&quot;Walk&quot;); &#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="case unload" incomingTransitions="_u5V1T72eEe2v0PGd1C7xCQ _u5V1Kr2eEe2v0PGd1C7xCQ"/>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1KL2eEe2v0PGd1C7xCQ" name="entry" incomingTransitions="_u5V1Jr2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Kb2eEe2v0PGd1C7xCQ" specification="after 0ms [numb == 2]" target="_u5V1I72eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Kr2eEe2v0PGd1C7xCQ" specification="after 0ms [numb == 0]" target="_u5V1J72eEe2v0PGd1C7xCQ"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_u5V1K72eEe2v0PGd1C7xCQ" specification="&#xA;" name="AtStock" incomingTransitions="_u5V1R72eEe2v0PGd1C7xCQ _u5V1OL2eEe2v0PGd1C7xCQ _u5V1Rb2eEe2v0PGd1C7xCQ">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1LL2eEe2v0PGd1C7xCQ" specification="toilet" target="_u5V1RL2eEe2v0PGd1C7xCQ"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Lb2eEe2v0PGd1C7xCQ" specification="walk" target="_u5V1Rr2eEe2v0PGd1C7xCQ"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V1Lr2eEe2v0PGd1C7xCQ" name="Stock">
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1L72eEe2v0PGd1C7xCQ" specification="entry / ui.setActions('Walk,Toilet break'); &#xA;ui.setMsg(&quot;At stock&quot;)" name="case unload" incomingTransitions="_u5V1P72eEe2v0PGd1C7xCQ _u5V1Mr2eEe2v0PGd1C7xCQ"/>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1ML2eEe2v0PGd1C7xCQ" name="entry" incomingTransitions="_u5V1NL2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Mb2eEe2v0PGd1C7xCQ" specification="after 0ms [numb == 2]" target="_u5V1Nb2eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Mr2eEe2v0PGd1C7xCQ" specification="after 0ms [numb == 0]" target="_u5V1L72eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1M72eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1NL2eEe2v0PGd1C7xCQ" specification="" target="_u5V1ML2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1Nb2eEe2v0PGd1C7xCQ" specification="entry / ui.setActions('Walk,Toilet break,Pickup'); &#xA;ui.setMsg(&quot;At stock&quot;)&#xA;" name="case load" incomingTransitions="_u5V1Mb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Nr2eEe2v0PGd1C7xCQ" specification="pickup" target="_u5V1QL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1N72eEe2v0PGd1C7xCQ">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1OL2eEe2v0PGd1C7xCQ" specification="" target="_u5V1K72eEe2v0PGd1C7xCQ"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_u5V1Ob2eEe2v0PGd1C7xCQ" specification="" name="AtStockCarrying" incomingTransitions="_u5V1Ib2eEe2v0PGd1C7xCQ">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Or2eEe2v0PGd1C7xCQ" specification="walk" target="_u5V1IL2eEe2v0PGd1C7xCQ"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V1O72eEe2v0PGd1C7xCQ" name="Stock Carrying">
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1PL2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Pb2eEe2v0PGd1C7xCQ" specification="" target="_u5V1Qb2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1Pr2eEe2v0PGd1C7xCQ" specification="entry / ui.setActions(&quot;Walk,Drop&quot;); &#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="case unload" incomingTransitions="_u5V1Q72eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1P72eEe2v0PGd1C7xCQ" specification="drop/factory.increaseMaterial(1)" target="_u5V1L72eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1QL2eEe2v0PGd1C7xCQ" specification="entry / ui.setActions(&quot;Walk&quot;); &#xA;ui.setMsg(&quot;At stock, carrying finished product.&quot;)" name="case load" incomingTransitions="_u5V1Nr2eEe2v0PGd1C7xCQ _u5V1Qr2eEe2v0PGd1C7xCQ"/>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1Qb2eEe2v0PGd1C7xCQ" name="entry" incomingTransitions="_u5V1Pb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Qr2eEe2v0PGd1C7xCQ" specification="after 0ms [numb == 2]" target="_u5V1QL2eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Q72eEe2v0PGd1C7xCQ" specification="after 0ms [numb == 0]" target="_u5V1Pr2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_u5V1RL2eEe2v0PGd1C7xCQ" specification="entry/ui.setActions(&quot;&quot;);ui.setActions(&quot;Done&quot;); atToilet = true;ui.setMsg(&quot;At toilet.&quot;)" name="AtToilet" incomingTransitions="_u5V1LL2eEe2v0PGd1C7xCQ">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Rb2eEe2v0PGd1C7xCQ" specification="done/atToilet = false" target="_u5V1K72eEe2v0PGd1C7xCQ"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_u5V1Rr2eEe2v0PGd1C7xCQ" specification="&#xA;" name="AtTruck" incomingTransitions="_u5V1Lb2eEe2v0PGd1C7xCQ">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1R72eEe2v0PGd1C7xCQ" specification="walk" target="_u5V1K72eEe2v0PGd1C7xCQ"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_u5V1SL2eEe2v0PGd1C7xCQ" name="Truck">
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1Sb2eEe2v0PGd1C7xCQ" name="entry" incomingTransitions="_u5V1Tb2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Sr2eEe2v0PGd1C7xCQ" specification="after 0ms [numb == 0]" target="_u5V1Tr2eEe2v0PGd1C7xCQ"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1S72eEe2v0PGd1C7xCQ" specification="after 0ms [numb == 2]" target="_u5V1UL2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1TL2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Tb2eEe2v0PGd1C7xCQ" specification="" target="_u5V1Sb2eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1Tr2eEe2v0PGd1C7xCQ" specification="entry /&#xA;ui.setActions(&quot;Walk,Pickup&quot;);&#xA;ui.setMsg(&quot;At Truck&quot;)" name="case unload" incomingTransitions="_u5V1Sr2eEe2v0PGd1C7xCQ">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1T72eEe2v0PGd1C7xCQ" specification="pickup" target="_u5V1J72eEe2v0PGd1C7xCQ"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_u5V1UL2eEe2v0PGd1C7xCQ" specification="entry /&#xA;ui.setActions(&quot;Walk&quot;);&#xA;ui.setMsg(&quot;At Truck&quot;)" name="case load" incomingTransitions="_u5V1JL2eEe2v0PGd1C7xCQ _u5V1S72eEe2v0PGd1C7xCQ"/>
                  </regions>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1Ub2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1Ur2eEe2v0PGd1C7xCQ" specification="" target="_u5V07b2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_u5V1U72eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5V1VL2eEe2v0PGd1C7xCQ" specification="/ui.setMsg(&quot;At home&quot;)" target="_u5V00r2eEe2v0PGd1C7xCQ"/>
    </vertices>
  </regions>
</sgraph:Statechart>
