<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_u5e-wL2eEe2v0PGd1C7xCQ" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var choice  = -1&#xA;&#x9;var currentTask = &quot;&quot;&#xA;&#x9;event TakeBreak&#xA;&#x9;event TaskSucceeded&#xA;&#x9;event StartWorking&#xA;&#x9;event EndOfShift&#xA;&#xA;&#x9;&#xA;" name="Roa">
  <regions xmi:type="sgraph:Region" xmi:id="_u5e-wb2eEe2v0PGd1C7xCQ" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_u5e-wr2eEe2v0PGd1C7xCQ" specification="entry / &#xD;&#xA;ui.setMsg(&quot;You are at work.&quot;); &#xD;&#xA;ui.shiftsShow()" name="Work" incomingTransitions="_u5e_EL2eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-w72eEe2v0PGd1C7xCQ" specification="employee.goHome" target="_u5e_D72eEe2v0PGd1C7xCQ"/>
      <regions xmi:type="sgraph:Region" xmi:id="_u5e-xL2eEe2v0PGd1C7xCQ" name="r2">
        <vertices xmi:type="sgraph:Entry" xmi:id="_u5e-xb2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-xr2eEe2v0PGd1C7xCQ" specification="" target="_u5e-x72eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5e-x72eEe2v0PGd1C7xCQ" specification="" name="NotPressing" incomingTransitions="_u5e-xr2eEe2v0PGd1C7xCQ _u5e-yr2eEe2v0PGd1C7xCQ _u5e-y72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-yL2eEe2v0PGd1C7xCQ" specification="ui.actionPressed / &#xD;&#xA;&#x9;currentTask = valueof(ui.actionPressed)" target="_u5e-yb2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5e-yb2eEe2v0PGd1C7xCQ" specification="" name="Pressing" incomingTransitions="_u5e-yL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-yr2eEe2v0PGd1C7xCQ" specification="ui.actionReleased" target="_u5e-x72eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-y72eEe2v0PGd1C7xCQ" specification="after 500ms / &#xD;&#xA;&#x9;raise TaskSucceeded" target="_u5e-x72eEe2v0PGd1C7xCQ"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_u5e-zL2eEe2v0PGd1C7xCQ" name="r1">
        <vertices xmi:type="sgraph:State" xmi:id="_u5e-zb2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(0);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at Unload.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;);&#xD;&#xA;&#x9;ui.popMsg()" name="Unload" incomingTransitions="_u5e-_72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-zr2eEe2v0PGd1C7xCQ" specification="after 10s / employee.increasePay(10)" target="_u5e--r2eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u5e-z72eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-0L2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;raise TakeBreak;&#xD;&#xA;&#x9;ui.setActions(&quot;Done&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;TakingBreak&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;raise StartWorking" name="Break" incomingTransitions="_u5e-3r2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-0b2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Done&quot;]" target="_u5e-3L2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-0r2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Stock Carrying&quot;)" name="AtStockCarrying" incomingTransitions="_u5e-2b2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-072eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Drop&quot;]/factory.increaseMaterial(1)" target="_u5e-3L2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-1L2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_u5e-2L2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-1b2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Pick up&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck&quot;)" name="AtTruck" incomingTransitions="_u5e-3b2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-1r2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_u5e-3L2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-172eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Pick up&quot;]" target="_u5e-2L2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-2L2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck Carrying&quot;)" name="AtTruckCarrying" incomingTransitions="_u5e-172eEe2v0PGd1C7xCQ _u5e-1L2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-2b2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_u5e-0r2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u5e-2r2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-272eEe2v0PGd1C7xCQ" specification="" target="_u5e-3L2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-3L2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,ToiletBreak&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;In Stock&quot;)" name="AtStock" incomingTransitions="_u5e-272eEe2v0PGd1C7xCQ _u5e-072eEe2v0PGd1C7xCQ _u5e-1r2eEe2v0PGd1C7xCQ _u5e-0b2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-3b2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_u5e-1b2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-3r2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;ToiletBreak&quot;]" target="_u5e-0L2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5e-372eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(1);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at Assembly.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#x9;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.popMsg();&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;)" name="Assembly" incomingTransitions="_u5e-_b2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-4L2eEe2v0PGd1C7xCQ" specification="after 10s /&#xD;&#xA; employee.increasePay(10)" target="_u5e--r2eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u5e-4b2eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-4r2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Assemble&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At the Assmebler Machine&quot;)" name="Assembling" incomingTransitions="_u5e-5b2eEe2v0PGd1C7xCQ _u5e-472eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-472eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Assemble&quot; &amp;&amp; factory.getMaterial() >= 1]/ factory.increaseFinished(1)" target="_u5e-4r2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u5e-5L2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-5b2eEe2v0PGd1C7xCQ" specification="" target="_u5e-4r2eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5e-5r2eEe2v0PGd1C7xCQ" specification="entry /&#xD;&#xA;&#x9;ui.shiftHighlightActive(2);&#xD;&#xA;&#x9;ui.setMsg(&quot;You are at load.&quot;);&#xD;&#xA;&#x9;ui.pushMsg();&#xD;&#xA;&#x9;raise StartWorking&#xD;&#xA;&#xD;&#xA;exit /&#xD;&#xA;&#x9;raise EndOfShift;&#xD;&#xA;&#x9;ui.popMsg();&#xD;&#xA;&#x9;ui.setActions(&quot;&quot;)" name="Load" incomingTransitions="_u5e-_r2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-572eEe2v0PGd1C7xCQ" specification="after 10s / employee.increasePay(10)" target="_u5e--r2eEe2v0PGd1C7xCQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_u5e-6L2eEe2v0PGd1C7xCQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-6b2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Pick up,ToiletBreak&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;In Stock&quot;)" name="AtStock" incomingTransitions="_u5e-7r2eEe2v0PGd1C7xCQ _u5e-8r2eEe2v0PGd1C7xCQ _u5e-8L2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-6r2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_u5e-8b2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-672eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Pick up&quot; &amp;&amp; factory.getFinished() > 0]" target="_u5e-872eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-7L2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;ToiletBreak&quot;]" target="_u5e-772eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_u5e-7b2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-7r2eEe2v0PGd1C7xCQ" specification="" target="_u5e-6b2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-772eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;raise TakeBreak;&#xD;&#xA;&#x9;ui.setActions(&quot;Done&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;TakingBreak&quot;)&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;raise StartWorking" name="Break" incomingTransitions="_u5e-7L2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-8L2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Done&quot;]" target="_u5e-6b2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-8b2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck&quot;)" name="AtTruck" incomingTransitions="_u5e-6r2eEe2v0PGd1C7xCQ _u5e-9r2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-8r2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_u5e-6b2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-872eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Stock Carrying&quot;)" name="AtStockCarrying" incomingTransitions="_u5e-972eEe2v0PGd1C7xCQ _u5e-672eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-9L2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_u5e-9b2eEe2v0PGd1C7xCQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_u5e-9b2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;&#x9;ui.setMsg(&quot;At Truck Carrying&quot;)" name="AtTruckCarrying" incomingTransitions="_u5e-9L2eEe2v0PGd1C7xCQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-9r2eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Drop&quot;] /&#x9;factory.increaseFinished(-1)" target="_u5e-8b2eEe2v0PGd1C7xCQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-972eEe2v0PGd1C7xCQ" specification="TaskSucceeded[currentTask == &quot;Walk&quot;]" target="_u5e-872eEe2v0PGd1C7xCQ"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_u5e--L2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e--b2eEe2v0PGd1C7xCQ" specification="" target="_u5e--r2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5e--r2eEe2v0PGd1C7xCQ" specification="entry/&#xD;&#xA;&#x9;choice = util.getRandomInteger(3);&#xD;&#xA;&#x9;ui.shiftHighlightAssigned(choice)&#xD;&#xA;&#xD;&#xA;employee.shiftClicked/&#xD;&#xA;&#x9;choice = valueof(employee.shiftClicked);&#xD;&#xA;&#x9;ui.shiftHighlightAssigned(choice)&#xD;&#xA;&#x9;" name="grace" incomingTransitions="_u5e--b2eEe2v0PGd1C7xCQ _u5e-zr2eEe2v0PGd1C7xCQ _u5e-572eEe2v0PGd1C7xCQ _u5e-4L2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e--72eEe2v0PGd1C7xCQ" specification="after 4s[employee.getEnergy() >= 25]" target="_u5e-_L2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_u5e-_L2eEe2v0PGd1C7xCQ" incomingTransitions="_u5e--72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-_b2eEe2v0PGd1C7xCQ" specification="[choice == 1]" target="_u5e-372eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-_r2eEe2v0PGd1C7xCQ" specification="[choice == 2]" target="_u5e-5r2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e-_72eEe2v0PGd1C7xCQ" specification="[choice == 0]" target="_u5e-zb2eEe2v0PGd1C7xCQ"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_u5e_AL2eEe2v0PGd1C7xCQ" name="r3">
        <vertices xmi:type="sgraph:State" xmi:id="_u5e_Ab2eEe2v0PGd1C7xCQ" name="GracePeriod" incomingTransitions="_u5e_DL2eEe2v0PGd1C7xCQ _u5e_Cb2eEe2v0PGd1C7xCQ _u5e_Bb2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_Ar2eEe2v0PGd1C7xCQ" specification="StartWorking" target="_u5e_Br2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5e_A72eEe2v0PGd1C7xCQ" name="Break" incomingTransitions="_u5e_Cr2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_BL2eEe2v0PGd1C7xCQ" specification="StartWorking" target="_u5e_Br2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_Bb2eEe2v0PGd1C7xCQ" specification="EndOfShift" target="_u5e_Ab2eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_u5e_Br2eEe2v0PGd1C7xCQ" name="working" incomingTransitions="_u5e_Ar2eEe2v0PGd1C7xCQ _u5e_B72eEe2v0PGd1C7xCQ _u5e_CL2eEe2v0PGd1C7xCQ _u5e_BL2eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_B72eEe2v0PGd1C7xCQ" specification="after 1s / employee.increaseEnergy(-2)" target="_u5e_Br2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_CL2eEe2v0PGd1C7xCQ" specification="employee.goHome" target="_u5e_Br2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_Cb2eEe2v0PGd1C7xCQ" specification="EndOfShift" target="_u5e_Ab2eEe2v0PGd1C7xCQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_Cr2eEe2v0PGd1C7xCQ" specification="TakeBreak" target="_u5e_A72eEe2v0PGd1C7xCQ"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_u5e_C72eEe2v0PGd1C7xCQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_DL2eEe2v0PGd1C7xCQ" specification="" target="_u5e_Ab2eEe2v0PGd1C7xCQ"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_u5e_Db2eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_Dr2eEe2v0PGd1C7xCQ" specification="" target="_u5e_D72eEe2v0PGd1C7xCQ"/>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_u5e_D72eEe2v0PGd1C7xCQ" specification="entry / ui.setMsg(&quot;You are at home.&quot;); ui.shiftsHide()&#xD;&#xA;&#xD;&#xA;exit/&#xD;&#xA;&#x9;&#x9;employee.increaseEnergy(50)" name="Home" incomingTransitions="_u5e_Dr2eEe2v0PGd1C7xCQ _u5e-w72eEe2v0PGd1C7xCQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_u5e_EL2eEe2v0PGd1C7xCQ" specification="employee.goToWork" target="_u5e-wr2eEe2v0PGd1C7xCQ"/>
    </vertices>
  </regions>
</sgraph:Statechart>
