<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_lmqqIMDAEe2RTpaSuj4XBw" specification="// You are only allowed to edit the&#xA;// &quot;internal&quot; section, see below&#xA;&#xA;// DO NOT EDIT THESE OPTIONS&#xA;@EventDriven&#xA;@SuperSteps(no) &#xA;&#xA;interface:&#xA;&#x9;// DO NOT EDIT THE INTERFACE&#xA;&#x9;&#xA;&#x9;in event approachingStation: integer&#xA;&#x9;out event openDoors&#xA;&#x9;out event closeDoors&#xA;&#x9;out event startDoorsSignal&#xA;&#x9;out event stopDoorsSignal&#xA;&#x9;in event board&#xA;&#x9;in event unboard&#xA;&#x9;in event requestStop: integer&#xA;&#x9;out event setTargetSpeed: real&#xA;&#x9;in event atTargetSpeed&#xA;&#x9;&#xA;&#x9;in event startEmergency&#xA;&#x9;in event stopEmergency&#xA;&#xA;&#x9;var stopsAt: integer = 0&#xA;&#x9;var remainingCapacity: integer = 6&#xA;&#x9;var numPassengers: integer = 0&#xA;&#xA;&#x9;out event refreshUI&#xA;&#xA;internal:&#xA;&#x9;// FEEL FREE TO EDIT&#xA;&#x9;// e.g. add internal variables,&#xA;&#x9;//       internal events, ...&#xA;&#x9;&#xA;&#x9;event depart&#xA;&#x9;event arrive&#xA;&#x9;event closingComplete&#xA;&#x9;event signalStarted&#xA;&#x9;&#xA;&#x9;var can_board: boolean = false&#xA;&#x9;var can_depart: boolean = false&#xA;&#x9;var can_close_boarding: boolean = true&#xA;&#x9;var can_close_signal: boolean = false" name="Mat">
  <regions xmi:type="sgraph:Region" xmi:id="_lmqqIcDAEe2RTpaSuj4XBw" name="main_region">
    <vertices xmi:type="sgraph:State" xmi:id="_lmqqIsDAEe2RTpaSuj4XBw" name="Trolley" incomingTransitions="_lmqqesDAEe2RTpaSuj4XBw">
      <regions xmi:type="sgraph:Region" xmi:id="_lmqqI8DAEe2RTpaSuj4XBw" name="Main">
        <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqJMDAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqJcDAEe2RTpaSuj4XBw" specification="" target="_lmqqLcDAEe2RTpaSuj4XBw"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqJsDAEe2RTpaSuj4XBw" name="Arrival" incomingTransitions="_lmqqPcDAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqJ8DAEe2RTpaSuj4XBw" specification="depart" target="_lmqqPMDAEe2RTpaSuj4XBw"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqKMDAEe2RTpaSuj4XBw" specification="startEmergency" target="_lmqqXMDAEe2RTpaSuj4XBw"/>
          <regions xmi:type="sgraph:Region" xmi:id="_lmqqKcDAEe2RTpaSuj4XBw" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqKsDAEe2RTpaSuj4XBw">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqK8DAEe2RTpaSuj4XBw" specification="" target="_lmqqLMDAEe2RTpaSuj4XBw"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_lmqqLMDAEe2RTpaSuj4XBw" specification="" name="Wait" incomingTransitions="_lmqqK8DAEe2RTpaSuj4XBw"/>
            <vertices xmi:type="sgraph:State" xmi:id="_lmqqLcDAEe2RTpaSuj4XBw" name="Arrival2" incomingTransitions="_lmqqXcDAEe2RTpaSuj4XBw _lmqqJcDAEe2RTpaSuj4XBw">
              <regions xmi:type="sgraph:Region" xmi:id="_lmqqLsDAEe2RTpaSuj4XBw" name="DoorsAndDeparture">
                <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqL8DAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqMMDAEe2RTpaSuj4XBw" specification="/ raise openDoors; &#xD;&#xA;can_board = true" target="_lmqqMcDAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_lmqqMcDAEe2RTpaSuj4XBw" specification="" name="OpenDoors" incomingTransitions="_lmqqMMDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqMsDAEe2RTpaSuj4XBw" specification="after 50ms" target="_lmqqNMDAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:FinalState" xmi:id="_lmqqM8DAEe2RTpaSuj4XBw" incomingTransitions="_lmqqNcDAEe2RTpaSuj4XBw"/>
                <vertices xmi:type="sgraph:Choice" xmi:id="_lmqqNMDAEe2RTpaSuj4XBw" incomingTransitions="_lmqqMsDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqNcDAEe2RTpaSuj4XBw" specification="[stopsAt != 0 &amp;&amp; can_depart == true] / raise depart" target="_lmqqM8DAEe2RTpaSuj4XBw"/>
                </vertices>
              </regions>
              <regions xmi:type="sgraph:Region" xmi:id="_lmqqNsDAEe2RTpaSuj4XBw" name="DepartureTimer">
                <vertices xmi:type="sgraph:State" xmi:id="_lmqqN8DAEe2RTpaSuj4XBw" specification="entry / can_depart = false" name="Timer" incomingTransitions="_lmqqOsDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqOMDAEe2RTpaSuj4XBw" specification="after 2s / can_depart = true" target="_lmqqO8DAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqOcDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqOsDAEe2RTpaSuj4XBw" specification="" target="_lmqqN8DAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:FinalState" xmi:id="_lmqqO8DAEe2RTpaSuj4XBw" incomingTransitions="_lmqqOMDAEe2RTpaSuj4XBw"/>
              </regions>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqPMDAEe2RTpaSuj4XBw" name="Departure" incomingTransitions="_lmqqJ8DAEe2RTpaSuj4XBw _lmqqWcDAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqPcDAEe2RTpaSuj4XBw" specification="arrive" target="_lmqqJsDAEe2RTpaSuj4XBw"/>
          <regions xmi:type="sgraph:Region" xmi:id="_lmqqPsDAEe2RTpaSuj4XBw" name="r1">
            <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqP8DAEe2RTpaSuj4XBw">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqQMDAEe2RTpaSuj4XBw" specification="" target="_lmqqQcDAEe2RTpaSuj4XBw"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_lmqqQcDAEe2RTpaSuj4XBw" name="ClosingDoors" incomingTransitions="_lmqqQMDAEe2RTpaSuj4XBw">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqQsDAEe2RTpaSuj4XBw" specification="closingComplete" target="_lmqqTMDAEe2RTpaSuj4XBw"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqQ8DAEe2RTpaSuj4XBw" specification="startEmergency" target="_lmqqXMDAEe2RTpaSuj4XBw"/>
              <regions xmi:type="sgraph:Region" xmi:id="_lmqqRMDAEe2RTpaSuj4XBw" name="r1">
                <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqRcDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqRsDAEe2RTpaSuj4XBw" specification="/ raise startDoorsSignal;&#xD;&#xA;raise signalStarted" target="_lmqqR8DAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_lmqqR8DAEe2RTpaSuj4XBw" specification=" " name="signal" incomingTransitions="_lmqqRsDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqSMDAEe2RTpaSuj4XBw" specification="after 50ms" target="_lmqqSsDAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_lmqqScDAEe2RTpaSuj4XBw" specification="entry /can_board = false; &#xD;&#xA;raise stopDoorsSignal; &#xD;&#xA;raise closeDoors;&#xD;&#xA;raise closingComplete" name="doors" incomingTransitions="_lmqqS8DAEe2RTpaSuj4XBw"/>
                <vertices xmi:type="sgraph:Choice" xmi:id="_lmqqSsDAEe2RTpaSuj4XBw" incomingTransitions="_lmqqSMDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqS8DAEe2RTpaSuj4XBw" specification="[can_close_boarding &amp;&amp; can_close_signal]" target="_lmqqScDAEe2RTpaSuj4XBw"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_lmqqTMDAEe2RTpaSuj4XBw" specification="entry / raise setTargetSpeed: 24.0" name="Accelerate" incomingTransitions="_lmqqQsDAEe2RTpaSuj4XBw">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqTcDAEe2RTpaSuj4XBw" specification="atTargetSpeed" target="_lmqqTsDAEe2RTpaSuj4XBw"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_lmqqTsDAEe2RTpaSuj4XBw" name="Approach" incomingTransitions="_lmqqTcDAEe2RTpaSuj4XBw">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqT8DAEe2RTpaSuj4XBw" specification="startEmergency" target="_lmqqWsDAEe2RTpaSuj4XBw"/>
              <regions xmi:type="sgraph:Region" xmi:id="_lmqqUMDAEe2RTpaSuj4XBw" name="r1">
                <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqUcDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqUsDAEe2RTpaSuj4XBw" specification="" target="_lmqqU8DAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_lmqqU8DAEe2RTpaSuj4XBw" name="init" incomingTransitions="_lmqqUsDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqVMDAEe2RTpaSuj4XBw" specification="approachingStation [(stopsAt  &amp; (1 &lt;&lt;valueof(approachingStation))) != 0]" target="_lmqqVcDAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_lmqqVcDAEe2RTpaSuj4XBw" specification="entry / raise setTargetSpeed: 0" name="Brake" incomingTransitions="_lmqqVMDAEe2RTpaSuj4XBw">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqVsDAEe2RTpaSuj4XBw" specification="atTargetSpeed / stopsAt &amp;= ~(1 &lt;&lt; valueof(approachingStation)); raise refreshUI; raise arrive" target="_lmqqV8DAEe2RTpaSuj4XBw"/>
                </vertices>
                <vertices xmi:type="sgraph:FinalState" xmi:id="_lmqqV8DAEe2RTpaSuj4XBw" incomingTransitions="_lmqqVsDAEe2RTpaSuj4XBw"/>
              </regions>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqWMDAEe2RTpaSuj4XBw" specification="entry / raise openDoors;&#xA;can_board = true" name="StandStill" incomingTransitions="_lmqqW8DAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqWcDAEe2RTpaSuj4XBw" specification="stopEmergency" target="_lmqqPMDAEe2RTpaSuj4XBw"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqWsDAEe2RTpaSuj4XBw" specification="entry / raise setTargetSpeed: 0" name="EmergencyMoving" incomingTransitions="_lmqqT8DAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqW8DAEe2RTpaSuj4XBw" specification="atTargetSpeed" target="_lmqqWMDAEe2RTpaSuj4XBw"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqXMDAEe2RTpaSuj4XBw" specification="entry / can_board = true; raise stopDoorsSignal; raise openDoors" name="EmergencyStanding" incomingTransitions="_lmqqKMDAEe2RTpaSuj4XBw _lmqqQ8DAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqXcDAEe2RTpaSuj4XBw" specification="stopEmergency" target="_lmqqLcDAEe2RTpaSuj4XBw"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_lmqqXsDAEe2RTpaSuj4XBw" name="SignalTimer">
        <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqX8DAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqYMDAEe2RTpaSuj4XBw" specification="" target="_lmqqYcDAEe2RTpaSuj4XBw"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqYcDAEe2RTpaSuj4XBw" specification="" name="WaitForDeparture" incomingTransitions="_lmqqYMDAEe2RTpaSuj4XBw"/>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqYsDAEe2RTpaSuj4XBw" specification="entry / can_close_signal = false" name="Start" incomingTransitions="_lmqqZcDAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqY8DAEe2RTpaSuj4XBw" specification="after 1s" target="_lmqqZMDAEe2RTpaSuj4XBw"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqZMDAEe2RTpaSuj4XBw" specification="entry / can_close_signal = true" name="Finish" incomingTransitions="_lmqqY8DAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqZcDAEe2RTpaSuj4XBw" specification="signalStarted" target="_lmqqYsDAEe2RTpaSuj4XBw"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_lmqqZsDAEe2RTpaSuj4XBw" name="Boarding">
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqZ8DAEe2RTpaSuj4XBw" specification="entry / can_close_boarding = false" name="Blocked" incomingTransitions="_lmqqbMDAEe2RTpaSuj4XBw _lmqqbcDAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqaMDAEe2RTpaSuj4XBw" specification="after 1s" target="_lmqqcMDAEe2RTpaSuj4XBw"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqacDAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqasDAEe2RTpaSuj4XBw" specification="" target="_lmqqa8DAEe2RTpaSuj4XBw"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqa8DAEe2RTpaSuj4XBw" name="NotBlocked" incomingTransitions="_lmqqasDAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqbMDAEe2RTpaSuj4XBw" specification="board [can_board &amp;&amp; remainingCapacity > 0] / remainingCapacity -= 1; numPassengers += 1; raise refreshUI" target="_lmqqZ8DAEe2RTpaSuj4XBw"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqbcDAEe2RTpaSuj4XBw" specification="unboard [can_board &amp;&amp; numPassengers > 0] / remainingCapacity += 1; numPassengers -= 1; raise refreshUI" target="_lmqqZ8DAEe2RTpaSuj4XBw"/>
          <regions xmi:type="sgraph:Region" xmi:id="_lmqqbsDAEe2RTpaSuj4XBw" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_lmqqb8DAEe2RTpaSuj4XBw" specification="entry / can_close_boarding = true" name="CanClose" incomingTransitions="_lmqqccDAEe2RTpaSuj4XBw _lmqqc8DAEe2RTpaSuj4XBw"/>
            <vertices xmi:type="sgraph:State" xmi:id="_lmqqcMDAEe2RTpaSuj4XBw" specification="" name="CannotClose" incomingTransitions="_lmqqaMDAEe2RTpaSuj4XBw">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqccDAEe2RTpaSuj4XBw" specification="after 1s" target="_lmqqb8DAEe2RTpaSuj4XBw"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqcsDAEe2RTpaSuj4XBw">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqc8DAEe2RTpaSuj4XBw" specification="" target="_lmqqb8DAEe2RTpaSuj4XBw"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_lmqqdMDAEe2RTpaSuj4XBw" name="StopRequests">
        <vertices xmi:type="sgraph:State" xmi:id="_lmqqdcDAEe2RTpaSuj4XBw" name="1" incomingTransitions="_lmqqdsDAEe2RTpaSuj4XBw _lmqqeMDAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqdsDAEe2RTpaSuj4XBw" specification="requestStop / stopsAt |= (1 &lt;&lt; valueof(requestStop)); raise refreshUI" target="_lmqqdcDAEe2RTpaSuj4XBw"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqd8DAEe2RTpaSuj4XBw">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqeMDAEe2RTpaSuj4XBw" specification="" target="_lmqqdcDAEe2RTpaSuj4XBw"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_lmqqecDAEe2RTpaSuj4XBw">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_lmqqesDAEe2RTpaSuj4XBw" specification="/ stopsAt = 0" target="_lmqqIsDAEe2RTpaSuj4XBw"/>
    </vertices>
  </regions>
</sgraph:Statechart>
