<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_M_SkgNLDEe28zv8lYWPWfQ" specification="// You are only allowed to edit the&#xA;// &quot;internal&quot; section, see below&#xA;&#xA;// DO NOT EDIT THESE OPTIONS&#xA;@EventDriven&#xA;@SuperSteps(no) &#xA;&#xA;interface:&#xA;&#x9;// DO NOT EDIT THE INTERFACE&#xA;&#x9;&#xA;&#x9;in event approachingStation: integer&#xA;&#x9;out event openDoors&#xA;&#x9;out event closeDoors&#xA;&#x9;out event startDoorsSignal&#xA;&#x9;out event stopDoorsSignal&#xA;&#x9;in event board&#xA;&#x9;in event unboard&#xA;&#x9;in event requestStop: integer&#xA;&#x9;out event setTargetSpeed: real&#xA;&#x9;in event atTargetSpeed&#xA;&#x9;&#xA;&#x9;in event startEmergency&#xA;&#x9;in event stopEmergency&#xA;&#xA;&#x9;var stopsAt: integer = 0&#xA;&#x9;var remainingCapacity: integer = 6&#xA;&#x9;var numPassengers: integer = 0&#xA;&#xA;&#x9;out event refreshUI&#xA;&#xA;internal:&#xA;&#x9;// FEEL FREE TO EDIT&#xA;&#x9;// e.g. add internal variables,&#xA;&#x9;//       internal events, ...&#xA;&#x9;var maxSpeed: integer = 24&#xA;&#x9;&#xA;&#x9;event openAllDoors&#xA;&#x9;event unblockDoors&#xA;&#x9;event attemptClosingDoors&#xA;&#x9;event doorsAreClosed&#xA;&#x9;event doorsAreOpened&#xA;&#x9;event checkIfMoveNeeded&#xA;&#x9;var block: boolean = false&#xA;&#x9;var hadEmergency = false&#xA;&#x9;var isMoving = false&#xA;&#x9;" name="Chr">
  <regions xmi:type="sgraph:Region" xmi:id="_M_SkgdLDEe28zv8lYWPWfQ" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_M_SkgtLDEe28zv8lYWPWfQ" name="lF1JrMoqVc" incomingTransitions="_M_SkxNLDEe28zv8lYWPWfQ">
      <regions xmi:type="sgraph:Region" xmi:id="_M_Skg9LDEe28zv8lYWPWfQ" name="TrolleyControl">
        <vertices xmi:type="sgraph:Entry" xmi:id="_M_SkhNLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkhdLDEe28zv8lYWPWfQ" specification="" target="_M_SkiNLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkhtLDEe28zv8lYWPWfQ" specification="entry / raise setTargetSpeed: 0;&#xD;&#xA;hadEmergency = true&#xD;&#xA;&#xD;&#xA;" name="EmergencyStop" incomingTransitions="_M_Skp9LDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Skh9LDEe28zv8lYWPWfQ" specification="atTargetSpeed" target="_M_SkpNLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkiNLDEe28zv8lYWPWfQ" name="NormalOperation" incomingTransitions="_M_SkhdLDEe28zv8lYWPWfQ _M_Sko9LDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkidLDEe28zv8lYWPWfQ" specification="startEmergency" target="_M_SkptLDEe28zv8lYWPWfQ"/>
          <regions xmi:type="sgraph:Region" xmi:id="_M_SkitLDEe28zv8lYWPWfQ" name="r1">
            <vertices xmi:type="sgraph:State" xmi:id="_M_Ski9LDEe28zv8lYWPWfQ" specification="entry / isMoving = true;&#xD;&#xA;raise setTargetSpeed: maxSpeed" name="Accelerating" incomingTransitions="_M_Skn9LDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkjNLDEe28zv8lYWPWfQ" specification="atTargetSpeed" target="_M_SkkdLDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_M_SkjdLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkjtLDEe28zv8lYWPWfQ" specification="" target="_M_SkmdLDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_M_Skj9LDEe28zv8lYWPWfQ" specification="" name="OnVcrrvXDl" incomingTransitions="_M_SkmNLDEe28zv8lYWPWfQ _M_SkmtLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkkNLDEe28zv8lYWPWfQ" specification="after 2000ms" target="_M_SkldLDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_M_SkkdLDEe28zv8lYWPWfQ" specification="" name="TopSpeed" incomingTransitions="_M_SkjNLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkktLDEe28zv8lYWPWfQ" specification="approachingStation [(stopsAt &amp; (1 &lt;&lt; valueof(approachingStation))) != 0]" target="_M_Skk9LDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_M_Skk9LDEe28zv8lYWPWfQ" specification="entry / raise setTargetSpeed: 0" name="Decelerating" incomingTransitions="_M_SkktLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SklNLDEe28zv8lYWPWfQ" specification="atTargetSpeed" target="_M_SkoNLDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_M_SkldLDEe28zv8lYWPWfQ" specification="entry / raise checkIfMoveNeeded;&#xD;&#xA;hadEmergency = false" name="ClosingDoorsSoon" incomingTransitions="_M_SkkNLDEe28zv8lYWPWfQ _M_Skm9LDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkltLDEe28zv8lYWPWfQ" specification="checkIfMoveNeeded [stopsAt != 0]" target="_M_SknNLDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_M_Skl9LDEe28zv8lYWPWfQ" specification="entry / stopsAt &amp;= ~(1 &lt;&lt; valueof(approachingStation));&#xD;&#xA;raise openAllDoors;&#xD;&#xA;raise refreshUI" name="HBcfzX9jIR" incomingTransitions="_M_SkodLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkmNLDEe28zv8lYWPWfQ" specification="always" target="_M_Skj9LDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_M_SkmdLDEe28zv8lYWPWfQ" incomingTransitions="_M_SkjtLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkmtLDEe28zv8lYWPWfQ" specification="default" target="_M_Skj9LDEe28zv8lYWPWfQ"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Skm9LDEe28zv8lYWPWfQ" specification="[hadEmergency == true]" target="_M_SkldLDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_M_SknNLDEe28zv8lYWPWfQ" specification="entry / raise attemptClosingDoors&#xD;&#xA;" name="ClosingDoors" incomingTransitions="_M_SkltLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkndLDEe28zv8lYWPWfQ" specification="doorsAreClosed" target="_M_SkntLDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_M_SkntLDEe28zv8lYWPWfQ" name="qiAo5cmhuM" incomingTransitions="_M_SkndLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Skn9LDEe28zv8lYWPWfQ" specification="after 1000ms" target="_M_Ski9LDEe28zv8lYWPWfQ"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_M_SkoNLDEe28zv8lYWPWfQ" specification="entry / isMoving = false" name="Arriving" incomingTransitions="_M_SklNLDEe28zv8lYWPWfQ">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkodLDEe28zv8lYWPWfQ" specification="after 1000ms" target="_M_Skl9LDEe28zv8lYWPWfQ"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkotLDEe28zv8lYWPWfQ" specification="entry / raise openAllDoors" name="EmergencyHalted" incomingTransitions="_M_SkpdLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Sko9LDEe28zv8lYWPWfQ" specification="stopEmergency" target="_M_SkiNLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkpNLDEe28zv8lYWPWfQ" specification="entry / isMoving = false" name="Arriving" incomingTransitions="_M_Skh9LDEe28zv8lYWPWfQ _M_SkqNLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkpdLDEe28zv8lYWPWfQ" specification="after 1000ms" target="_M_SkotLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:Choice" xmi:id="_M_SkptLDEe28zv8lYWPWfQ" incomingTransitions="_M_SkidLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Skp9LDEe28zv8lYWPWfQ" specification="default" target="_M_SkhtLDEe28zv8lYWPWfQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkqNLDEe28zv8lYWPWfQ" specification="[isMoving == false] / hadEmergency = true" target="_M_SkpNLDEe28zv8lYWPWfQ"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_M_SkqdLDEe28zv8lYWPWfQ" name="DoorControl">
        <vertices xmi:type="sgraph:Entry" xmi:id="_M_SkqtLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Skq9LDEe28zv8lYWPWfQ" specification="" target="_M_SkrtLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkrNLDEe28zv8lYWPWfQ" specification="entry / raise stopDoorsSignal;&#xD;&#xA;raise doorsAreClosed;&#xD;&#xA;raise closeDoors;&#xD;&#xA;raise refreshUI" name="DoorsClosed" incomingTransitions="_M_SksdLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkrdLDEe28zv8lYWPWfQ" specification="openAllDoors" target="_M_SkrtLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkrtLDEe28zv8lYWPWfQ" specification="entry / raise doorsAreOpened;&#xD;&#xA;raise openDoors;&#xD;&#xA;raise refreshUI" name="c1EaVQoSwh" incomingTransitions="_M_Skq9LDEe28zv8lYWPWfQ _M_SkrdLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Skr9LDEe28zv8lYWPWfQ" specification="attemptClosingDoors" target="_M_SksNLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SksNLDEe28zv8lYWPWfQ" specification="entry / raise startDoorsSignal&#xD;&#xA;" name="fjGdPDEo7i" incomingTransitions="_M_Skr9LDEe28zv8lYWPWfQ _M_SkstLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SksdLDEe28zv8lYWPWfQ" specification="after 1000ms [block == false]" target="_M_SkrNLDEe28zv8lYWPWfQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkstLDEe28zv8lYWPWfQ" specification="unblockDoors" target="_M_SksNLDEe28zv8lYWPWfQ"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_M_Sks9LDEe28zv8lYWPWfQ" name="PassengerControl">
        <vertices xmi:type="sgraph:State" xmi:id="_M_SktNLDEe28zv8lYWPWfQ" specification="entry / block = false;&#xD;&#xA;raise unblockDoors" name="Board" incomingTransitions="_M_SkudLDEe28zv8lYWPWfQ _M_Sku9LDEe28zv8lYWPWfQ _M_SkvdLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SktdLDEe28zv8lYWPWfQ" specification="unboard [numPassengers &lt;= 6 &amp;&amp; numPassengers > 0  &amp;&amp; block == false ] / &#xA;numPassengers -= 1;&#xA;remainingCapacity += 1;&#xA;block = true;&#xA;raise refreshUI&#xA;&#xA;" target="_M_SkvNLDEe28zv8lYWPWfQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkttLDEe28zv8lYWPWfQ" specification="board [numPassengers &lt; 6 &amp;&amp; numPassengers >= 0 &amp;&amp; block == false ]  / &#xD;&#xA;numPassengers += 1;&#xD;&#xA;remainingCapacity -= 1;&#xD;&#xA;block = true;&#xD;&#xA;raise refreshUI" target="_M_SkvNLDEe28zv8lYWPWfQ"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Skt9LDEe28zv8lYWPWfQ" specification="doorsAreClosed" target="_M_SkutLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_M_SkuNLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkudLDEe28zv8lYWPWfQ" specification="" target="_M_SktNLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkutLDEe28zv8lYWPWfQ" specification="" name="YW8lbKl1rt" incomingTransitions="_M_Skt9LDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_Sku9LDEe28zv8lYWPWfQ" specification="doorsAreOpened" target="_M_SktNLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkvNLDEe28zv8lYWPWfQ" specification="" name="aXl8RRjyOR" incomingTransitions="_M_SktdLDEe28zv8lYWPWfQ _M_SkttLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkvdLDEe28zv8lYWPWfQ" specification="after 1000ms" target="_M_SktNLDEe28zv8lYWPWfQ"/>
        </vertices>
      </regions>
      <regions xmi:type="sgraph:Region" xmi:id="_M_SkvtLDEe28zv8lYWPWfQ" name="RequestHandler">
        <vertices xmi:type="sgraph:Entry" xmi:id="_M_Skv9LDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkwNLDEe28zv8lYWPWfQ" specification="" target="_M_SkwdLDEe28zv8lYWPWfQ"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_M_SkwdLDEe28zv8lYWPWfQ" specification="exit / stopsAt |= (1 &lt;&lt; valueof(requestStop));&#xD;&#xA;raise checkIfMoveNeeded;&#xD;&#xA;raise refreshUI" name="handleRequest" incomingTransitions="_M_SkwNLDEe28zv8lYWPWfQ _M_SkwtLDEe28zv8lYWPWfQ">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkwtLDEe28zv8lYWPWfQ" specification="requestStop" target="_M_SkwdLDEe28zv8lYWPWfQ"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_M_Skw9LDEe28zv8lYWPWfQ">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_M_SkxNLDEe28zv8lYWPWfQ" specification="" target="_M_SkgtLDEe28zv8lYWPWfQ"/>
    </vertices>
  </regions>
</sgraph:Statechart>
