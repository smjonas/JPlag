<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_QfxosNLDEe2Dqqh-jNmL8Q" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var atthemoment: integer = 0&#xA;&#x9;var counter: integer = 0&#xA;&#x9;var prod: integer = 0&#xA;&#x9;var fin: integer = 0&#xA;&#x9;" name="Lor">
  <regions xmi:type="sgraph:Region" xmi:id="_QfxosdLDEe2Dqqh-jNmL8Q" name="Global">
    <vertices xmi:type="sgraph:State" xmi:id="_QfxostLDEe2Dqqh-jNmL8Q" name="At work" incomingTransitions="_QfxpCdLDEe2Dqqh-jNmL8Q">
      <regions xmi:type="sgraph:Region" xmi:id="_Qfxos9LDEe2Dqqh-jNmL8Q" name="Shifts">
        <vertices xmi:type="sgraph:Entry" xmi:id="_QfxotNLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxotdLDEe2Dqqh-jNmL8Q" specification="/ atthemoment = util.getRandomInteger(3) ; ui.shiftHighlightAssigned(atthemoment); &#xD;&#xA;factory.increaseMaterial(-(factory.getMaterial() - prod)); factory.increaseFinished(-(factory.getFinished() - fin))" target="_QfxottLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QfxottLDEe2Dqqh-jNmL8Q" specification="entry [employee.getEnergy() &lt;=25] / ui.setMsg('Too tired to work, go home!'); ui.shiftsHide" name="Waiting" incomingTransitions="_QfxotdLDEe2Dqqh-jNmL8Q _QfxouNLDEe2Dqqh-jNmL8Q _Qfxou9LDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxot9LDEe2Dqqh-jNmL8Q" specification="after 4 s [employee.getEnergy() >= 25] / ui.setMsg(&quot;Working shift.&quot;); ui.pushMsg()" target="_Qfxox9LDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxouNLDEe2Dqqh-jNmL8Q" specification="employee.shiftClicked / atthemoment = valueof(employee.shiftClicked)  ; ui.shiftHighlightAssigned(atthemoment)" target="_QfxottLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxoudLDEe2Dqqh-jNmL8Q" specification="employee.goHome" target="_QfxpDNLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QfxoutLDEe2Dqqh-jNmL8Q" name="On a shift">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxou9LDEe2Dqqh-jNmL8Q" specification="after 10 s / ui.setActions(&quot;&quot;); employee.increasePay(10); ui.popMsg(); ui.setMsg(&quot;selected shift will start soon...&quot;); ui.shiftHighlightClear ; atthemoment = util.getRandomInteger(3) ; ui.shiftHighlightAssigned(atthemoment)" target="_QfxottLDEe2Dqqh-jNmL8Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_QfxovNLDEe2Dqqh-jNmL8Q" name="Differentshifts">
            <vertices xmi:type="sgraph:State" xmi:id="_QfxovdLDEe2Dqqh-jNmL8Q" specification="entry / ui.shiftHighlightActive(1);&#xD;&#xA;ui.setActions(&quot;Assemble&quot;)" name="Assembly" incomingTransitions="_QfxoytLDEe2Dqqh-jNmL8Q">
              <regions xmi:type="sgraph:Region" xmi:id="_QfxovtLDEe2Dqqh-jNmL8Q" name="Clock3">
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxov9LDEe2Dqqh-jNmL8Q" name="NotLongEnough" incomingTransitions="_QfxoxtLDEe2Dqqh-jNmL8Q _QfxowdLDEe2Dqqh-jNmL8Q _QfxoxNLDEe2Dqqh-jNmL8Q _QfxowtLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxowNLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed [counter >= 500 &amp;&amp; factory.getMaterial() >=1]" target="_Qfxow9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxowdLDEe2Dqqh-jNmL8Q" specification="after 100 ms / counter += 100" target="_Qfxov9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxowtLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased / counter = 0" target="_Qfxov9LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxow9LDEe2Dqqh-jNmL8Q" specification="entry / counter = 0&#xD;&#xA;" name="LongEnough" incomingTransitions="_QfxowNLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxoxNLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased / &#xD;&#xA;fin += 1; factory.increaseFinished(1);&#xD;&#xA;prod = prod -1; factory.increaseMaterial(-1)" target="_Qfxov9LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_QfxoxdLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxoxtLDEe2Dqqh-jNmL8Q" specification="" target="_Qfxov9LDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_Qfxox9LDEe2Dqqh-jNmL8Q" incomingTransitions="_Qfxot9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxoyNLDEe2Dqqh-jNmL8Q" specification="[atthemoment == 0]" target="_Qfxoy9LDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxoydLDEe2Dqqh-jNmL8Q" specification="[atthemoment == 2]" target="_Qfxo5dLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxoytLDEe2Dqqh-jNmL8Q" specification="" target="_QfxovdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Qfxoy9LDEe2Dqqh-jNmL8Q" specification="entry / ui.shiftHighlightActive(0)" name="Unloading" incomingTransitions="_QfxoyNLDEe2Dqqh-jNmL8Q">
              <regions xmi:type="sgraph:Region" xmi:id="_QfxozNLDEe2Dqqh-jNmL8Q" name="ShiftInShift1">
                <vertices xmi:type="sgraph:State" xmi:id="_QfxozdLDEe2Dqqh-jNmL8Q" specification="entry / ui.setMsg(&quot;At stock.&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Toilet Break&quot;)" name="AtStock" incomingTransitions="_Qfxo1NLDEe2Dqqh-jNmL8Q _Qfxo19LDEe2Dqqh-jNmL8Q _Qfxo0tLDEe2Dqqh-jNmL8Q _Qfxo2dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxoztLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; active (Global.At_work.Shifts.On_a_shift.Differentshifts.Unloading.Clock1.LongEnough)]" target="_Qfxo0NLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxoz9LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) &#xD;&#xA;== &quot;Toilet Break&quot; &amp;&amp; active &#xD;&#xA;(Global.At_work.Shifts.On_a_shift.Differentshifts.Unloading.Clock1.LongEnough)]" target="_Qfxo2NLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo0NLDEe2Dqqh-jNmL8Q" specification="entry /ui.setActions(&quot;Walk,Pickup&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck.&quot;)&#xD;&#xA;" name="AtTruck" incomingTransitions="_QfxoztLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo0dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Pickup&quot; &amp;&amp; &#xD;&#xA;&#x9;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Unloading.Clock1.LongEnough)]" target="_Qfxo2tLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo0tLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; &#xD;&#xA;&#x9;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Unloading.Clock1.LongEnough)]" target="_QfxozdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_Qfxo09LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo1NLDEe2Dqqh-jNmL8Q" specification="" target="_QfxozdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo1dLDEe2Dqqh-jNmL8Q" specification="entry / ui.setMsg(&quot;At stock and carrying.&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Drop&quot;)&#xD;&#xA;" name="AtStockCarrying" incomingTransitions="_Qfxo29LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo1tLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; active (Global.At_work.Shifts.On_a_shift.Differentshifts.Unloading.Clock1.LongEnough)]" target="_Qfxo2tLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo19LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Drop&quot; &amp;&amp;&#xD;&#xA;&#x9;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Unloading.Clock1.LongEnough)] &#xD;&#xA;&#x9;/ prod += 1; factory.increaseMaterial(1)" target="_QfxozdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo2NLDEe2Dqqh-jNmL8Q" specification="entry / ui.setMsg(&quot;Toilet break busy.&quot;);&#xD;&#xA;ui.setActions(&quot;Done&quot;)" name="AtToilet" incomingTransitions="_Qfxoz9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo2dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Done&quot; &amp;&amp; &#xD;&#xA;&#x9;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Unloading.Clock1.LongEnough)]" target="_QfxozdLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo2tLDEe2Dqqh-jNmL8Q" specification="entry / ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck and carrying.&quot;)&#xD;&#xA;" name="AtTruckCarrying" incomingTransitions="_Qfxo0dLDEe2Dqqh-jNmL8Q _Qfxo1tLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo29LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; active (Global.At_work.Shifts.On_a_shift.Differentshifts.Unloading.Clock1.LongEnough)]" target="_Qfxo1dLDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
              <regions xmi:type="sgraph:Region" xmi:id="_Qfxo3NLDEe2Dqqh-jNmL8Q" name="Clock1">
                <vertices xmi:type="sgraph:Entry" xmi:id="_Qfxo3dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo3tLDEe2Dqqh-jNmL8Q" specification="" target="_Qfxo39LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo39LDEe2Dqqh-jNmL8Q" name="NotLongEnough" incomingTransitions="_Qfxo3tLDEe2Dqqh-jNmL8Q _Qfxo4dLDEe2Dqqh-jNmL8Q _Qfxo5NLDEe2Dqqh-jNmL8Q _Qfxo4tLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo4NLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed [counter >= 500]" target="_Qfxo49LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo4dLDEe2Dqqh-jNmL8Q" specification="after 100 ms / counter += 100" target="_Qfxo39LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo4tLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased / counter = 0" target="_Qfxo39LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo49LDEe2Dqqh-jNmL8Q" specification="exit / counter = 0" name="LongEnough" incomingTransitions="_Qfxo4NLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo5NLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased" target="_Qfxo39LDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_Qfxo5dLDEe2Dqqh-jNmL8Q" specification="entry / ui.shiftHighlightActive(2)" name="Loading" incomingTransitions="_QfxoydLDEe2Dqqh-jNmL8Q">
              <regions xmi:type="sgraph:Region" xmi:id="_Qfxo5tLDEe2Dqqh-jNmL8Q" name="ShiftInShift2">
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo59LDEe2Dqqh-jNmL8Q" specification="entry / ui.setMsg(&quot;At stock carrying a finished product.&quot;);&#xD;&#xA;ui.setActions(&quot;Walk&quot;)" name="AtStockCarrying2" incomingTransitions="_Qfxo7dLDEe2Dqqh-jNmL8Q _Qfxo79LDEe2Dqqh-jNmL8Q _Qfxo69LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo6NLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &#xD;&#xA;&quot;Walk&quot; &amp;&amp; active (Global.At_work.Shifts.On_a_shift.Differentshifts.Loading.Clock2.LongEnough)]" target="_Qfxo6dLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo6dLDEe2Dqqh-jNmL8Q" specification="entry /ui.setActions(&quot;Walk,Drop&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck carrying the finished product.&quot;)&#xD;&#xA;" name="AtTruckCarrying2" incomingTransitions="_Qfxo6NLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo6tLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Drop&quot; &amp;&amp;&#xD;&#xA;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Loading.Clock2.LongEnough)]" target="_Qfxo8tLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo69LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; &#xD;&#xA;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Loading.Clock2.LongEnough)]" target="_Qfxo59LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_Qfxo7NLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo7dLDEe2Dqqh-jNmL8Q" specification="" target="_Qfxo59LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo7tLDEe2Dqqh-jNmL8Q" specification="entry / ui.setMsg(&quot;At stock and carrying nothing.&quot;);&#xD;&#xA;ui.setActions(&quot;Walk,Pickup,Toilet Break&quot;)&#xD;&#xA;" name="AtStock2" incomingTransitions="_Qfxo89LDEe2Dqqh-jNmL8Q _Qfxo9dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo79LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Pickup&quot; &amp;&amp;&#xD;&#xA;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Loading.Clock2.LongEnough)] " target="_Qfxo59LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo8NLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; active (Global.At_work.Shifts.On_a_shift.Differentshifts.Loading.Clock2.LongEnough)]" target="_Qfxo8tLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo8dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Toilet Break&quot; &amp;&amp; &#xD;&#xA;&#x9;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Loading.Clock2.LongEnough)]" target="_Qfxo9NLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo8tLDEe2Dqqh-jNmL8Q" specification="entry / ui.setActions(&quot;Walk&quot;);&#xD;&#xA;ui.setMsg(&quot;At truck and carrying nothing.&quot;)&#xD;&#xA;" name="AtTruck2" incomingTransitions="_Qfxo6tLDEe2Dqqh-jNmL8Q _Qfxo8NLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo89LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Walk&quot; &amp;&amp; &#xD;&#xA;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Loading.Clock2.LongEnough)]" target="_Qfxo7tLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo9NLDEe2Dqqh-jNmL8Q" specification="entry / ui.setMsg(&quot;Toilet break busy.&quot;);&#xD;&#xA;ui.setActions(&quot;Done&quot;)" name="AtToilet" incomingTransitions="_Qfxo8dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo9dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased [valueof(ui.actionReleased) == &quot;Done&quot; &amp;&amp; &#xD;&#xA;&#x9;active (Global.At_work.Shifts.On_a_shift.Differentshifts.Loading.Clock2.LongEnough)]" target="_Qfxo7tLDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
              <regions xmi:type="sgraph:Region" xmi:id="_Qfxo9tLDEe2Dqqh-jNmL8Q" name="Clock2">
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo99LDEe2Dqqh-jNmL8Q" specification="exit / counter = 0" name="LongEnough" incomingTransitions="_Qfxo_dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo-NLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased" target="_Qfxo-9LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_Qfxo-dLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo-tLDEe2Dqqh-jNmL8Q" specification="" target="_Qfxo-9LDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_Qfxo-9LDEe2Dqqh-jNmL8Q" name="NotLongEnough" incomingTransitions="_Qfxo-tLDEe2Dqqh-jNmL8Q _Qfxo_NLDEe2Dqqh-jNmL8Q _Qfxo-NLDEe2Dqqh-jNmL8Q _Qfxo_tLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo_NLDEe2Dqqh-jNmL8Q" specification="after 100 ms / counter += 100" target="_Qfxo-9LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo_dLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed [counter >= 500]" target="_Qfxo99LDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_Qfxo_tLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased / counter = 0" target="_Qfxo-9LDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_Qfxo_9LDEe2Dqqh-jNmL8Q" name="Energy">
            <vertices xmi:type="sgraph:State" xmi:id="_QfxpANLDEe2Dqqh-jNmL8Q" specification="" name="EnergyDecrease" incomingTransitions="_QfxpA9LDEe2Dqqh-jNmL8Q _QfxpBdLDEe2Dqqh-jNmL8Q _QfxpBtLDEe2Dqqh-jNmL8Q _QfxpB9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpAdLDEe2Dqqh-jNmL8Q" specification="after 1 s" target="_QfxpBNLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_QfxpAtLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpA9LDEe2Dqqh-jNmL8Q" specification="/ employee.increaseEnergy(-2) " target="_QfxpANLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Choice" xmi:id="_QfxpBNLDEe2Dqqh-jNmL8Q" incomingTransitions="_QfxpAdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpBdLDEe2Dqqh-jNmL8Q" specification="[active &#xD;&#xA;&#x9;(Differentshifts.Loading.ShiftInShift2.AtToilet)]" target="_QfxpANLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpBtLDEe2Dqqh-jNmL8Q" specification="[active &#xD;&#xA;&#x9;(Differentshifts.Unloading.ShiftInShift1.AtToilet)]" target="_QfxpANLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpB9LDEe2Dqqh-jNmL8Q" specification=" / employee.increaseEnergy(-2)" target="_QfxpANLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_QfxpCNLDEe2Dqqh-jNmL8Q" name="At home" incomingTransitions="_QfxpC9LDEe2Dqqh-jNmL8Q _QfxpDdLDEe2Dqqh-jNmL8Q _QfxpDtLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpCdLDEe2Dqqh-jNmL8Q" specification="employee.goToWork / ui.shiftsShow(); ui.setMsg(&quot;At Work:&quot;); ui.pushMsg();&#xD;&#xA;ui.setMsg(&quot;selected shift will start soon...&quot;)" target="_QfxostLDEe2Dqqh-jNmL8Q"/>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_QfxpCtLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpC9LDEe2Dqqh-jNmL8Q" specification=" / ui.setMsg(&quot;At Home.&quot;);&#xD;&#xA; factory.increaseMaterial(-(factory.getMaterial() - prod));&#xD;&#xA; factory.increaseFinished(-(factory.getFinished() - fin))" target="_QfxpCNLDEe2Dqqh-jNmL8Q"/>
    </vertices>
    <vertices xmi:type="sgraph:Choice" xmi:id="_QfxpDNLDEe2Dqqh-jNmL8Q" incomingTransitions="_QfxoudLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpDdLDEe2Dqqh-jNmL8Q" specification="[employee.getEnergy() > 50] / ui.shiftsHide(); employee.increaseEnergy((100 - employee.getEnergy())) ; ui.popMsg(); ui.setMsg(&quot;At Home.&quot;)" target="_QfxpCNLDEe2Dqqh-jNmL8Q"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QfxpDtLDEe2Dqqh-jNmL8Q" specification=" / ui.shiftsHide(); employee.increaseEnergy(50) ;  ui.popMsg(); ui.setMsg(&quot;At Home.&quot;)" target="_QfxpCNLDEe2Dqqh-jNmL8Q"/>
    </vertices>
  </regions>
</sgraph:Statechart>
