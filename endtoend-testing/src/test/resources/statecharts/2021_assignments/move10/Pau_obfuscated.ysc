<?xml version="1.0" encoding="UTF-8"?>
<sgraph:Statechart xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:id="_QgD8kNLDEe2Dqqh-jNmL8Q" specification="// Don't change these options&#xA;@EventDriven&#xA;@SuperSteps(no)&#xA;&#xA;// You can make use of these interfaces in the statechart&#xA;// Do not change the interfaces&#xA;&#xA;interface util:&#xA;&#x9;// generates a uniformly pseudo-randomly distributed integer equal to 0 and smaller than the parameter.&#xA;&#x9;operation getRandomInteger(smallerThan: integer): integer&#xA;&#xA;interface employee:&#xA;&#x9;in event goToWork // received when 'go to work' button is clicked&#xA;&#x9;in event goHome // received when 'go home' button is clicked&#xA;&#x9;in event shiftClicked: integer // received when a shift button is clicked&#xA;&#x9;&#xA;&#x9;// employee's energy, as shown in UI&#xA;&#x9;operation getEnergy(): integer&#xA;&#x9;operation increaseEnergy(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// employee's pay, as shown in UI&#xA;&#x9;operation getPay(): integer&#xA;&#x9;operation increasePay(delta: integer) // use negative delta to decrease&#xA;&#xA;interface factory:&#xA;&#x9;// number of material in stock&#xA;&#x9;operation getMaterial(): integer&#xA;&#x9;operation increaseMaterial(delta: integer) // use negative delta to decrease&#xA;&#x9;&#xA;&#x9;// number of finished product in stock&#xA;&#x9;operation getFinished(): integer&#xA;&#x9;operation increaseFinished(delta: integer) // use negative delta to decrease&#xA;&#xA;interface ui:&#xA;&#x9;// set visible action-buttons at the bottom of the window&#xA;&#x9;// comma-separated string, e.g. &quot;Eat,Sleep,Work&quot; will create 3 buttons.&#xA;&#x9;// empty string will remove all buttons&#xA;&#x9;operation setActions(actions: string)&#xA;&#x9;&#xA;&#x9;// received when the left mouse button is pressed or released&#xA;&#x9;// on one of the action-buttons&#xA;&#x9;// the event value (sometimes called &quot;event parameter&quot;) is equal&#xA;&#x9;// to the string displayed on the button, e.g. &quot;Eat&quot;&#xA;&#x9;in event actionPressed: string&#xA;&#x9;in event actionReleased: string&#xA;&#x9;&#xA;&#x9;// Control the status messages in the middle of the window&#xA;&#x9;// At most 6 lines of text can be displayed.&#xA;&#x9;operation pushMsg() // increases line number to write at&#xA;&#x9;operation popMsg() // decreases line number, and removes the message below the new line number&#xA;&#x9;operation setMsg(msg: string) // sets the message at the current line number&#xA;&#x9;&#xA;&#x9;operation shiftsHide() // hides the shift type-buttons&#xA;&#x9;operation shiftsShow() // shows the shift type-buttons&#xA;&#x9;operation shiftHighlightAssigned(n: integer) // clears previous highlights and highlights the n-th shift blue&#xA;&#x9;operation shiftHighlightActive(n: integer) // clear previous highlights and highlights the n-th shift green&#xA;&#x9;operation shiftHighlightClear() // clears previous highlights&#xA;&#xA;internal:&#xA;&#x9;// Feel free to declare internal events and variables, if needed&#xA;&#x9;var numb: integer&#xA;&#x9;var atToilet: boolean&#xA;&#x9;var txt: string&#xA;&#x9;&#xA;&#x9;event walk&#xA;&#x9;event pickup&#xA;&#x9;event drop&#xA;&#x9;event toilet&#xA;&#x9;event done&#xA;&#x9;event assemble&#xA;&#xA;&#x9;&#xA;" name="Pau">
  <regions xmi:type="sgraph:Region" xmi:id="_QgD8kdLDEe2Dqqh-jNmL8Q" name="main region">
    <vertices xmi:type="sgraph:State" xmi:id="_QgD8ktLDEe2Dqqh-jNmL8Q" specification="entry/ ui.setMsg(&quot;At Work:&quot;);ui.pushMsg" name="AtWork" incomingTransitions="_QgD9EtLDEe2Dqqh-jNmL8Q">
      <regions xmi:type="sgraph:Region" xmi:id="_QgD8k9LDEe2Dqqh-jNmL8Q" name="AtWork">
        <vertices xmi:type="sgraph:State" xmi:id="_QgD8lNLDEe2Dqqh-jNmL8Q" specification="entry / ui.shiftHighlightActive(numb);&#xA;atToilet = false;&#xA;ui.setMsg(&quot;Working shift&quot;);&#xA;ui.pushMsg()&#xA;" name="ShiftAssigned" incomingTransitions="_QgD9D9LDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8ldLDEe2Dqqh-jNmL8Q" specification="after 10 s/ui.setActions('');ui.shiftsShow(); employee.increasePay(10);numb = util.getRandomInteger(3);ui.popMsg()" target="_QgD9DNLDEe2Dqqh-jNmL8Q"/>
          <regions xmi:type="sgraph:Region" xmi:id="_QgD8ltLDEe2Dqqh-jNmL8Q" name="Shifts">
            <vertices xmi:type="sgraph:State" xmi:id="_QgD8l9LDEe2Dqqh-jNmL8Q" specification="" name="entry" incomingTransitions="_QgD8m9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8mNLDEe2Dqqh-jNmL8Q" specification="after 0 ms  [numb == 0 || numb == 2] " target="_QgD8nNLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8mdLDEe2Dqqh-jNmL8Q" specification="after 0 ms  [numb == 1 ]" target="_QgD8-9LDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_QgD8mtLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8m9LDEe2Dqqh-jNmL8Q" specification="" target="_QgD8l9LDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgD8nNLDEe2Dqqh-jNmL8Q" name="unloading/loading/timers" incomingTransitions="_QgD8mNLDEe2Dqqh-jNmL8Q">
              <regions xmi:type="sgraph:Region" xmi:id="_QgD8ndLDEe2Dqqh-jNmL8Q" name="unloading/loading">
                <vertices xmi:type="sgraph:State" xmi:id="_QgD8ntLDEe2Dqqh-jNmL8Q" specification="&#xA;" name="AtTruck" incomingTransitions="_QgD8t9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8n9LDEe2Dqqh-jNmL8Q" specification="walk" target="_QgD8ttLDEe2Dqqh-jNmL8Q"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD8oNLDEe2Dqqh-jNmL8Q" name="Truck">
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8odLDEe2Dqqh-jNmL8Q" specification="entry /&#xA;ui.setActions(&quot;Walk,Pickup&quot;);&#xA;ui.setMsg(&quot;At Truck&quot;)" name="case unload" incomingTransitions="_QgD8pdLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8otLDEe2Dqqh-jNmL8Q" specification="pickup" target="_QgD8sNLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8o9LDEe2Dqqh-jNmL8Q" specification="entry /&#xA;ui.setActions(&quot;Walk&quot;);&#xA;ui.setMsg(&quot;At Truck&quot;)" name="case load" incomingTransitions="_QgD8r9LDEe2Dqqh-jNmL8Q _QgD8ptLDEe2Dqqh-jNmL8Q"/>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8pNLDEe2Dqqh-jNmL8Q" name="entry" incomingTransitions="_QgD8qNLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8pdLDEe2Dqqh-jNmL8Q" specification="after 0ms [numb == 0]" target="_QgD8odLDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8ptLDEe2Dqqh-jNmL8Q" specification="after 0ms [numb == 2]" target="_QgD8o9LDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD8p9LDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8qNLDEe2Dqqh-jNmL8Q" specification="" target="_QgD8pNLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:Entry" xmi:id="_QgD8qdLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8qtLDEe2Dqqh-jNmL8Q" specification="" target="_QgD8ttLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgD8q9LDEe2Dqqh-jNmL8Q" specification="" name="AtTruckCarrying" incomingTransitions="_QgD8w9LDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8rNLDEe2Dqqh-jNmL8Q" specification="walk" target="_QgD8wtLDEe2Dqqh-jNmL8Q"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD8rdLDEe2Dqqh-jNmL8Q" name="Truck Carrying">
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8rtLDEe2Dqqh-jNmL8Q" specification="entry / ui.setActions(&quot;Walk,Drop&quot;); &#xA;ui.setMsg(&quot;At truck, carrying finished product.&quot;)" name="case load" incomingTransitions="_QgD8tNLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8r9LDEe2Dqqh-jNmL8Q" specification="drop/factory.increaseFinished(-1)" target="_QgD8o9LDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8sNLDEe2Dqqh-jNmL8Q" specification="entry / ui.setActions(&quot;Walk&quot;); &#xA;ui.setMsg(&quot;At truck, carrying material.&quot;)" name="case unload" incomingTransitions="_QgD8otLDEe2Dqqh-jNmL8Q _QgD8tdLDEe2Dqqh-jNmL8Q"/>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD8sdLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8stLDEe2Dqqh-jNmL8Q" specification="" target="_QgD8s9LDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8s9LDEe2Dqqh-jNmL8Q" name="entry" incomingTransitions="_QgD8stLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8tNLDEe2Dqqh-jNmL8Q" specification="after 0ms [numb == 2]" target="_QgD8rtLDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8tdLDEe2Dqqh-jNmL8Q" specification="after 0ms [numb == 0]" target="_QgD8sNLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgD8ttLDEe2Dqqh-jNmL8Q" specification="&#xA;" name="AtStock" incomingTransitions="_QgD8n9LDEe2Dqqh-jNmL8Q _QgD8qtLDEe2Dqqh-jNmL8Q _QgD8ztLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8t9LDEe2Dqqh-jNmL8Q" specification="walk" target="_QgD8ntLDEe2Dqqh-jNmL8Q"/>
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8uNLDEe2Dqqh-jNmL8Q" specification="toilet" target="_QgD8zdLDEe2Dqqh-jNmL8Q"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD8udLDEe2Dqqh-jNmL8Q" name="Stock">
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8utLDEe2Dqqh-jNmL8Q" specification="entry / ui.setActions('Walk,Toilet break'); &#xA;ui.setMsg(&quot;At stock&quot;)" name="case unload" incomingTransitions="_QgD8xtLDEe2Dqqh-jNmL8Q _QgD8v9LDEe2Dqqh-jNmL8Q"/>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8u9LDEe2Dqqh-jNmL8Q" specification="entry / ui.setActions('Walk,Toilet break,Pickup'); &#xA;ui.setMsg(&quot;At stock&quot;)&#xA;" name="case load" incomingTransitions="_QgD8vtLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8vNLDEe2Dqqh-jNmL8Q" specification="pickup" target="_QgD8x9LDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8vdLDEe2Dqqh-jNmL8Q" name="entry" incomingTransitions="_QgD8wdLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8vtLDEe2Dqqh-jNmL8Q" specification="after 0ms [numb == 2]" target="_QgD8u9LDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8v9LDEe2Dqqh-jNmL8Q" specification="after 0ms [numb == 0]" target="_QgD8utLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD8wNLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8wdLDEe2Dqqh-jNmL8Q" specification="" target="_QgD8vdLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgD8wtLDEe2Dqqh-jNmL8Q" specification="" name="AtStockCarrying" incomingTransitions="_QgD8rNLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8w9LDEe2Dqqh-jNmL8Q" specification="walk" target="_QgD8q9LDEe2Dqqh-jNmL8Q"/>
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD8xNLDEe2Dqqh-jNmL8Q" name="Stock Carrying">
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8xdLDEe2Dqqh-jNmL8Q" specification="entry / ui.setActions(&quot;Walk,Drop&quot;); &#xA;ui.setMsg(&quot;At stock, carrying material.&quot;)" name="case unload" incomingTransitions="_QgD8zNLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8xtLDEe2Dqqh-jNmL8Q" specification="drop/factory.increaseMaterial(1)" target="_QgD8utLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8x9LDEe2Dqqh-jNmL8Q" specification="entry / ui.setActions(&quot;Walk&quot;); &#xA;ui.setMsg(&quot;At stock, carrying finished product.&quot;)" name="case load" incomingTransitions="_QgD8vNLDEe2Dqqh-jNmL8Q _QgD8y9LDEe2Dqqh-jNmL8Q"/>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD8yNLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8ydLDEe2Dqqh-jNmL8Q" specification="" target="_QgD8ytLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8ytLDEe2Dqqh-jNmL8Q" name="entry" incomingTransitions="_QgD8ydLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8y9LDEe2Dqqh-jNmL8Q" specification="after 0ms [numb == 2]" target="_QgD8x9LDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8zNLDEe2Dqqh-jNmL8Q" specification="after 0ms [numb == 0]" target="_QgD8xdLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgD8zdLDEe2Dqqh-jNmL8Q" specification="entry/ui.setActions(&quot;&quot;);ui.setActions(&quot;Done&quot;); atToilet = true;ui.setMsg(&quot;At toilet.&quot;)" name="AtToilet" incomingTransitions="_QgD8uNLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8ztLDEe2Dqqh-jNmL8Q" specification="done/atToilet = false" target="_QgD8ttLDEe2Dqqh-jNmL8Q"/>
                </vertices>
              </regions>
              <regions xmi:type="sgraph:Region" xmi:id="_QgD8z9LDEe2Dqqh-jNmL8Q" name="timers">
                <vertices xmi:type="sgraph:Entry" xmi:id="_QgD80NLDEe2Dqqh-jNmL8Q">
                  <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD80dLDEe2Dqqh-jNmL8Q" specification="" target="_QgD80tLDEe2Dqqh-jNmL8Q"/>
                </vertices>
                <vertices xmi:type="sgraph:State" xmi:id="_QgD80tLDEe2Dqqh-jNmL8Q" name="Timers" incomingTransitions="_QgD80dLDEe2Dqqh-jNmL8Q">
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD809LDEe2Dqqh-jNmL8Q" name="Walk">
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD81NLDEe2Dqqh-jNmL8Q" name="Start" incomingTransitions="_QgD82tLDEe2Dqqh-jNmL8Q _QgD819LDEe2Dqqh-jNmL8Q _QgD82NLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD81dLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Walk']" target="_QgD81tLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD81tLDEe2Dqqh-jNmL8Q" name="Time" incomingTransitions="_QgD81dLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD819LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Walk']" target="_QgD81NLDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD82NLDEe2Dqqh-jNmL8Q" specification="after 500ms/raise walk" target="_QgD81NLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD82dLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD82tLDEe2Dqqh-jNmL8Q" specification="&#xA;" target="_QgD81NLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD829LDEe2Dqqh-jNmL8Q" name="Pickup">
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD83NLDEe2Dqqh-jNmL8Q" name="Start" incomingTransitions="_QgD84tLDEe2Dqqh-jNmL8Q _QgD839LDEe2Dqqh-jNmL8Q _QgD84NLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD83dLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Pickup']" target="_QgD83tLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD83tLDEe2Dqqh-jNmL8Q" name="Time" incomingTransitions="_QgD83dLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD839LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Pickup']" target="_QgD83NLDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD84NLDEe2Dqqh-jNmL8Q" specification="after 500ms/raise pickup" target="_QgD83NLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD84dLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD84tLDEe2Dqqh-jNmL8Q" specification="&#xA;" target="_QgD83NLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD849LDEe2Dqqh-jNmL8Q" name="Drop">
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD85NLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD85dLDEe2Dqqh-jNmL8Q" specification="&#xA;" target="_QgD86dLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD85tLDEe2Dqqh-jNmL8Q" name="Time" incomingTransitions="_QgD86tLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD859LDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Drop']" target="_QgD86dLDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD86NLDEe2Dqqh-jNmL8Q" specification="after 500ms/raise drop" target="_QgD86dLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD86dLDEe2Dqqh-jNmL8Q" name="Start" incomingTransitions="_QgD85dLDEe2Dqqh-jNmL8Q _QgD859LDEe2Dqqh-jNmL8Q _QgD86NLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD86tLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Drop']" target="_QgD85tLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD869LDEe2Dqqh-jNmL8Q" name="Done">
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD87NLDEe2Dqqh-jNmL8Q" specification="" name="Time" incomingTransitions="_QgD88tLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD87dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Done']" target="_QgD88dLDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD87tLDEe2Dqqh-jNmL8Q" specification="after 500ms/raise done" target="_QgD88dLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD879LDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD88NLDEe2Dqqh-jNmL8Q" specification="&#xA;" target="_QgD88dLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD88dLDEe2Dqqh-jNmL8Q" specification="" name="Start" incomingTransitions="_QgD88NLDEe2Dqqh-jNmL8Q _QgD87dLDEe2Dqqh-jNmL8Q _QgD87tLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD88tLDEe2Dqqh-jNmL8Q" specification="after 10 ms ,ui.actionPressed[valueof(ui.actionPressed) == 'Done']" target="_QgD87NLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                  <regions xmi:type="sgraph:Region" xmi:id="_QgD889LDEe2Dqqh-jNmL8Q" name="ToiletBreak">
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD89NLDEe2Dqqh-jNmL8Q" specification="" name="Time" incomingTransitions="_QgD8-tLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD89dLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Toilet break']" target="_QgD8-dLDEe2Dqqh-jNmL8Q"/>
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD89tLDEe2Dqqh-jNmL8Q" specification="after 500ms/raise toilet" target="_QgD8-dLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD899LDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8-NLDEe2Dqqh-jNmL8Q" specification="&#xA;" target="_QgD8-dLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                    <vertices xmi:type="sgraph:State" xmi:id="_QgD8-dLDEe2Dqqh-jNmL8Q" name="Start" incomingTransitions="_QgD8-NLDEe2Dqqh-jNmL8Q _QgD89dLDEe2Dqqh-jNmL8Q _QgD89tLDEe2Dqqh-jNmL8Q">
                      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8-tLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Toilet break']" target="_QgD89NLDEe2Dqqh-jNmL8Q"/>
                    </vertices>
                  </regions>
                </vertices>
              </regions>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgD8-9LDEe2Dqqh-jNmL8Q" specification="entry / &#xA;ui.setActions(&quot;Assemble&quot;);&#xA;txt = factory.getMaterial > 0 ? &quot;You can assemble&quot;:&quot;Not enough materials left&quot;;&#xA;ui.setMsg(txt)" name="assemble" incomingTransitions="_QgD8_NLDEe2Dqqh-jNmL8Q _QgD8mdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8_NLDEe2Dqqh-jNmL8Q" specification="assemble[factory.getMaterial > 0]/ factory.increaseMaterial(-1);factory.increaseFinished(1)" target="_QgD8-9LDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_QgD8_dLDEe2Dqqh-jNmL8Q" name="EnergyTimer">
            <vertices xmi:type="sgraph:State" xmi:id="_QgD8_tLDEe2Dqqh-jNmL8Q" name="energy" incomingTransitions="_QgD9AdLDEe2Dqqh-jNmL8Q _QgD8_9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD8_9LDEe2Dqqh-jNmL8Q" specification="after 1s[atToilet == false]/employee.increaseEnergy(-2)" target="_QgD8_tLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:Entry" xmi:id="_QgD9ANLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9AdLDEe2Dqqh-jNmL8Q" specification="" target="_QgD8_tLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
          <regions xmi:type="sgraph:Region" xmi:id="_QgD9AtLDEe2Dqqh-jNmL8Q" name="AssemblyTimer">
            <vertices xmi:type="sgraph:Entry" xmi:id="_QgD9A9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9BNLDEe2Dqqh-jNmL8Q" specification="&#xA;" target="_QgD9CNLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgD9BdLDEe2Dqqh-jNmL8Q" name="Time" incomingTransitions="_QgD9CdLDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9BtLDEe2Dqqh-jNmL8Q" specification="ui.actionReleased[valueof(ui.actionReleased)== 'Assemble']" target="_QgD9CNLDEe2Dqqh-jNmL8Q"/>
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9B9LDEe2Dqqh-jNmL8Q" specification="after 500ms/raise assemble" target="_QgD9CNLDEe2Dqqh-jNmL8Q"/>
            </vertices>
            <vertices xmi:type="sgraph:State" xmi:id="_QgD9CNLDEe2Dqqh-jNmL8Q" name="Start" incomingTransitions="_QgD9BNLDEe2Dqqh-jNmL8Q _QgD9BtLDEe2Dqqh-jNmL8Q _QgD9B9LDEe2Dqqh-jNmL8Q">
              <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9CdLDEe2Dqqh-jNmL8Q" specification="ui.actionPressed[valueof(ui.actionPressed) == 'Assemble']" target="_QgD9BdLDEe2Dqqh-jNmL8Q"/>
            </vertices>
          </regions>
        </vertices>
        <vertices xmi:type="sgraph:Entry" xmi:id="_QgD9CtLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9C9LDEe2Dqqh-jNmL8Q" specification="" target="_QgD9DNLDEe2Dqqh-jNmL8Q"/>
        </vertices>
        <vertices xmi:type="sgraph:State" xmi:id="_QgD9DNLDEe2Dqqh-jNmL8Q" specification="entry / ui.shiftHighlightAssigned(numb);&#xA;txt = employee.getEnergy>=25 ? &quot;Selected shift will start soon...&quot;:&quot;Not enough energy left. Go home&quot;;&#xA;ui.setMsg(txt)&#xA;&#xA;" name="GracePeriod" incomingTransitions="_QgD9C9LDEe2Dqqh-jNmL8Q _QgD9DdLDEe2Dqqh-jNmL8Q _QgD8ldLDEe2Dqqh-jNmL8Q">
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9DdLDEe2Dqqh-jNmL8Q" specification="employee.shiftClicked / numb = valueof(employee.shiftClicked)" target="_QgD9DNLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9DtLDEe2Dqqh-jNmL8Q" specification="employee.goHome / ui.popMsg();ui.setMsg(&quot;At home&quot;);ui.shiftsHide();&#xA;employee.increaseEnergy(50 )" target="_QgD9ENLDEe2Dqqh-jNmL8Q"/>
          <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9D9LDEe2Dqqh-jNmL8Q" specification="after 4 s[employee.getEnergy>=25]" target="_QgD8lNLDEe2Dqqh-jNmL8Q"/>
        </vertices>
      </regions>
    </vertices>
    <vertices xmi:type="sgraph:State" xmi:id="_QgD9ENLDEe2Dqqh-jNmL8Q" specification="" name="AtHome" incomingTransitions="_QgD9FNLDEe2Dqqh-jNmL8Q _QgD9EdLDEe2Dqqh-jNmL8Q _QgD9DtLDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9EdLDEe2Dqqh-jNmL8Q" specification="employee.goHome / ui.setMsg(&quot;Already at home.&quot;)" target="_QgD9ENLDEe2Dqqh-jNmL8Q"/>
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9EtLDEe2Dqqh-jNmL8Q" specification="employee.goToWork / ui.setMsg(&quot;At work&quot;); ui.shiftsShow(); numb = util.getRandomInteger(3)&#xA;" target="_QgD8ktLDEe2Dqqh-jNmL8Q"/>
    </vertices>
    <vertices xmi:type="sgraph:Entry" xmi:id="_QgD9E9LDEe2Dqqh-jNmL8Q">
      <outgoingTransitions xmi:type="sgraph:Transition" xmi:id="_QgD9FNLDEe2Dqqh-jNmL8Q" specification="/ui.setMsg(&quot;At home&quot;)" target="_QgD9ENLDEe2Dqqh-jNmL8Q"/>
    </vertices>
  </regions>
</sgraph:Statechart>
